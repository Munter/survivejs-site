<feed xmlns="http://www.w3.org/2005/Atom"><title >SurviveJS</title><link href="http://survivejs.com/atom.xml" rel="self"> </link><link href="http://survivejs.com/"> </link><updated >2016-02-25T17:25:33+02:00</updated><id >http://survivejs.com/</id><author ><name >Juho Vepsäläinen</name><email ></email></author><entry ><title >react-styleguidist - Style guide generator for React - Interview with Artem Sapegin</title><id >areactstyleguidiststyleguidegeneratorforreactinterviewwithartemsapegin2016-02-22t00:00:00+02:00</id><link href="http://survivejs.com/blog/styleguidist-interview"></link><updated >2016-02-22T00:00:00+02:00</updated><content type="html">&lt;p&gt;People have been developing style guides for their sites and applications for quite a while. They define basic building blocks and aesthetics. This is valuable as it helps you to keep your design consistent and communicate it to your developers better. Style guides can also help to bridge designers with developers.&lt;/p&gt;
&lt;p&gt;Given React is component driven, the approach works beautifully here. Artem Sapegin has developed a tool known as &lt;a href=&quot;https://github.com/sapegin/react-styleguidist&quot;&gt;react-styleguidist&lt;/a&gt; for this purpose. It allows you to reach towards these ideals within the context of React. To understand the tool a bit better, read on.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;https://s.gravatar.com/avatar/16a1493bcecf09614c413e571c371e96?s=200&quot; alt=&quot;Artem Sapegin&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;I’m a front-end developer at &lt;a href=&quot;http://here.com/&quot;&gt;Here&lt;/a&gt; in Berlin where I’m trying to make work of my colleagues easier by developing internal tools using React.&lt;/p&gt;
&lt;p&gt;I like to spend my spare time making photographs, traveling, reading, drinking coffee and stroking my dogs.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-react-styleguidist-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-react-styleguidist-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe &lt;em&gt;react-styleguidist&lt;/em&gt; to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-react-styleguidist-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It’s a style guide generator for your React components. Each component has a props table and documentation section that renders from Markdown file where every code sample transformed into a playground with rendered code and a code editor where you can change its code and see how component behave with different props.&lt;/p&gt;
&lt;p&gt;You can also use react-styleguidist as a workbench to develop new components: it has a dev-server and hot-reloads any changes in components’ code and Markdown documentation.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-react-styleguidist-&quot; id=&quot;why-did-you-develop-react-styleguidist-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop &lt;em&gt;react-styleguidist&lt;/em&gt;?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-react-styleguidist-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Because I couldn’t find any good tool to make a style guide for my project at work.&lt;/p&gt;
&lt;p&gt;Then I was trying to hack something and the idea of using Webpack loaders to load and hot-reload examples and Markdown documentation came to my mind.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The biggest challenge with developing react-styleguidist is integration with users’ projects: Webpack loaders, styles and everything else should be isolated as much as possible and react-styleguidist’s code shouldn’t clash with project’s code. At the same time, it should be easy to integrate react-styleguidist to the user’s project and the user should be able to modify style guide as they like.&lt;/p&gt;
&lt;p&gt;Most of the bugs at our GitHub issues are conflicts with users projects’ configuration. So there are still a lot of work in this area and any help is very appreciated.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React and front-end in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think the React ecosystem will stabilize a bit and opinionated libraries, that wrap many smaller libraries, will emerge to make starting new projects for the beginners a lot easier.&lt;/p&gt;
&lt;p&gt;I hope developers will find and document more best practices of developing React applications. I also hope that tools will be easier to configure or at least it will be easier to find out what’s wrong with your configuration.&lt;/p&gt;
&lt;p&gt;Developing with React now has many benefits and very exciting, but requires you to answer too many questions and always be a bit unsure about your work.&lt;/p&gt;
&lt;p&gt;I also think that in a few years we will have a common standard for components that would work in React as well as other frameworks like Angular 7 or Ember 9. Like we had jQuery plugins before.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/sebmck&quot;&gt;Sebastian McKenzie&lt;/a&gt;, a Babel’s creator.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thank you for your interview Artem. I wish the best of luck to your project!&lt;/p&gt;
&lt;p&gt;react-styleguidist just reached an important milestone with its &lt;a href=&quot;https://github.com/sapegin/react-styleguidist/releases/tag/2.0.0&quot;&gt;2.0.0 release&lt;/a&gt;. See also &lt;a href=&quot;https://github.com/sapegin/react-styleguidist&quot;&gt;the GitHub repository&lt;/a&gt; of the project.&lt;/p&gt;
&lt;p&gt;To get a better idea of what kind of style guides the tool is able to produce, check out &lt;a href=&quot;https://sapegin.github.io/react-styleguidist/&quot;&gt;the example style guide&lt;/a&gt;.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v2.0.0</title><id >asurvivejswebpackandreactv2002016-02-15t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs200"></link><updated >2016-02-15T00:00:00+02:00</updated><content type="html">&lt;p&gt;When I started this project roughly a year ago I had no idea how rewarding and demanding one it would be. Writing books is way harder than it sounds. Especially when you go through the self-publishing route, you have a lot to learn!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I believe this little journey has been worthwhile. And if it&amp;#39;s up to me, it&amp;#39;s a journey that will continue. Even though I am very happy to announce the final 2.0 version of the book, I see that as a milestone, not as an end. But what an important milestone it is.&lt;/p&gt;
&lt;p&gt;The goal of this release was to produce something worth publishing in a paper format. The greatest advantage of a digital book is that you can push updates to it at will. This is something you lose with paperbacks. As a result greater amount of finesse is required.&lt;/p&gt;
&lt;p&gt;I feel this conscious effort towards a paperback contributed to the book in a nice way. It&amp;#39;s not the perfect book and I am absolutely certain it&amp;#39;s not everyone&amp;#39;s cup of coffee. All I can hope is that someone finds it valuable and worth paying for.&lt;/p&gt;
&lt;p&gt;The 2.0 version of the book is now available through &lt;a href=&quot;http://www.amazon.com/SurviveJS-Webpack-React-apprentice-master/dp/152391050X/&quot;&gt;Amazon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I want to thank you, my readers, for providing an ample amount of feedback. It is one of those things that keeps me going. As a result, all of us learn in the process. I hope we can continue this fruitful collaboration for a long while.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-2-0-0-&quot; id=&quot;book-improvements-2-0-0-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;2.0.0&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-2-0-0-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 45 commits went to book since the last release candidate. A lot of the changes made were cosmetic (formatting related). You can find the important changes below.&lt;/p&gt;
&lt;p&gt;See GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v2.0.0-rc4...v2.0.0&quot;&gt;all changes&lt;/a&gt;. Especially the &amp;quot;Files changed&amp;quot; tab is highly useful.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Put emphasis on the fact that there&amp;#39;s a community in case you are struggling with something. No need to struggle alone.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added a tip about &lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;HyperScript&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/hyperscript-helpers&quot;&gt;hyperscript-helpers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://developit.github.io/preact/&quot;&gt;preact&lt;/a&gt; and &lt;a href=&quot;https://github.com/Lucifier129/react-lite&quot;&gt;react-lite&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped duplicate tip related to &lt;code&gt;import&lt;/code&gt;. This was covered in the previous chapter already.&lt;/li&gt;
&lt;li&gt;Explained React &lt;code&gt;state&lt;/code&gt; in far greater detail. This was treated too lightly earlier.&lt;/li&gt;
&lt;li&gt;Explained how/why component hierarchy is improved.&lt;/li&gt;
&lt;li&gt;Explained React &lt;code&gt;props&lt;/code&gt; in greater detail.&lt;/li&gt;
&lt;li&gt;Pushed input trimming logic to higher level. If you try to empty a field, it will simply cancel editing now and revert back to the original value.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Made &lt;code&gt;Editable&lt;/code&gt; example diff based. It feels a bit easier to follow this way.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Linked better to the testing chapter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned about &lt;code&gt;[contenthash]&lt;/code&gt; placeholder. Unfortunately it doesn&amp;#39;t work as well as you might expect yet. See &lt;a href=&quot;https://github.com/webpack/webpack/issues/672&quot;&gt;Webpack issue #672&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#styling-react&quot; id=&quot;styling-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Styling React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#styling-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned how to enable sourcemaps for CSS. You need to set Webpack&amp;#39;s &lt;code&gt;output.publicPath&lt;/code&gt; for this to work.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#structuring-react-projects&quot; id=&quot;structuring-react-projects&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Structuring React Projects&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#structuring-react-projects&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://github.com/gajus/create-index&quot;&gt;gajus/create-index&lt;/a&gt; as it can help a lot with the suggested structures.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You could say the past month or two have been pretty tough mentally. Dark winter and cold didn&amp;#39;t entirely help. I&amp;#39;ve been picking up my exercise habits, though, so it&amp;#39;s looking a little better now. That said, a break of day or two might be in order in the near future.&lt;/p&gt;
&lt;p&gt;I still have improvements planned. I&amp;#39;ve listed these based on priority:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Improve site outlook. Basically I&amp;#39;ll redo the landing page of the site and do a few UX tweaks here and there. I have a nice plan, just need to focus on this for a full day to get it done.&lt;/li&gt;
&lt;li&gt;Write &lt;strong&gt;async&lt;/strong&gt; appendix. This would show how to deal with asynchronous concerns through Alt. It&amp;#39;s a common problem and worth covering.&lt;/li&gt;
&lt;li&gt;Develop &lt;a href=&quot;http://redux.js.org/&quot;&gt;Redux&lt;/a&gt; and &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;Immutable.js&lt;/a&gt; based version of the Kanban.&lt;/li&gt;
&lt;li&gt;Port book content to Redux. I still have to decide whether or not to introduce Immutable.js there as well. It would be a good fit, but I haven&amp;#39;t made up my mind yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know there are more topics that would be nice to cover. Based on what I&amp;#39;ve seen and heard, focusing on Redux would be a nice next step. But if you have other ideas, please let me know.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#expanding-business&quot; id=&quot;expanding-business&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Expanding Business&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#expanding-business&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In order to keep the effort sustainable I&amp;#39;ve been forced to think about financials. Currently the primary problem is that I am relying on single sales. Even if you found my work valuable, I&amp;#39;m sure you wouldn&amp;#39;t want to buy the same book many times. I wouldn&amp;#39;t for sure.&lt;/p&gt;
&lt;p&gt;As a result I&amp;#39;ve been thinking about an alternative model that would support the current setup. I would love to build an &amp;quot;inner circle&amp;quot; of supporters. You would gain access to a private Slack at least and gain early access to new content. You would literally help me guide the effort. You would get all this against a monthly fee (say $20) and you could opt-out any time you want.&lt;/p&gt;
&lt;p&gt;If you want to participate in a supporter scheme like this, &lt;a href=&quot;http://eepurl.com/bQAeuH&quot;&gt;sign up to the supporter mailing list&lt;/a&gt;. Signing up doesn&amp;#39;t bind you to anything. This is more of an experiment to see if there are people interested. Provided there are enough, it will make sense to go ahead with the scheme and build a real business around this.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thank you for being a part of this project. I would have given up ages ago if it wasn&amp;#39;t for the community. I hope you enjoy this milestone release!&lt;/p&gt;
&lt;p&gt;Remember that you can find up to date code from &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;the book repository&lt;/a&gt;. The stable version of the book is available at the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;You can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work. It&amp;#39;s good for me to know where you struggle so I can tweak the book.&lt;/p&gt;
&lt;p&gt;You can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt; or &lt;a href=&quot;https://www.createspace.com/6052981&quot;&gt;CreateSpace&lt;/a&gt; (paper version). Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v2.0.0-rc4</title><id >asurvivejswebpackandreactv200rc42016-02-07t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs200-rc4"></link><updated >2016-02-07T00:00:00+02:00</updated><content type="html">&lt;p&gt;&lt;a href=&quot;../survivejs200-rc3&quot;&gt;The previous release candidate&lt;/a&gt; prompted a nice amount of feedback. I&amp;#39;ve taken that into account in this release. I have a date for the final in sight and I won&amp;#39;t be making any significant changes for the final release.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s not going to be the perfect book in any way, but it&amp;#39;s absolutely far better book than I could have pulled off on my own. Given this is my first effort, it has been a great learning experience. And it continues to be so.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I split my efforts during the past two weeks towards a couple of separate goals. My primary goal was to smooth out remaining bigger issues. &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;The book chat&lt;/a&gt; helped a lot in this regard. I also enjoy discussing with my readers through mail. It&amp;#39;s great to get multiple perspectives on the content.&lt;/p&gt;
&lt;p&gt;My secondary goals included getting some coding done and preparing for a little presentation I have promised to give. I don&amp;#39;t normally get invited to talk so I like to get the most out of these special occasions.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#work-on-react-components&quot; id=&quot;work-on-react-components&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Work on React Components&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#work-on-react-components&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since you need to be able to practice what you preach, I did a little API design experiment in form of &lt;a href=&quot;https://bebraw.github.io/react-pagify/&quot;&gt;react-pagify&lt;/a&gt;. It is a paginator component for React. I know it sounds like a trivial one, but the goal here was to end up with something flexible while providing a minimal API surface. This was achieved partially through utilizing &lt;a href=&quot;https://facebook.github.io/react/docs/context.html&quot;&gt;React context&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ve been considering using a similar design for &lt;a href=&quot;https://bebraw.github.io/reactabular/&quot;&gt;reactabular&lt;/a&gt;, a data table component of mine. This was a good chance to experiment with the ideas in smaller scale. I think the design will fit &lt;em&gt;reactabular&lt;/em&gt; well and allow me to improve its API further without sacrificing any functionality.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#preparing-for-february-meetup&quot; id=&quot;preparing-for-february-meetup&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Preparing for February Meetup&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#preparing-for-february-meetup&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Beyond component development I put thought towards a presentation I have to give at &lt;a href=&quot;http://www.meetup.com/frontendfinland/events/228369937/&quot;&gt;February Meetup of Frontend Finland&lt;/a&gt;. Given I rather write than talk, this gave me a good excuse to write an opinion piece. I believe there&amp;#39;s room for &lt;a href=&quot;../towards-common-components&quot;&gt;a common component definition&lt;/a&gt;. Something like this would allow us to make the ecosystem stronger and more vibrant.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#improving-kanban&quot; id=&quot;improving-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Improving Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#improving-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Kanban implementation has improved a notch. It won&amp;#39;t allow you to drag an input that&amp;#39;s being edited anymore. I also found &lt;a href=&quot;https://stackoverflow.com/questions/33108567/webpack-hash-the-same-for-css-and-js-files-both-change-when-only-one-should&quot;&gt;a book related question&lt;/a&gt; at Stack Overflow. The problem had to do with hashing and cache invalidation.&lt;/p&gt;
&lt;p&gt;If CSS was altered in the current, it also changed the hash of JavaScript. This is definitely something you don&amp;#39;t want to happen. It took a while to understand what&amp;#39;s going on, but then it hit me. Given we were using &lt;code&gt;require&lt;/code&gt; to bring the CSS to JavaScript, this made it end up in the same chunk. And that&amp;#39;s the core of the issue here.&lt;/p&gt;
&lt;p&gt;I realized the only good way to resolve this issue was to separate the CSS into a chunk of its own. This change has been implemented in the book now. The Kanban CSS gets loaded through an &lt;em&gt;entry chunk&lt;/em&gt; of its own. The only gotcha with this approach is that it will generate a redundant JavaScript. It&amp;#39;s annoying but something you can live with. To keep track of the problem, I &lt;a href=&quot;https://github.com/webpack/webpack/issues/1967&quot;&gt;opened an issue&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introducing-npm-install-webpack-plugin-&quot; id=&quot;introducing-npm-install-webpack-plugin-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introducing &lt;em&gt;npm-install-webpack-plugin&lt;/em&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introducing-npm-install-webpack-plugin-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One of my personal annoyances with the book has been all those &lt;code&gt;npm install&lt;/code&gt; parts. Often they just break the flow as you have to jump into terminal and do some work there. Fortunately there&amp;#39;s a good solution for this problem now.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ericclemmons/npm-install-webpack-plugin&quot;&gt;npm-install-webpack-plugin&lt;/a&gt; by Eric Clemmons is able to detect when you &lt;code&gt;require&lt;/code&gt; something in your project and install the dependency in question. It&amp;#39;s not completely perfect yet as it doesn&amp;#39;t allow us to choose between &lt;code&gt;--save&lt;/code&gt; and &lt;code&gt;--save-dev&lt;/code&gt; easily based on context yet. I&amp;#39;ve discussed about this with Eric and it&amp;#39;s likely a feature that will be developed in the near future. I wrote a little proof of concept and it worked somewhat nicely.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s always fun to discover small gems like this plugin. You can still install all your dependencies by hand of course, but at least now there&amp;#39;s a good option that can save some trouble.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-2-0-0-rc4-&quot; id=&quot;book-improvements-2-0-0-rc4-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;2.0.0-rc4&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-2-0-0-rc4-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 68 commits went to &lt;code&gt;2.0.0-rc4&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;See GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v2.0.0-rc3...v2.0.0-rc4&quot;&gt;all changes&lt;/a&gt;. Especially the &amp;quot;Files changed&amp;quot; tab is highly useful.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clarified the book repository structure and mentioned the repository defaults to &lt;code&gt;dev&lt;/code&gt;. That&amp;#39;s not likely the branch you want to see so there&amp;#39;s an image showing how to find the one you are after.&lt;/li&gt;
&lt;li&gt;Linked to &lt;a href=&quot;https://github.com/survivejs/ama/issues&quot;&gt;SurviveJS AmA&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added an example of output you might get when running Webpack the first time.&lt;/li&gt;
&lt;li&gt;Moved to use object format for &lt;code&gt;entry&lt;/code&gt;. This leads to less hassle later on when dealing with styling and hashing so this felt like a good move.&lt;/li&gt;
&lt;li&gt;Dropped redundant &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; mention.&lt;/li&gt;
&lt;li&gt;Explained &lt;code&gt;0.0.0.0&lt;/code&gt; idea earlier on so you might actually find it in case you are using a virtual machine.&lt;/li&gt;
&lt;li&gt;Explained &lt;code&gt;eval&lt;/code&gt; options in greater detail. Now it&amp;#39;s clearer that options starting with &lt;code&gt;eval-&lt;/code&gt; emit sourcemaps as a part of JavaScript code. Better performance, but obviously this is a bad idea for production usage as it bloats the bundle.&lt;/li&gt;
&lt;li&gt;Integrated &lt;em&gt;npm-install-webpack-plugin&lt;/em&gt; so that plenty of those &lt;code&gt;npm install&lt;/code&gt; bits could be dropped.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Put emphasis on the fact why &lt;code&gt;include&lt;/code&gt; is used at the loader definition. I strongly recommend using it just for the sake of improved performance. This also documents how you expect Webpack to parse your project.&lt;/li&gt;
&lt;li&gt;Added a tip showing how to use brace expansion with npm. Example: &lt;code&gt;npm i babel-preset-{es2015,react} -D&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-array-includes&quot;&gt;babel-plugin-array-includes&lt;/a&gt; to SurviveJS preset. Given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;array.includes&lt;/a&gt; is a part of the standard now, this felt like a good chance to begin using it over &lt;code&gt;indexOf&lt;/code&gt; in certain places.&lt;/li&gt;
&lt;li&gt;Mentioned alternatives to shimming &lt;code&gt;Object.assign&lt;/code&gt; through Babel.&lt;/li&gt;
&lt;li&gt;Explained how to develop your own Babel presets.&lt;/li&gt;
&lt;li&gt;Mentioned that React developer tools won&amp;#39;t work if you are using Webpack in the iframe mode.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-react-require&quot;&gt;babel-plugin-react-require&lt;/a&gt; as an alternative to including &lt;code&gt;React&lt;/code&gt; for function based components.&lt;/li&gt;
&lt;li&gt;Improved flow around the part where HMR is set up with React. Now the content is discussed in a more approachable order.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simplified &lt;strong&gt;Generating Ids&lt;/strong&gt; section. It&amp;#39;s the same content, but in simpler form.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/autobind-decorator&quot;&gt;autobind-decorator&lt;/a&gt;. That&amp;#39;s an interesting looking alternative at least.&lt;/li&gt;
&lt;li&gt;Explained the &lt;code&gt;ref&lt;/code&gt; idea in greater detail.&lt;/li&gt;
&lt;li&gt;Explained how &lt;code&gt;Note&lt;/code&gt; state changes are communicated in greater detail.&lt;/li&gt;
&lt;li&gt;Discussed the problem of &lt;code&gt;state&lt;/code&gt;. This is something you need to think a lot in the context of React.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained &lt;code&gt;Object.assign&lt;/code&gt;. Given it&amp;#39;s not that common yet, it felt like a good idea to explain why and how it is used here.&lt;/li&gt;
&lt;li&gt;Simplified code examples so that they are easier to copy from Markdown. That&amp;#39;s how I like to read the book by the way.&lt;/li&gt;
&lt;li&gt;Used &lt;code&gt;includes&lt;/code&gt; over &lt;code&gt;indexOf&lt;/code&gt; where it made sense.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped &lt;code&gt;constructor&lt;/code&gt; from &lt;code&gt;Lane&lt;/code&gt;. Even though binding the lane id to methods worked this way, it&amp;#39;s often an anti-pattern to map a prop this way. This is true particularly if the value of a prop can change. It binds through property initializers now.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;stopPropagation&lt;/code&gt; to &lt;code&gt;deleteNote&lt;/code&gt; to avoid issues with hovering.&lt;/li&gt;
&lt;li&gt;Mentioned that &lt;code&gt;Editable&lt;/code&gt; uses &lt;strong&gt;uncontrolled&lt;/strong&gt; design and discussed &lt;strong&gt;controlled&lt;/strong&gt; alternative.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simplified logic by introducing &lt;code&gt;includes&lt;/code&gt; to code.&lt;/li&gt;
&lt;li&gt;Fixed editing behavior during dragging. This means an additional check needed to add to &lt;code&gt;Note&lt;/code&gt; so that we know to enable/disable dragging based on editing state. This is a good example of the importance of state management.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simplified &lt;code&gt;DefinePlugin&lt;/code&gt; declaration to form &lt;code&gt;&amp;#39;process.env.NODE_ENV&amp;#39;: &amp;#39;&amp;quot;production&amp;quot;&amp;#39;&lt;/code&gt;. &lt;code&gt;JSON.stringify&lt;/code&gt; felt a little too verbose and it didn&amp;#39;t communicate the idea as well.&lt;/li&gt;
&lt;li&gt;Added a checklist of &lt;code&gt;dependencies&lt;/code&gt; you should see before starting to split your bundles.&lt;/li&gt;
&lt;li&gt;Renamed &lt;code&gt;Clean&lt;/code&gt; to &lt;code&gt;CleanPlugin&lt;/code&gt; in the sake of consistency. Other plugins have &lt;code&gt;Plugin&lt;/code&gt; suffix so this one should have one too.&lt;/li&gt;
&lt;li&gt;Dropped the mention of &lt;code&gt;autoprefixer-loader&lt;/code&gt; given it has been deprecated. Use &lt;code&gt;postcss-loader&lt;/code&gt; instead.&lt;/li&gt;
&lt;li&gt;Explained how to improve caching behavior by loading CSS through an entry chunk. This won&amp;#39;t work for each and every case, but it felt like a decent solution here as it fixes hashing. That was the main goal here after all.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react-&quot; id=&quot;testing-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Moved from &lt;em&gt;phantomjs&lt;/em&gt; to &lt;em&gt;phantomjs-prebuilt&lt;/em&gt; as the package was renamed.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://jsverify.github.io/&quot;&gt;JSVerify&lt;/a&gt;, a property testing tool.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/invariant&quot;&gt;invariant&lt;/a&gt; package.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#understanding-decorators&quot; id=&quot;understanding-decorators&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Understanding Decorators&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#understanding-decorators&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained how to enable decorators in Babel 6.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#troubleshooting&quot; id=&quot;troubleshooting&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Troubleshooting&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#troubleshooting&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained how to deal with &lt;em&gt;Warning: setState(...)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Explained how to deal with &lt;em&gt;Warning: React attempted to reuse markup&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Content-wise I&amp;#39;m done. I am still willing to do minor tweaks based on your feedback, but major work has to wait for the next releases. I can&amp;#39;t wait to get back to a normal release cycle.&lt;/p&gt;
&lt;p&gt;I will have to proof the content. In other words, I will have to go through it very carefully a couple of times and try to catch any remaining issues. No doubt some will remain, but that&amp;#39;s how books work. I will also have to craft a cover for the paper version and figure out what to put on the backside and spine. If nothing else, at least I&amp;#39;ll get something to put on my bookshelf out of this!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are working through the book, remember that you can find up to date code from &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;the book repository&lt;/a&gt;. Remember that you can find the stable version at the &lt;code&gt;master&lt;/code&gt; branch or you can look up a specific tag.&lt;/p&gt;
&lt;p&gt;You can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work. It&amp;#39;s good for me to know where you struggle so I can tweak the book.&lt;/p&gt;
&lt;p&gt;You can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >Towards a Common Component Definition</title><id >atowardsacommoncomponentdefinition2016-02-02t00:00:00+02:00</id><link href="http://survivejs.com/blog/towards-common-components"></link><updated >2016-02-02T00:00:00+02:00</updated><content type="html">&lt;p&gt;There has been talk of JavaScript fatigue. It&amp;#39;s true the field is progressing fast. And as you move fast, it can be tiring for sure. Fortunately, as we understand better what we are doing, we can actually standardize our ways of doing. That should take away some of the pain.&lt;/p&gt;
&lt;p&gt;Eventually development made in frameworks and libraries tends to flow back to the web platform itself. I believe one of the key advances will be a movement towards common component definitions.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#solving-javascript-in-html-or-html-in-javascript-&quot; id=&quot;solving-javascript-in-html-or-html-in-javascript-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Solving &lt;strong&gt;JavaScript in HTML&lt;/strong&gt; or &lt;strong&gt;HTML in JavaScript&lt;/strong&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#solving-javascript-in-html-or-html-in-javascript-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are two main ways to approach components in the web. You can either try to solve &lt;strong&gt;JavaScript in HTML&lt;/strong&gt; or &lt;strong&gt;HTML in JavaScript&lt;/strong&gt;. This doesn&amp;#39;t mean there won&amp;#39;t be any JavaScript. It&amp;#39;s more about how it&amp;#39;s being treated. In the former approach you leave structural aspects to HTML side of the fence while in the latter you push them to JavaScript.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;JavaScript in HTML&lt;/em&gt; relies on templating. There&amp;#39;s standardization for the approach in form of &lt;a href=&quot;http://webcomponents.org/&quot;&gt;Web Components&lt;/a&gt; (example: &lt;code&gt;&amp;lt;x-gif src=&amp;quot;probably_cats.gif&amp;quot;&amp;gt;&amp;lt;/x-gif&amp;gt;&lt;/code&gt;). Frameworks, such as &lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular&lt;/a&gt; or &lt;a href=&quot;http://emberjs.com/&quot;&gt;Ember&lt;/a&gt;, implement a templating solution of their own. Both have made moves that will allow you to consume Web Components from both frameworks, though.&lt;/p&gt;
&lt;p&gt;Libraries like &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://dekujs.github.io/deku/&quot;&gt;Deku&lt;/a&gt;, and &lt;a href=&quot;http://cycle.js.org/&quot;&gt;Cycle&lt;/a&gt;, fall to the &lt;em&gt;HTML in JavaScript&lt;/em&gt; category. Here we can use a format, such as &lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;hyperscript&lt;/a&gt; (plain JavaScript) or &lt;a href=&quot;https://facebook.github.io/jsx/&quot;&gt;JSX&lt;/a&gt; (XMLish syntax compiled to JavaScript). In this approach you will perform possible templating operations (for example if, looping) using JavaScript itself.&lt;/p&gt;
&lt;p&gt;It is possible to &lt;a href=&quot;https://facebook.github.io/react/docs/webcomponents.html&quot;&gt;use the approaches together in React&lt;/a&gt;. At the moment the match isn&amp;#39;t ideal as the programming models differ and that causes friction. React documentation suggests that you wrap your Web Components within React components of their own. That is the same approach you would use with a library such as jQuery. In short, you can use Web Components with a library like React, but it might not be very fun yet.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-challenge-for-component-authors&quot; id=&quot;the-challenge-for-component-authors&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;The Challenge for Component Authors&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#the-challenge-for-component-authors&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;During the past few years it has become apparent component oriented approach fits the web and web applications well. We&amp;#39;re still paying a price from the fact that the web is a content oriented platform by design. That said, developing full blown web applications is far easier these days than it was ten years ago. There are still plenty of issues to resolve, though.&lt;/p&gt;
&lt;p&gt;Even though &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; makes it almost ridiculously easy to share your components, we aren&amp;#39;t quite there yet. It might be easy to consume JavaScript through it, but aspects like styling are still partially unresolved. As a result we have CSS conventions, processors, and a lot of many other solutions like &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS Modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is quite telling that &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;, a popular HTML, CSS, and JavaScript framework, has its own implementations for &lt;a href=&quot;https://angular-ui.github.io/bootstrap/&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://kaliber5.github.io/ember-bootstrap/&quot;&gt;Ember&lt;/a&gt;, and &lt;a href=&quot;https://react-bootstrap.github.io/&quot;&gt;React&lt;/a&gt;. Even though I appreciate the efforts of the people behind the projects, surely we must be able to resolve these kind of things better. Perhaps that&amp;#39;s something Web Components could provide us?&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#sharing-components-at-the-html-in-javascript-domain&quot; id=&quot;sharing-components-at-the-html-in-javascript-domain&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Sharing Components at the &lt;strong&gt;HTML in JavaScript&lt;/strong&gt; Domain&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#sharing-components-at-the-html-in-javascript-domain&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Although Web Components might be the longer term solution, there could be something that could be achieved for &lt;strong&gt;HTML in JavaScript&lt;/strong&gt; type libraries like React, Deku, or Cycle. After all, even a small win is a win. And anything we can do to battle unnecessary fragmentation is good in my eyes.&lt;/p&gt;
&lt;p&gt;Currently any component I develop for React is useful only within React context. I find this a little problematic as I would love to share my work with a larger amount of people. I am sure this applies to other component authors too, and this would benefit the JavaScript community on the whole.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2015/10/07/react-v0.14.html&quot;&gt;React 0.14&lt;/a&gt; introduced a feature known as stateless functional components. To give you an example, consider the one from their release notes (slightly modified for readability):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// A functional component using an ES2015 (ES6) arrow function:&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; &gt;const&lt;/span&gt; Aquarium &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot; &gt;const&lt;/span&gt; fish &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot; &gt;getFish&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;species&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot; &gt;return&lt;/span&gt; &lt;span class=&quot;token operator&quot; &gt;&amp;lt;&lt;/span&gt;Tank&lt;span class=&quot;token operator&quot; &gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;fish&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;/&lt;/span&gt;Tank&lt;span class=&quot;token operator&quot; &gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Or with destructuring and an implicit return, simply:&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; &gt;const&lt;/span&gt; Aquarium &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;species&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;
  &lt;span class=&quot;token operator&quot; &gt;&amp;lt;&lt;/span&gt;Tank&lt;span class=&quot;token operator&quot; &gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;getFish&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;species&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot; &gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;/&lt;/span&gt;Tank&lt;span class=&quot;token operator&quot; &gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Then use: &amp;lt;Aquarium species=&quot;rainbowfish&quot; /&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the definition looks simple, that&amp;#39;s because it is. A function based component like this cannot do much, but they are still highly useful! The best feature is that the syntax can be seen as something React agnostic! You could compile that JSX to Hyperscript and use that as an intermediate format to mediate between libraries.&lt;/p&gt;
&lt;p&gt;Components like this don&amp;#39;t require a direct dependency on React thanks to &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-react-require&quot;&gt;babel-plugin-react-require&lt;/a&gt;. The plugin injects &lt;code&gt;import React from &amp;#39;react&amp;#39;;&lt;/code&gt; so that the JSX transpilation process works. It would be possible to pull this off with other libraries as well.&lt;/p&gt;
&lt;p&gt;There are proposals that would allow you to write &lt;a href=&quot;https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State&quot;&gt;stateful functions&lt;/a&gt;. Deku implements something like &lt;a href=&quot;https://dekujs.github.io/deku/docs/advanced/context.html&quot;&gt;React context&lt;/a&gt; (read-only within the tree). Adopting ideas like these would give more room for potential sharing.&lt;/p&gt;
&lt;p&gt;Even though you cannot do absolutely everything with function based components, they allow you to achieve quite much! I believe adopting the core ideas would allow larger scale sharing of components between libraries. Currently solutions like Deku or Cycle feel like islands of their own compared to the continent of React. Building bridges wouldn&amp;#39;t hurt.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There have been interesting developments in the React world itself. Libraries, such as &lt;a href=&quot;https://github.com/Lucifier129/react-lite&quot;&gt;react-lite&lt;/a&gt; and &lt;a href=&quot;https://developit.github.io/preact/&quot;&gt;Preact&lt;/a&gt;, provide much lighter ways to achieve the same results as using vanilla React might.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think we&amp;#39;ll begin to see adoption of Web Components this year especially as frameworks like Angular and Ember allow you to consume them. The biggest benefit of following the standards is that you shield yourself from some of the churn. And of course you avoid vendor lock-in!&lt;/p&gt;
&lt;p&gt;I hope we see a similar movement within the React world. That would benefit the community as a whole and give more freedom for component authors. Even though having more standard ways of defining basic components would benefit libraries other than React initially, I believe this development could flow back to the React ecosystem as well.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v2.0.0-rc3</title><id >asurvivejswebpackandreactv200rc32016-01-22t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs200-rc3"></link><updated >2016-01-22T00:00:00+02:00</updated><content type="html">&lt;p&gt;If the previous &lt;a href=&quot;../survivejs200-rc2&quot;&gt;release candidate&lt;/a&gt; had few changes, this one is the opposite. I consider this good news as it&amp;#39;s better to catch bigger issues now rather than later. Thanks for feedback!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I managed to improve &lt;a href=&quot;https://github.com/survivejs/redux-demo&quot;&gt;the Redux version of Kanban&lt;/a&gt;. Most importantly I integrated &lt;a href=&quot;https://www.npmjs.com/package/redux-devtools&quot;&gt;redux-devtools&lt;/a&gt; to it. The implementation could probably use a few more tweaks, but that&amp;#39;s not the priority right now.&lt;/p&gt;
&lt;p&gt;Thanks to reader feedback, the Kanban implementation has improved in various places. The UX is a little better now and the logic is clearer in certain parts. These are small touches that are worth doing. I still need to update certain screenshots at the book to match the current status, but the technical parts are there.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/html-webpack-plugin&quot;&gt;html-webpack-plugin&lt;/a&gt; reached a new major version. Unfortunately this broke compatibility with &lt;a href=&quot;https://www.npmjs.com/package/html-webpack-template&quot;&gt;html-webpack-template&lt;/a&gt; temporarily. There&amp;#39;s a compatible version of the latter available as a tagged version. The problem has been resolved in the current version.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s starting to look good. I will be very happy to get this puppy out of the door. Who said writing books is easy? :)&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-2-0-0-rc3-&quot; id=&quot;book-improvements-2-0-0-rc3-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;2.0.0-rc3&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-2-0-0-rc3-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 58 commits went to &lt;code&gt;2.0.0-rc3&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;On general level I tidied up arrow syntax. I.e. instead of &lt;code&gt;(name) =&amp;gt; ...&lt;/code&gt; you might see &lt;code&gt;name =&amp;gt; ...&lt;/code&gt;. The latter form is less noisy so that&amp;#39;s used where it makes sense. Feel free to use either one you prefer, though.&lt;/p&gt;
&lt;p&gt;See GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v2.0.0-rc2...v2.0.0-rc3&quot;&gt;all changes&lt;/a&gt;. Especially the &amp;quot;Files changed&amp;quot; tab is highly useful.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To make it easier to use the book, I wrote a section on how to approach it. There&amp;#39;s no one right way and it all depends on what you know already and how you prefer to learn. You could, for instance, jump straight to the React bits and read Webpack ones after that.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Suggested the usage of &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; in addition to the official &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Node.js packages&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Defined a starter &lt;em&gt;index.html&lt;/em&gt; by hand. Now &lt;em&gt;html-webpack-plugin&lt;/em&gt; gets discussed later in the book. It felt like introducing it so early could be distracting. It&amp;#39;s better to start with something people are familiar with and move from there.&lt;/li&gt;
&lt;li&gt;Improved flow overall. Now it should be a little easier to follow.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped the mention that &lt;em&gt;stage 2&lt;/em&gt; features are included in Babel. That&amp;#39;s not true anymore given the book uses Babel 6.&lt;/li&gt;
&lt;li&gt;Corrected naming. &lt;em&gt;Class properties&lt;/em&gt; -&amp;gt; &lt;em&gt;property initializers&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Included &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-transform-object-assign&quot;&gt;babel-plugin-transform-object-assign&lt;/a&gt; to the project preset. This allows us to use the standard &lt;code&gt;Object.assign&lt;/code&gt; while keeping it legacy compatible. One less direct dependency to worry about!&lt;/li&gt;
&lt;li&gt;Simplified &amp;quot;Rendering Through &lt;code&gt;index.jsx&lt;/code&gt;&amp;quot; greatly. This was possible thanks to the fact that &lt;em&gt;html-webpack-plugin&lt;/em&gt; is discussed later.&lt;/li&gt;
&lt;li&gt;Dropped the mention of &lt;a href=&quot;https://github.com/gaearon/react-transform-catch-errors&quot;&gt;react-transform-catch-errors&lt;/a&gt;. No need for that anymore given there&amp;#39;s a Babel preset now that deals with the details.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Changed editing logic to use &lt;code&gt;defaultValue&lt;/code&gt; instead of &lt;code&gt;placeholder&lt;/code&gt; while setting the input caret to the end. This achieved by using a &lt;code&gt;ref&lt;/code&gt; with a callback. It&amp;#39;s a small trick that&amp;#39;s worth knowing and covering as it gives you more control just for cases like this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped &lt;em&gt;object-assign&lt;/em&gt; dependency. This isn&amp;#39;t needed anymore given we go through Babel now. We can use just &lt;code&gt;Object.assign&lt;/code&gt; directly and it will work.&lt;/li&gt;
&lt;li&gt;Cleaned up the implementation of &lt;em&gt;storage.js&lt;/em&gt;. Now it&amp;#39;s all ES6.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Renamed &lt;code&gt;NoteStore.get&lt;/code&gt; and &lt;code&gt;NoteStore.getNotesByIds&lt;/code&gt; to make it unambiguous.&lt;/li&gt;
&lt;li&gt;Annotated &lt;code&gt;NoteStorage.getNotesByIds&lt;/code&gt; in detail. There&amp;#39;s quite a bit going on so this felt like a good idea.&lt;/li&gt;
&lt;li&gt;Improved UX of lanes. Now there are separate controls for editing and removing lanes. You can begin to edit a lane name by clicking anywhere on the lane header. The only exception to that rule is adding a note to it. In that case we trigger &lt;code&gt;stopPropagation&lt;/code&gt; to override the default bubbling behavior.&lt;/li&gt;
&lt;li&gt;Converted &lt;code&gt;console.log&lt;/code&gt; to use backtick syntax where it felt like a good idea. A little easier to read.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Converted &lt;code&gt;console.log&lt;/code&gt; to use backtick syntax where it felt like a good idea.&lt;/li&gt;
&lt;li&gt;Removed &lt;code&gt;removeNote&lt;/code&gt; and wrote the logic inline into &lt;code&gt;attachToLane&lt;/code&gt;. Simpler and easier to understand.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Moved &lt;em&gt;html-webpack-plugin&lt;/em&gt; bits here. Now there&amp;#39;s a single section where I discuss the approach. Far neater!&lt;/li&gt;
&lt;li&gt;Made sure &lt;em&gt;webpack-clean-plugin&lt;/em&gt; isn&amp;#39;t in verbose mode. This breaks Webpack stats so it&amp;#39;s better to do it this way for now. The problem is that the plugin &lt;a href=&quot;https://github.com/johnagan/clean-webpack-plugin/issues/11&quot;&gt;uses Webpack API wrong&lt;/a&gt; and goes through &lt;code&gt;console&lt;/code&gt; instead of the logging API that Webpack provides. I&amp;#39;ll try to get the plugin fixed in the near future.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#typing-with-react-&quot; id=&quot;typing-with-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Typing with React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#typing-with-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped redundant &lt;code&gt;onDelete&lt;/code&gt; &lt;code&gt;propType&lt;/code&gt; from &lt;code&gt;Note&lt;/code&gt;. This isn&amp;#39;t needed at all as it&amp;#39;s enough to assert it on &lt;code&gt;Editable&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#linting-in-webpack&quot; id=&quot;linting-in-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Linting in Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#linting-in-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Recommended the usage of &lt;code&gt;&amp;quot;extends&amp;quot;: &amp;quot;eslint:recommended&amp;quot;,&lt;/code&gt; at &lt;em&gt;.eslintrc&lt;/em&gt;. It&amp;#39;s a good starting point.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#authoring-libraries&quot; id=&quot;authoring-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Authoring Libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#authoring-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Changed &lt;em&gt;package.json&lt;/em&gt; example to use namespacing and added some newlines. Cleaner to read and use.&lt;/li&gt;
&lt;li&gt;Explained various ways to bump a version in greater detail.&lt;/li&gt;
&lt;li&gt;Clarified why to preprocess your distribution files instead of including them to your version control.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#language-features&quot; id=&quot;language-features&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Language Features&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#language-features&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Showed how to return an object easily when using the arrow notation for functions.&lt;/li&gt;
&lt;li&gt;Expanded on string interpolation.&lt;/li&gt;
&lt;li&gt;Added a section on object shorthands.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As usual, I will work based on your feedback. I have a couple of discussion points in mind I want to expand upon. And I need to get those screenshots done. The nice thing is that there aren&amp;#39;t that many content related tasks yet! So in short, it&amp;#39;s starting to look good.&lt;/p&gt;
&lt;p&gt;After I have done the tweaks I have in mind, I&amp;#39;ll move to the next step with my publication process to get the first paper version done. Interesting times.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are working through the book, remember that you can find up to date code from &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;the book repository&lt;/a&gt;. I maintain the stable version at the &lt;code&gt;master&lt;/code&gt; branch. For technical reasons the repository shows you the development version, though. This is just to make it easier to contribute to the book.&lt;/p&gt;
&lt;p&gt;Remember that you can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work. It&amp;#39;s good for me to know where you struggle so I can tweak the book.&lt;/p&gt;
&lt;p&gt;You can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v2.0.0-rc2</title><id >asurvivejswebpackandreactv200rc22016-01-10t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs200-rc2"></link><updated >2016-01-10T00:00:00+02:00</updated><content type="html">&lt;p&gt;Not a lot has happened since the previous &lt;a href=&quot;../survivejs200-rc1&quot;&gt;release candidate&lt;/a&gt;. The biggest change has to do with a little bug that the recent release of Babel 6.4 revealed. All property initializer based declarations were missing a semicolon as Babel treated them in a too lax way before. This has been fixed in this release candidate.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We&amp;#39;re on a good track as far as I can see. It&amp;#39;s not the perfect book, but no book is. In any case, the development will continue even after the release. To prepare for the future, I made sure &lt;a href=&quot;https://github.com/survivejs/redux-demo&quot;&gt;the Redux version of Kanban&lt;/a&gt; is up to date.&lt;/p&gt;
&lt;p&gt;The next bigger effort is porting the chapters to it. The implementation will most likely live still as I&amp;#39;ll want to given &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;Immutable.js&lt;/a&gt; a go. I feel discussing these two topics could be valuable to a lot of readers.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#experimenting-with-webpack&quot; id=&quot;experimenting-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Experimenting with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#experimenting-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I experimented with a higher level format for configuring Webpack. You can see my work in the form of &lt;a href=&quot;https://github.com/survivejs/react-component-boilerplate/blob/webpackrc/.webpackrc&quot;&gt;.webpackrc&lt;/a&gt;. There&amp;#39;s a little parser that converts the JSON format into the one we all are more or less familiar with.&lt;/p&gt;
&lt;p&gt;I am not the only one who is looking into this problem. Jason Quense developed a prototype known as &lt;a href=&quot;https://github.com/jquense/webpack-config-utils&quot;&gt;webpack-config-utils&lt;/a&gt;. The idea is to provide a DSL that hides some problems of the current format. Most importantly it&amp;#39;s able to give us good errors.&lt;/p&gt;
&lt;p&gt;A user known as @scriptjs has led an effort to push Webpack into a Babel style monorepo. There&amp;#39;s an &lt;a href=&quot;https://github.com/webpack-lab/webpack/wiki/Presets&quot;&gt;early specification&lt;/a&gt;. The approach is quite close to &lt;em&gt;.webpackrc&lt;/em&gt; and we&amp;#39;ve been collaborating on it.&lt;/p&gt;
&lt;p&gt;Tobias Koppers, the author of Webpack, has prepared a specification known as &lt;a href=&quot;https://github.com/webpack/concord&quot;&gt;Concord&lt;/a&gt;. It&amp;#39;s yet another way to solve these issues. Especially the mimetype, loader mapping is highly interesting.&lt;/p&gt;
&lt;p&gt;I hope something good comes out of these experiments and we can resolve some of the pain points of the tool. Even though it&amp;#39;s quite nice already, there is always room for improvement.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-2-0-0-rc2-&quot; id=&quot;book-improvements-2-0-0-rc2-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;2.0.0-rc2&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-2-0-0-rc2-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 17 commits went to &lt;code&gt;2.0.0-rc2&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v2.0.0-rc1...v2.0.0-rc2&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Showed how to polyfill &lt;code&gt;Promise&lt;/code&gt; through &lt;code&gt;require(&amp;#39;es6-promise&amp;#39;).polyfill()&lt;/code&gt;. This is good to know if you have to run on a legacy platform.&lt;/li&gt;
&lt;li&gt;Added a brief description of HMR just to get the basic point through.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;code&gt;netstat -na | grep 8080&lt;/code&gt; as that&amp;#39;s useful for checking whether or not the port is available.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Set up a &lt;a href=&quot;https://github.com/survivejs/babel-preset-survivejs-kanban&quot;&gt;custom Babel preset&lt;/a&gt; to make the project a little lighter.&lt;/li&gt;
&lt;li&gt;Explained Webpack loader declarations. This is something good to be aware of so it felt like a good place to go through it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned that &lt;code&gt;this.setState&lt;/code&gt; is required for committing data to &lt;code&gt;state&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Added missing semicolons to property initializers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added missing semicolons to property initializers.&lt;/li&gt;
&lt;li&gt;Cleaned up &lt;code&gt;update&lt;/code&gt; method slightly. Returning early is a good practice.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react-&quot; id=&quot;testing-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixed &lt;code&gt;Editable&lt;/code&gt; import paths. They were missing &lt;code&gt;..&lt;/code&gt;&amp;#39;s.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#language-features&quot; id=&quot;language-features&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Language Features&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#language-features&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added missing semicolons to property initializers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I will tweak the book based on your feedback as usual and start certain preparations. I expect the final version will be out in a week or two. After that we are back to usual cadence. I hope to maintain a monthly release cycle at least. Currently a lot of decisions are made based on the situation.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are working through the book, remember that you can find up to date code from &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;the book repository&lt;/a&gt;. This time there weren&amp;#39;t a lot of changes fortunately.&lt;/p&gt;
&lt;p&gt;Remember that you can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work. It&amp;#39;s good for me to know where you struggle so I can tweak the book.&lt;/p&gt;
&lt;p&gt;You can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v2.0.0-rc1</title><id >asurvivejswebpackandreactv200rc12016-01-06t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs200-rc1"></link><updated >2016-01-06T00:00:00+02:00</updated><content type="html">&lt;p&gt;Since the &lt;a href=&quot;../survivejs200-beta2&quot;&gt;beta&lt;/a&gt; was launched, I&amp;#39;ve been working on remaining improvements. This has mostly meant tuning the existing content, although there are some new bits as well.&lt;/p&gt;
&lt;p&gt;Obviously the released book won&amp;#39;t be complete in sense that it contains everything you need to know about React and surrounded technologies. But I believe it amounts to something. Given the nature of the effort, the coverage will slowly but surely improve over time.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-compared-to-pete-hunt-s-learning-recommendation&quot; id=&quot;book-compared-to-pete-hunt-s-learning-recommendation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Compared to Pete Hunt&amp;#39;s Learning Recommendation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-compared-to-pete-hunt-s-learning-recommendation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Compared to &lt;a href=&quot;https://github.com/petehunt/react-howto&quot;&gt;Pete Hunt&amp;#39;s official learning recommendation&lt;/a&gt; we&amp;#39;re doing quite well. The book covers most of the issues he mentions. Mainly the book is missing information on routing, &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;Immutable.js&lt;/a&gt;, &lt;a href=&quot;https://facebook.github.io/relay/&quot;&gt;Relay&lt;/a&gt;, &lt;a href=&quot;https://netflix.github.io/falcor/&quot;&gt;Falcor&lt;/a&gt;, and such topics. I&amp;#39;m not worried, though. These topics can be discussed in detail at a later time. And there&amp;#39;s plenty of other material available already.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;#39;ve improved the book based on your feedback. I also ate my own dogfood and went through it myself. This revealed some issues (mainly code formatting) and helped me to simplify certain portions further.&lt;/p&gt;
&lt;p&gt;I also wrote a little appendix that should inspire you to think about how to structure your application. There&amp;#39;s no one true way. Rather, as with all things React, there&amp;#39;s a lot of flexibility available.&lt;/p&gt;
&lt;p&gt;Feedback is still welcome of course. I&amp;#39;ll spend more time with the content and start pushing certain other bits to get a nice release done.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-2-0-0-rc1-&quot; id=&quot;book-improvements-2-0-0-rc1-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;2.0.0-rc1&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-2-0-0-rc1-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 79 commits went to &lt;code&gt;2.0.0-rc1&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v2.0.0-beta2...v2.0.0-rc1&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained the point of appendices.&lt;/li&gt;
&lt;li&gt;Added more sectioning to make the points clearer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-compared&quot; id=&quot;webpack-compared&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack Compared&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-compared&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added more sectioning. Better be consistent with that.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Moved &lt;code&gt;require&lt;/code&gt; statements to use &lt;code&gt;const&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. This feels more consistent given &lt;code&gt;const&lt;/code&gt;s are used anyway.&lt;/li&gt;
&lt;li&gt;Added more terminal output to make expectations clearer.&lt;/li&gt;
&lt;li&gt;Added a section about &lt;em&gt;HMR on Windows&lt;/em&gt;. The default setup won&amp;#39;t work on all versions of Windows so I added an alternative. It&amp;#39;s not as efficient as it uses polling.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv&lt;/a&gt;. That&amp;#39;s handy for managing environment variables through a module of its own.&lt;/li&gt;
&lt;li&gt;Made sure &lt;em&gt;babel-loader&lt;/em&gt; caching gets enabled through &lt;code&gt;babel?cacheDirectory&lt;/code&gt;. This helps especially with rebuild performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixed Babel settings passing. Instead of &lt;code&gt;babel?stage=1&lt;/code&gt; you&amp;#39;ll want to use &lt;code&gt;babel?presets[]=react,presets[]=es2015&lt;/code&gt; kind of format. It&amp;#39;s cleaner to use &lt;em&gt;.babelrc&lt;/em&gt;, though.&lt;/li&gt;
&lt;li&gt;Defined a section for &lt;em&gt;Using Babel for Webpack Configuration&lt;/em&gt; and expanded on the idea. If you want to use &lt;em&gt;webpack.config.babel.js&lt;/em&gt;, you need to have &lt;a href=&quot;https://www.npmjs.com/package/babel-register&quot;&gt;babel-register&lt;/a&gt; installed to your project.&lt;/li&gt;
&lt;li&gt;Moved the setup to use &lt;a href=&quot;https://www.npmjs.com/package/babel-preset-react-hmre&quot;&gt;babel-preset-react-hmre&lt;/a&gt;. This simplifies the Babel setup a lot!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Restructured for clarity. There are less steps now and the chapter gets faster to the point.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added missing subsections to the Flux explanation. This is consistent with the rest of the book now.&lt;/li&gt;
&lt;li&gt;Explained the difference between a &lt;em&gt;ponyfill&lt;/em&gt; and a &lt;em&gt;polyfill&lt;/em&gt;. Former don&amp;#39;t override native methods whereas latter do.&lt;/li&gt;
&lt;li&gt;Cleaned up code examples. They should be easier to follow now.&lt;/li&gt;
&lt;li&gt;Defaulted to the term &lt;em&gt;universal rendering&lt;/em&gt; over &lt;em&gt;isomorphic&lt;/em&gt; given it seems that&amp;#39;s winning over. The term &lt;em&gt;isomorphic&lt;/em&gt; is still mentioned, though.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Renamed &lt;code&gt;this.addItem&lt;/code&gt; as more specific &lt;code&gt;this.addLane&lt;/code&gt; to communicate the intent better.&lt;/li&gt;
&lt;li&gt;Pushed &lt;em&gt;On Data Dependencies and &lt;code&gt;waitFor&lt;/code&gt;&lt;/em&gt; to a more appropriate place in the chapter. Earlier it broke the flow a bit.&lt;/li&gt;
&lt;li&gt;Explained the need for association (notes to lane) better.&lt;/li&gt;
&lt;li&gt;Added missing &lt;code&gt;constructor&lt;/code&gt; bits to the &lt;code&gt;Lane&lt;/code&gt; code examples.&lt;/li&gt;
&lt;li&gt;Simplified add/remove annotations of the code examples to make them easier to copy and follow.&lt;/li&gt;
&lt;li&gt;Moved from &lt;code&gt;defaultValue&lt;/code&gt; to &lt;code&gt;placeholder&lt;/code&gt; at &lt;code&gt;Editable&lt;/code&gt;. This is a cleaner approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clarified the point that HTML5 Drag and Drop based backend is now separate from React DnD core.&lt;/li&gt;
&lt;li&gt;Made the code examples clearer to follow.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Updated terminal output to match the current state.&lt;/li&gt;
&lt;li&gt;Explained &lt;em&gt;Defining a &lt;code&gt;vendor&lt;/code&gt; Entry Point&lt;/em&gt; in greater detail.&lt;/li&gt;
&lt;li&gt;Linked to &lt;a href=&quot;https://www.npmjs.com/package/extract-text-webpack-plugin&quot;&gt;ExtractTextPlugin&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Simplified deployment configuration. It&amp;#39;s enough to do just &lt;code&gt;&amp;quot;deploy&amp;quot;: &amp;quot;gh-pages -d build&amp;quot;&lt;/code&gt; given &lt;em&gt;gh-pages&lt;/em&gt; provides a CLI tool these days.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react-&quot; id=&quot;testing-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped &lt;code&gt;require(&amp;#39;babel/register&amp;#39;)&lt;/code&gt; mention. This isn&amp;#39;t needed in the current setup anymore.&lt;/li&gt;
&lt;li&gt;Added missing id to &lt;code&gt;NoteContent&lt;/code&gt; at &lt;code&gt;Note&lt;/code&gt; test to mute a propType warning.&lt;/li&gt;
&lt;li&gt;Simplified Babel setup.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#linting-in-webpack&quot; id=&quot;linting-in-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Linting in Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#linting-in-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/eslint-friendly-formatter&quot;&gt;eslint-friendly-formatter&lt;/a&gt; and ESLint &lt;code&gt;--format&lt;/code&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#authoring-libraries&quot; id=&quot;authoring-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Authoring Libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#authoring-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/irish-pub&quot;&gt;irish-pub&lt;/a&gt;. This is a useful tool for checking what your package looks like before hitting &lt;code&gt;npm publish&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Clarified &lt;em&gt;Dealing with Preprocessing&lt;/em&gt; so it&amp;#39;s easier to understand the point.&lt;/li&gt;
&lt;li&gt;Modernized &lt;code&gt;lib/post_install.js&lt;/code&gt; script.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#structuring-react-projects&quot; id=&quot;structuring-react-projects&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Structuring React Projects&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#structuring-react-projects&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;New content. This appendix gives you some ideas on how to proceed with &lt;a href=&quot;../../webpack_react/structuring_react_projects&quot;&gt;structuring React projects&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#language-features&quot; id=&quot;language-features&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Language Features&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#language-features&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added an example of &lt;em&gt;aliasing imports&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Added an example of &lt;em&gt;Classes and Modules&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Added more examples to property initializers.&lt;/li&gt;
&lt;li&gt;Explained arrow functions more accurately.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As usual, I&amp;#39;ll remain responsive to feedback. I&amp;#39;m prepared to do minor tweaks to the book. Major development will have to wait for subsequent versions.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ll most likely spend time on some technical development. The site could use some tweaks and there are certain ideas I must prototype.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are working through the book, remember that you can find up to date code from &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;the book repository&lt;/a&gt;. I know it&amp;#39;s a little inconvenient to catch up with changes, but what can you do. :)&lt;/p&gt;
&lt;p&gt;Remember that you can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work. It has been very instructive to work through various issue with my readers. This is useful for all parties involved.&lt;/p&gt;
&lt;p&gt;You can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >Codemod - Refactoring Code Programmatically - Interview with Ramana Venkata</title><id >acodemodrefactoringcodeprogrammaticallyinterviewwithramanavenkata2016-01-01t00:00:00+02:00</id><link href="http://survivejs.com/blog/codemod-interview"></link><updated >2016-01-01T00:00:00+02:00</updated><content type="html">&lt;p&gt;Performing big changes to a codebase is always a little daunting. Doing each change by hand is time consuming and generally leads to errors, unless you have a good test suite in place.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/codemod&quot;&gt;Codemod&lt;/a&gt; is a tool that has been designed to help in this problem. In this interview, Ramana Venkata describes the tool in detail.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
  &lt;span class=&quot;author&quot;&gt;
    &lt;img src=&quot;https://www.gravatar.com/avatar/641693d5a45d1cd8b698aa96cebb3178?s=200&quot; alt&quot;Ramana Venkata&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
  &lt;/span&gt;
My name is Ramana Venkata. I am front-end developer from India. I have been following the React Community since a year and half or so. I wanted to contribute to this community from that but I couldn&amp;#39;t due to my commitments at college and lack of experience I guess. But now that I have started working, I have a good amount of free time and I am trying to put good use.
&lt;/p&gt;

&lt;p&gt;We have plethora of tools but very little documentation. Sometimes the documentation exists but you can hardly learn anything from it. Sometimes the examples are there but they are not explained. So currently, my main focus is on improving tooling and the documentation around it. I want to make them more accessible.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-codemod-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-codemod-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe Codemod to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-codemod-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Codemod is snippet of code which transforms JS code. It is one-time transformation that you apply on your code base to change an API or to change the style of your code etc., Under the hood, it turns your js code into an Abstract Syntax Tree (AST), applies transform on the AST and then convert it back to JavaScript. This is different from Babel because the codemod changes the original file where as babel doesn&amp;#39;t change the original file.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-use-codemod-&quot; id=&quot;who-should-use-codemod-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should use Codemod?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-use-codemod-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think every library author, that wants to make a breaking changes to their API, should at least consider the possibility of writing a codemod. You can potentially run codemods in the postinstall lifecycle hook of npm to update your code for any breaking changes that library introduces. This will probably make library authors worry less about breaking changes and spend more time on implementing great stuff.&lt;/p&gt;
&lt;p&gt;But it&amp;#39;s always not possible to write a codemod for breaking changes sometimes because of the change itself. Also, you have be to very defensive in the way you write a codemod to avoid false positives. This is partly is because of the dynamic nature of JavaScript itself and people use varying styles to write their code and structure their application.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#are-there-other-similar-tools-you-should-be-aware-of-&quot; id=&quot;are-there-other-similar-tools-you-should-be-aware-of-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Are there other similar tools you should be aware of?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#are-there-other-similar-tools-you-should-be-aware-of-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a natural next step, you can learn about &lt;a href=&quot;https://babeljs.io/docs/plugins/&quot;&gt;Babel plugins&lt;/a&gt;. It is very easy to write them with the help of &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt;. I think it&amp;#39;s possible to write a plugin that provides auto-completion engine like &lt;a href=&quot;http://ternjs.net/&quot;&gt;Tern&lt;/a&gt;, but a little more advanced.&lt;/p&gt;
&lt;p&gt;Imagine auto-completing a React component with all the required props and we can show type of props when you hover over it etc.,. You can use it for compile time transforms also. For example, I think the &lt;a href=&quot;https://www.npmjs.com/package/classnames&quot;&gt;classnames&lt;/a&gt; package by Jed Watson (which is amazing btw) can be replaced by a simple Babel transform.&lt;/p&gt;
&lt;p&gt;I don&amp;#39;t know how much value it has or whether its good thing or bad thing. This approach feels similar to having macros where we write code using custom syntax and at compile time we just transform them to JavaScript.&lt;/p&gt;
&lt;p&gt;I think there are is a lot of untapped potential there. We just need more time for the tools to mature and for that we need more contribution, adoption and feedback from the community.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-codemod-and-javascript-development-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-codemod-and-javascript-development-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for Codemod and JavaScript development in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-codemod-and-javascript-development-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think Codemod are just getting started (in the jscodeshift sense to make breaking changes to the API, etc.,). It is still a new tool the community even though it has been there for sometime. I have heard about it a lot of times but never really cared about it. It is &lt;a href=&quot;https://www.youtube.com/watch?v=d0pOgY8__JM&quot;&gt;Christoph Pojer&amp;#39;s talk on Codemods&lt;/a&gt; which gave me the really inspiration to try it out.&lt;/p&gt;
&lt;p&gt;We have seen a lot of people complain about burnouts because fast moving landscape of JavaScript and library are making breaking changes all over the place, etc., We definitely can&amp;#39;t stop innovating, but we should do invest time in tools that help us upgrade smoothly for this every breaking API changes situation.&lt;/p&gt;
&lt;p&gt;For example, Ember provides new releases on a six week cycle. If you have a large code-base in Ember, getting rid of all the deprecation warnings can be a nightmare and doing it every six weeks is not fun at all. Codemods can ease some of that pain.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think you should either interview Felix Kling or Christoph Pojer.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for the interview Ramana! I think Codemod is one of those tools that has great potential in taking some edge of development. I hope it becomes more popular and we see more adoption.&lt;/p&gt;
&lt;p&gt;From a library consumer&amp;#39;s point of view this can help a lot. I feel people aren&amp;#39;t just that aware of the tool yet but perhaps that will change during this year.&lt;/p&gt;
&lt;p&gt;If you are interested in the topic, I recommend checking out Ramana&amp;#39;s &lt;a href=&quot;https://vramana.github.io/blog/2015/12/21/codemod-tutorial/&quot;&gt;in-depth tutorial&lt;/a&gt;. I&amp;#39;ve listed various other resources below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=d0pOgY8__JM&quot;&gt;Christoph Pojer&amp;#39;s talk - Evolving Complex Systems Incrementally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@cpojer/effective-javascript-codemods-5a6686bb46fb&quot;&gt;Effective JavaScript Codemods&lt;/a&gt; - A related blog post&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/codemod&quot;&gt;facebook/codemod&lt;/a&gt; - The project itself&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/jscodeshift&quot;&gt;facebook/jscodeshift&lt;/a&gt; - A toolkit for running codemods over multiple JavaScript files&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/react-codemod&quot;&gt;reactjs/react-codemod&lt;/a&gt; - Codemods for updating React&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cpojer/js-codemod&quot;&gt;cpoject/js-codemod&lt;/a&gt; - Codemods for transforming old JavaScript to a newer standard&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry ><title >2015 Recap</title><id >a2015recap2015-12-30t00:00:00+02:00</id><link href="http://survivejs.com/blog/2015-recap"></link><updated >2015-12-30T00:00:00+02:00</updated><content type="html">&lt;p&gt;I know the common wisdom is that you shouldn&amp;#39;t write technical books. It&amp;#39;s a difficult way to earn your income, especially when you live in a country with heavy taxation and price level. Strangely enough, it&amp;#39;s working out for me at the moment. I&amp;#39;ll go through this year and its teachings in this brief post. It was a good year and I can only hope the next one will be even better!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-i-start-the-project-&quot; id=&quot;why-did-i-start-the-project-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why Did I Start the Project?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-i-start-the-project-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It was a huge risk to start an effort like this. SurviveJS was born out of frustration. Besides being frustrated at my personal situation, I was frustrated at the lack of cohesive Webpack and React related material. Sure, you can learn it all from blog posts, source code, and documentation. But that is painful. So it felt like there could be a chance to make a difference.&lt;/p&gt;
&lt;p&gt;Initially I and &lt;a href=&quot;http://www.christianalfoni.com/&quot;&gt;Christian&lt;/a&gt; prepared a table of contents (TOC) and a sample chapter for a known publisher. After all, it makes a lot of sense to have people behind you that understand how the business works. Even though we did our best and negotiated for four weeks, the publisher eventually said no.&lt;/p&gt;
&lt;p&gt;As Christian got busy with work and his own projects, I decided to carry on with the effort. It felt wrong not to. Initially, the plan was to write a book about &lt;a href=&quot;https://webpack.github.io/&quot;&gt;Webpack&lt;/a&gt;, but quite soon &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; portion began to gain more significance. The structure of the book has grown organically based on intuition and demand. Even though this is slower than writing through some predefined TOC, this has allowed me to maneuver and alter the content as I understand better what&amp;#39;s needed.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#going-indie&quot; id=&quot;going-indie&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Going Indie&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#going-indie&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Self-publishing a book means you will have to deal with a lot of work yourself. You will have to take care of aspects like marketing, sales, graphics, editing, and copy-editing. Of course, you can outsource these portions as you like.&lt;/p&gt;
&lt;p&gt;Given I didn&amp;#39;t want to deal with the complexity of sales (VAT MOSS and all that), I decided to publish my book through &lt;a href=&quot;https://leanpub.com/&quot;&gt;Leanpub&lt;/a&gt;. As discussed in &lt;a href=&quot;../succeed-at-technical-books&quot;&gt;an earlier post&lt;/a&gt;, that&amp;#39;s just an option amongst many. It has worked quite well for me, though.&lt;/p&gt;
&lt;p&gt;There are still a lot of things I should do better. In short term improving my distribution is one of the key things. I can also improve the way I work. Now it&amp;#39;s a little chaotic. More structured approach might be beneficial. I need to begin to think in terms of processes.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#success-is-rare&quot; id=&quot;success-is-rare&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Success is Rare&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#success-is-rare&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I know it&amp;#39;s rare that you actually succeed with an effort like this. In fact, it was &lt;a href=&quot;../balance&quot;&gt;really hard&lt;/a&gt; at one point. The situation didn&amp;#39;t look particularly good around July. I realized I was being perhaps a bit too open about my efforts. Fortunately some sort of balance was reached.&lt;/p&gt;
&lt;p&gt;I think offering most of the content for free was the right call to make. That way more people can get into the technology. This in turn might lead to visibility I need to make sales. Sales in turn feed the wheel and lead to more content to pull in more people.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#getting-through-the-storm&quot; id=&quot;getting-through-the-storm&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Getting Through the Storm&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#getting-through-the-storm&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I am glad I persisted through the hard times. Especially editing support provided by &lt;a href=&quot;http://angular-tips.com/&quot;&gt;Jesús&lt;/a&gt; was extremely important. It helped me to shape the book for the better and manage the scope more effectively. I know the book isn&amp;#39;t perfect, no book is, but it would be far worse without some gentle nudges towards the right direction.&lt;/p&gt;
&lt;p&gt;Besides Jesús, I have received direct support at least from tens of people if not over a hundred. It&amp;#39;s always heartwarming to get feedback, no matter whether it&amp;#39;s positive or negative. Often it&amp;#39;s the negative feedback that keeps your feet on the ground. The problem with an intense effort like this is that you tend to lose perspective. That&amp;#39;s where the community feedback and support has helped immensely. Thank you guys!&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-indie-bundle&quot; id=&quot;react-indie-bundle&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React Indie Bundle&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-indie-bundle&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One of the interesting things we did during this year was an effort known as &lt;a href=&quot;../react-indie-bundle&quot;&gt;React Indie Bundle&lt;/a&gt;. The main problem in going alone, and especially first time, is that your audience is extremely limited. There simply isn&amp;#39;t a lot of marketing power. In React Indie Bundle we joined forces and did a joint effort to reach larger masses. It worked out reasonably well, and it might yield some further benefits. Thanks for inviting me to the bundle.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#blog-content&quot; id=&quot;blog-content&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Blog Content&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#blog-content&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Perhaps one of the better moves was to begin to arrange structured, short interviews for the &lt;a href=&quot;../../blog&quot;&gt;blog&lt;/a&gt;. We have picked the brains of guys like &lt;a href=&quot;../mobservable-interview&quot;&gt;Michel Weststrate&lt;/a&gt;, &lt;a href=&quot;../redux-interview&quot;&gt;Dan Abramov&lt;/a&gt;, and &lt;a href=&quot;../cycle-interview&quot;&gt;André Staltz&lt;/a&gt; just to mention some. Thanks for participating!&lt;/p&gt;
&lt;p&gt;There will be more of these interviews in the future. I think it&amp;#39;s a fine way to get some visibility on what people think and where they think the world is going and makes an effort like this worthwhile. We&amp;#39;re all in the same boat after all.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ve done a decent amount of &lt;a href=&quot;../react-indie-bundle&quot;&gt;my blogging efforts&lt;/a&gt; not to mention a talk or two. I didn&amp;#39;t visit any notable React conferences this year, but perhaps I get more lucky in 2016. We&amp;#39;ll see.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-have-i-learned-&quot; id=&quot;what-have-i-learned-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Have I Learned?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-have-i-learned-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I feel going forward with this venture was easily the best thing I have done so far. I may have gotten a little better at writing and certain business and technology related aspects. I have had to develop some technology to fit my needs. And I will continue to do so. As the technology matures, you will get to benefit from it of course.&lt;/p&gt;
&lt;p&gt;One surprising thing is that &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;a small community&lt;/a&gt; has grown around the effort. It is one of those things that keeps you going.&lt;/p&gt;
&lt;p&gt;Throughout the process I have learned is that a bit of persistency, and luck, can take you quite far. From my perspective the current situation is sustainable. It allows me to push the effort further without having to worry too much. I couldn&amp;#39;t ask for more.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You could say year 2015 was about learning to float. 2016 is about learning to swim. There are still some aspects I haven&amp;#39;t quite nailed yet, but I&amp;#39;m getting there. The big thing is that I don&amp;#39;t have to start from scratch anymore. A dent has been made.&lt;/p&gt;
&lt;p&gt;At the moment my primary priority is in getting a solid 2.0 version of the book out. It&amp;#39;s currently &lt;a href=&quot;../survivejs200-beta2&quot;&gt;running in beta&lt;/a&gt;. This process allows me to fix certain kinks and make sure the book works for most people. I&amp;#39;m aware the approach the book uses isn&amp;#39;t ideal for everyone. But, as they say, you cannot bow one way without mooning to another. Being opinionated is good.&lt;/p&gt;
&lt;p&gt;From my perspective the current book has two bigger omissions. It doesn&amp;#39;t discuss &lt;a href=&quot;http://redux.js.org/&quot;&gt;Redux&lt;/a&gt; in detail. Instead, the focus is on &lt;a href=&quot;http://alt.js.org/&quot;&gt;Alt&lt;/a&gt; and the Flux pattern. The whole aspect of back-end is skipped. I believe even with these omissions the book is quite useful already. But these are something that can be developed during the next year as demand arises. I want to keep the book as a living effort.&lt;/p&gt;
&lt;p&gt;It could also be worthwhile to modernize &lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot;&gt;the Webpack cookbook&lt;/a&gt; and turn it into a sibling offering through a similar model where most of the content is open and freely available.&lt;/p&gt;
&lt;p&gt;There&amp;#39;s definitely a lot of ground to cover. But I see that more as an opportunity rather than a challenge.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I want to thank you for a great 2015. It is the community that makes an effort like this possible in the first place. I have a feeling 2016 could be even better in many ways. And I&amp;#39;m prepared to do my part. Happy 2016 guys!&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v2.0.0-beta2</title><id >asurvivejswebpackandreactv200beta22015-12-28t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs200-beta2"></link><updated >2015-12-28T00:00:00+02:00</updated><content type="html">&lt;p&gt;The long awaited 2.0 is getting very close. &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot;&gt;babel-plugin-react-transform&lt;/a&gt; reached version 2.0 last Wednesday. This was all I needed to push the book to Babel 6. I released &lt;em&gt;2.0.0-beta1&lt;/em&gt; as a xmas present of some sort to my &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;Leanpub readers&lt;/a&gt; in early access at 25th. I think they earned it. :)&lt;/p&gt;
&lt;p&gt;Today, after some initial feedback and subsequent fixes, I am prepared to publish a wider scale beta. Besides Babel 6 support, I have improved the formatting of the code examples considerably. Instead of having to guess what code goes and where, the examples now contain bolding and overlining to illustrate the changes better. In addition, there&amp;#39;s some new content about Flow and JavaScript language features.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The primary purpose of this beta is to encourage you to provide feedback as there&amp;#39;s still some time before the book goes to printing presses. I know it&amp;#39;s missing some interesting topics, but that&amp;#39;s something that can be worked during the next iteration (2 -&amp;gt; 3) of the book.&lt;/p&gt;
&lt;p&gt;I am prepared to spend the next week or two on improvements on both the book and the site. It might be fun to code something cool for a change. ;)&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-2-0-0-beta2-&quot; id=&quot;book-improvements-2-0-0-beta2-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;2.0.0-beta2&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-2-0-0-beta2-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 129 commits went to &lt;code&gt;2.0.0-beta2&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.9.15...v2.0.0-beta2&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Made the chapter paragraphs flow better.&lt;/li&gt;
&lt;li&gt;Improved section structure.&lt;/li&gt;
&lt;li&gt;Explained better who the book is meant for.&lt;/li&gt;
&lt;li&gt;Added a bit about book versioning. Version included.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-compared&quot; id=&quot;webpack-compared&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack Compared&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-compared&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Made Webpack explanation flow better. It should be easier to understand what it does now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;code&gt;npm init -y&lt;/code&gt; shortcut. Far better than having to hit &lt;em&gt;return&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Reworked chapter structure. Now it&amp;#39;s more logical and hopefully easier to follow.&lt;/li&gt;
&lt;li&gt;Expanded explanations and added warnings about gotchas.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://github.com/paldepind/snabbdom&quot;&gt;paldepind/snabbdom&lt;/a&gt; as a Virtual DOM alternative.&lt;/li&gt;
&lt;li&gt;Added missing section (JSX vs. HTML)&lt;/li&gt;
&lt;li&gt;Hinted about the difference of React components and elements. Components generate elements and are more complex by nature given they can contain state.&lt;/li&gt;
&lt;li&gt;Updated the setup to Babel 6.&lt;/li&gt;
&lt;li&gt;Explained Babel 6 plugins and presets.&lt;/li&gt;
&lt;li&gt;Simplified application entry point by introducing &lt;a href=&quot;https://www.npmjs.com/package/html-webpack-template&quot;&gt;html-webpack-template&lt;/a&gt;. It&amp;#39;s a versatile template that works simple projects like this perfectly. This avoids unnecessary DOM manipulation.&lt;/li&gt;
&lt;li&gt;Explained how &lt;code&gt;BABEL_ENV&lt;/code&gt; works and why it needs to be set.&lt;/li&gt;
&lt;li&gt;Dropped the mention of &lt;code&gt;bind&lt;/code&gt; convention and replaced that with a snippet about property initializers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Updated React components to use function based definitions where it made sense. This is a good starting point for new components.&lt;/li&gt;
&lt;li&gt;Renamed &lt;code&gt;items&lt;/code&gt; to more specific &lt;code&gt;notes&lt;/code&gt;. This has been done also for &lt;code&gt;lanes&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Hinted about the benefits of immutability when discussing &lt;code&gt;componentWillUpdate&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Generalized &lt;code&gt;update&lt;/code&gt; interface. Now it doesn&amp;#39;t care about the data you pass to it. This has been done for both stores (&lt;code&gt;NoteStore&lt;/code&gt;, &lt;code&gt;LaneStore&lt;/code&gt;). The implementation goes through &lt;code&gt;object-assign&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Discussed possible alternative implementations briefly to give more perspective.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Generalized &lt;code&gt;update&lt;/code&gt; interface here as well. One interesting refactoring would be to do a generic CRUD store and then reuse that from elsewhere.&lt;/li&gt;
&lt;li&gt;Dropped &lt;code&gt;waitFor&lt;/code&gt;. It just introduced unnecessary complexity given we&amp;#39;re dealing with synchronous data. There&amp;#39;s still an explanation around as you need to be aware of it in asynchronous cases when you are dealing with data dependencies.&lt;/li&gt;
&lt;li&gt;Pushed &lt;code&gt;Lane&lt;/code&gt; &lt;code&gt;bind&lt;/code&gt;s from the &lt;code&gt;constructor&lt;/code&gt; to &lt;code&gt;render()&lt;/code&gt;. Although this isn&amp;#39;t ideal performance-wise, this is something that is easier to handle in Flow typing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Did just grammar fixes, better highlighting.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped &lt;em&gt;Setting Up a Build Target&lt;/em&gt;. This was possible given we set up one at &lt;em&gt;Developing with Webpack&lt;/em&gt; already.&lt;/li&gt;
&lt;li&gt;Improved flow and dropped some redundant information.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-transform-inline-environment-variables&quot;&gt;babel-plugin-transform-inline-environment-variables&lt;/a&gt; as an alternative to &lt;code&gt;DefinePlugin&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Dropped sourcemaps from production. Less complexity.&lt;/li&gt;
&lt;li&gt;Mentioned about how to structure the project. I might write a little appendix about that, but we&amp;#39;ll see.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react-&quot; id=&quot;testing-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixed test path for &lt;code&gt;include&lt;/code&gt;s. Interestingly this worked even if it was missing a &amp;quot;s&amp;quot;. That&amp;#39;s something to investigate.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#typing-with-react-&quot; id=&quot;typing-with-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Typing with React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#typing-with-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Expanded on Flow somewhat. Now you can see how you would begin to push the project towards Flow typing. Flow is still missing some functionality required by a full port, but this is far better than nothing.&lt;/li&gt;
&lt;li&gt;Linked to various TypeScript loaders. I might do a TypeScript version of Kanban if there&amp;#39;s interest.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#linting-in-webpack&quot; id=&quot;linting-in-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Linting in Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#linting-in-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved grammar, highlighting.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#authoring-libraries&quot; id=&quot;authoring-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Authoring Libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#authoring-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://docs.npmjs.com/files/package.json#files&quot;&gt;files&lt;/a&gt; &lt;em&gt;package.json&lt;/em&gt; field as an alternative to &lt;em&gt;.npmignore&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Explained &lt;code&gt;peerDependencies&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt;semantic-release&lt;/a&gt;. It&amp;#39;s a tool that provides better release flow.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;code&gt;&amp;gt;= 1.3.0 &amp;lt; 2.0.0&lt;/code&gt; version range.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#styling-react&quot; id=&quot;styling-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Styling React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#styling-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved grammar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#language-features&quot; id=&quot;language-features&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Language Features&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#language-features&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;New content! This is supposed to help especially those that haven&amp;#39;t used the features before. The appendix is terse and gets to the point. I&amp;#39;ll improve this based on your feedback.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#understanding-decorators-&quot; id=&quot;understanding-decorators-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Understanding Decorators.&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#understanding-decorators-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved grammar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#troubleshooting&quot; id=&quot;troubleshooting&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Troubleshooting&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#troubleshooting&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved grammar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This depends on you. I have a couple smaller things on my plate, but nothing major. I want to push the final release as far as I can. But to achieve that, I&amp;#39;m going to need feedback so I know what to improve. There&amp;#39;s no such thing as a perfect book, but at least I&amp;#39;m willing to push this as far as I possibly can.&lt;/p&gt;
&lt;p&gt;I might do an intermediate &lt;em&gt;beta-3&lt;/em&gt;. I want to do a final release within a week or two. After that I&amp;#39;ll focus my efforts depending on demand.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are working through the book, it might be a good idea to patch your project based on &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;the book repository&lt;/a&gt; so it&amp;#39;s up to date and continue from there. Eggs and omelette, right?&lt;/p&gt;
&lt;p&gt;Leanpub readers have access to the stable release through &amp;quot;extras&amp;quot;. I made a little switcheroo there. Earlier the beta version was within &amp;quot;extras&amp;quot;. Speaking of which, I will need to figure out a better way to archive releases and make them available. Leanpub isn&amp;#39;t working in my favor here unfortunately.&lt;/p&gt;
&lt;p&gt;Remember that you can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work. The last thing I want is that you curse some parts of the book alone. I&amp;#39;m here to help after all.&lt;/p&gt;
&lt;p&gt;You can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >WhitestormJS - Three.js Based Game Engine - Interview with Alexander Buzin</title><id >awhitestormjsthreejsbasedgameengineinterviewwithalexanderbuzin2015-12-22t00:00:00+02:00</id><link href="http://survivejs.com/blog/whitestormjs-interview"></link><updated >2015-12-22T00:00:00+02:00</updated><content type="html">&lt;p&gt;I remember, when a few years ago a friend asked me what JavaScript game engine to use. As a result, I set up a little gist that in turn lead to something larger, namely &lt;a href=&quot;https://github.com/bebraw/jswiki&quot;&gt;jswiki&lt;/a&gt;, and eventually &lt;a href=&quot;http://jster.net/&quot;&gt;jster.net&lt;/a&gt;. The &lt;a href=&quot;https://github.com/bebraw/jswiki/wiki/Game-Engines&quot;&gt;game engine listing&lt;/a&gt; and &lt;a href=&quot;https://github.com/bebraw/jswiki/wiki/Game-engine-feature-matrix&quot;&gt;game engine feature matrix&lt;/a&gt; are quite useful still.&lt;/p&gt;
&lt;p&gt;Today, I&amp;#39;m interviewing Alexander Buzin, the author of a new engine known as &lt;a href=&quot;http://whitestormjs.xyz/&quot;&gt;WhitestormJS&lt;/a&gt;. I don&amp;#39;t understand about engines that much myself so it&amp;#39;s nice to get some perspective to the topic.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;https://www.gravatar.com/avatar/e002d265845b7625ef396bf74763e31d?s=200&quot; alt&quot;Alexander Buzin&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;My name is Alexander Buzin. I am a front-end developer and a hockey player from Kiev. I am interested in WebGL technology and everything related to 3D rendering in Web, such as &lt;a href=&quot;http://threejs.org/&quot;&gt;Three.js&lt;/a&gt;, &lt;a href=&quot;http://seenjs.io/&quot;&gt;seen.js&lt;/a&gt; and 3D physics engines like &lt;a href=&quot;http://www.cannonjs.org/&quot;&gt;Cannon.js&lt;/a&gt; or &lt;a href=&quot;https://github.com/lo-th/Oimo.js/&quot;&gt;Oimo.js&lt;/a&gt;. I am inspired by projects created on it and my favourite one is &lt;a href=&quot;http://www.ro.me/&quot;&gt;ROME&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Beyond 3D projects, I want to highlight latest cool website which impressed me: &lt;a href=&quot;http://because-recollection.com/&quot;&gt;because-recollection.com&lt;/a&gt;.
Such sites make the internet a better place.&lt;/p&gt;
&lt;p&gt;Before I started learning Three.js, I tried my skills in AngularJS and NodeJS. But my ideal still was jQuery, given it&amp;#39;s so simple to use.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-whitestormjs-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-whitestormjs-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe WhitestormJS to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-whitestormjs-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As I said, I like the idea of powerful, but simple in usage libraries like jQuery. Only a few lines of code, and you have a completely new website with smooth transitions and animations. WhitestormJS relies on the same idea. You only input parameters, which make your 3D object different from others. All other options are generated automatically by default.&lt;/p&gt;
&lt;p&gt;For example, if you forgot to input a color, WhitestormJS will display random one by default. If you forgot to insert your sphere radius - it will always be &amp;quot;1&amp;quot;.&lt;/p&gt;
&lt;p&gt;By the way, I noticed that almost every Three.js project or demo have their own resize function, so if you have 10 such projects, you need to write this simple function 10 times. Is it necessary? With WhitestormJS - no. Just put &lt;code&gt;autoresize: true&lt;/code&gt; parameter to the &lt;code&gt;init()&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;You can see all this in a small example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot; &gt;var&lt;/span&gt; GAME &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; &gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; &gt;WHS&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;init&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
    anaglyph&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot; &gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Anaglyph effect.&lt;/span&gt;
    helper&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot; &gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Cannon.js shape helper&lt;/span&gt;
    stats&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&quot;fps&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// fps, ms, mb or false if not need.&lt;/span&gt;
    gravity&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Physics (gravity).&lt;/span&gt;
        x&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot; &gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
        y&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot; &gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot; &gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
        z&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot; &gt;0&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

GAME&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;sphere &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; GAME&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;addObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&quot;sphere&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
    geometryOptions&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
        radius&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot; &gt;3&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Sphere radius&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
    mass&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot; &gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Mass for CANNON.JS&lt;/span&gt;
    onlyvis&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot; &gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// If set true - no physics for this object&lt;/span&gt;
    materialOptions&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// ThreeJs material options&lt;/span&gt;
        color&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot; &gt;0xffffff&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// White.&lt;/span&gt;
        type&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&quot;basic&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
    pos&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// position in space&lt;/span&gt;
        x&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot; &gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
        y&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot; &gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
        z&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot; &gt;0&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The project is available through &lt;a href=&quot;https://github.com/WhitestormJS/whitestorm.js&quot;&gt;GitHub&lt;/a&gt;. This way people can create pull requests to fix problems and improve the engine. I hope users will find it interesting.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-whitestormjs-&quot; id=&quot;why-did-you-develop-whitestormjs-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop WhitestormJS?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-whitestormjs-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My first projects were based on Three.js. I used it for a long time and I realized that for a beginner developer (like me at the time) it is too complex. You need to understand how to construct a 3D scene, animate it and make changes to objects all the time. It scared me initially, but then my desire made me understand all this.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot; id=&quot;what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What kind of challenges have you experienced while developing it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I had a lot of troubles while developing this engine. Three.js has a lot of subtleties that you need to know. Early on, the library was just a single .js file + index.html (which served as an example for testing). Then I organized it all with &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;. I split my main file to 10+ smaller parts. Each of those now contain a specific function (for example, &lt;code&gt;addObject()&lt;/code&gt;, &lt;code&gt;addGround()&lt;/code&gt;, or &lt;code&gt;init()&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The next big challenge for me was adding shadows to the terrain. I searched through almost the entire internet in the hope of finding an answer to the question &amp;quot;Why doesn&amp;#39;t my terrain cast shadows?&amp;quot;. I came by shaders. As a user, who has spent all his life on JavaScript, I was confused. I mean, I don&amp;#39;t know how to debug numbers through GLSL shaders. After spending about 2 days, I still decided to try to run the shadow of trial and error and I got it.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Each day we are making new changes. Big updates will come in the nearest future. Now we are focused on making improvements to working performance and stability. In this month you will see added skybox feature, improved shadows and fps count.
What will come exactly? - I know that we will add proper Audio support. It does not mean that now you can&amp;#39;t perform audio. Of course you can implement it to your 3D object throught Three.js, but later it will be much easier.&lt;/p&gt;
&lt;p&gt;P.s.: Maybe we will release an editor for people, who don&amp;#39;t know how to code.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-game-engines-and-front-end-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-game-engines-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for game engines and front-end in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-game-engines-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some weeks ago I contacted &lt;a href=&quot;https://twitter.com/aerotwist&quot;&gt;Paul Lewis&lt;/a&gt; from &lt;a href=&quot;https://aerotwist.com/&quot;&gt;Aerotwist blog&lt;/a&gt; and asked him a similar question. His answer was ES2015 (the latest version of JavaScript) and React.js.&lt;/p&gt;
&lt;p&gt;As for me, I think it will be awesome, if we can play games with excellent graphics in browsers. Currently the problem is that we need to develop games separately for multiple platforms. The web solves that.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I can mention &lt;a href=&quot;https://twitter.com/Cabbibo&quot;&gt;Cabbibo&lt;/a&gt;, who is my favourite web developer specializing in 3D. I like his projects.&lt;/p&gt;
&lt;p&gt;He works with Three.js and make awesome abstract sites, which are worthy of attention.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for your interview Alexander. Best of luck with your engine! If you want to study the engine, &lt;a href=&quot;https://github.com/sasha240100/WhitestormJS&quot;&gt;head to GitHub&lt;/a&gt; or check out the &lt;a href=&quot;http://whitestormjs.xyz/&quot;&gt;project homepage&lt;/a&gt; for documentation and demos.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React v1.9.15</title><id >asurvivejswebpackandreactv19152015-12-11t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs1915"></link><updated >2015-12-11T00:00:00+02:00</updated><content type="html">&lt;p&gt;This is perhaps the last release before the long awaited &lt;code&gt;2.0&lt;/code&gt;. &lt;a href=&quot;http://alt.js.org/&quot;&gt;Alt&lt;/a&gt; reached version &lt;code&gt;0.18&lt;/code&gt;. As a result a certain part of the book broke. I have fixed that issue in this release. There are also plenty of other tweaks here and there, and even some new content.&lt;/p&gt;
&lt;p&gt;I visited an event known as &amp;quot;Web on the Edge&amp;quot; earlier this week. Even though these kind of trips always take some time, they tend to be worthwhile. At least I got to see some readers and managed to get exposure to some new ideas. See my &lt;a href=&quot;http://www.nixtu.info/2015/12/afterthoughts-web-on-edge.html&quot;&gt;conference report&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The situation with Babel 6 is starting to look a little better. Babel 6 compatible beta version of &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot;&gt;babel-plugin-react-transform&lt;/a&gt; just came out a couple of days ago. Other plugins have been moving towards Babel 6 as well. I know decorator support is still a little iffy, but I have some solutions in sight that might work.&lt;/p&gt;
&lt;p&gt;I made a little breakthrough with my &lt;a href=&quot;http://flowtype.org/&quot;&gt;Flow&lt;/a&gt;. It will still take some work, but I cannot see any blockers anymore. This is something I will tackle in the near future.&lt;/p&gt;
&lt;p&gt;In order to make it easier to contribute fixes and tweaks to the book, I changed the &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;GitHub repository&lt;/a&gt; to use the &lt;code&gt;dev&lt;/code&gt; branch by default. That&amp;#39;s where the development happens after all. This will help to avoid some confusion.&lt;/p&gt;
&lt;p&gt;I want to give special thanks to the user &lt;a href=&quot;https://github.com/snowyplover&quot;&gt;snowyplover&lt;/a&gt; for providing nice edits to early parts of the book. &lt;a href=&quot;https://github.com/sokra&quot;&gt;Tobias Koppers&lt;/a&gt; deserves a special mention as well. Overall the feedback has been encouraging and helped me to push the book a notch further. Thanks guys!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-1-9-15-&quot; id=&quot;book-improvements-1-9-15-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;1.9.15&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-1-9-15-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 74 commits went to &lt;code&gt;1.9.15&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.9.10...v1.9.15&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-compared&quot; id=&quot;webpack-compared&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack Compared&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-compared&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved the flow of the chapter. Now it should read a little better.&lt;/li&gt;
&lt;li&gt;Added emphasis between &lt;em&gt;task runners&lt;/em&gt; and &lt;em&gt;bundlers&lt;/em&gt;. This helps to understand how these tools can complement each other.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Documented Webpack &lt;code&gt;entry&lt;/code&gt; better. It accepts a path or an object of entries.&lt;/li&gt;
&lt;li&gt;Pointed &lt;code&gt;open&lt;/code&gt; to the correct location.&lt;/li&gt;
&lt;li&gt;Put emphasis on the fact that the dev server runs in-memory. This should decrease the amount of confusion.&lt;/li&gt;
&lt;li&gt;Mentioned that &lt;code&gt;HOST&lt;/code&gt; should be set to &lt;code&gt;0.0.0.0&lt;/code&gt; for Cloud9 and similar environments.&lt;/li&gt;
&lt;li&gt;Noted that &lt;code&gt;test&lt;/code&gt; expects a RegExp.&lt;/li&gt;
&lt;li&gt;Noted that &lt;code&gt;include&lt;/code&gt; expects a path or an array of paths.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Removed mention of &lt;em&gt;stage 1&lt;/em&gt; now that we enable specific features we use at the project one by one.&lt;/li&gt;
&lt;li&gt;Added examples of the custom features used to make it easier to understand what they do.&lt;/li&gt;
&lt;li&gt;Pushed the ES6 class autobinding note to the correct place.&lt;/li&gt;
&lt;li&gt;Added missing `&amp;quot;es7.classProperties&amp;quot; declaration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Removed mention of &lt;em&gt;react-hot-loader&lt;/em&gt;. It has been replaced by &lt;em&gt;babel-plugin-react-transform&lt;/em&gt; so no need for this anymore.&lt;/li&gt;
&lt;li&gt;Added emphasis to the fact that I prefer functional style and the reasons for this.&lt;/li&gt;
&lt;li&gt;Renamed &lt;code&gt;renderTask&lt;/code&gt; as &lt;code&gt;renderNote&lt;/code&gt; to communicate the intent better.&lt;/li&gt;
&lt;li&gt;Showed how to use &lt;code&gt;map&lt;/code&gt; to set context. Example: &lt;code&gt;map(fn, context)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Dropped &lt;code&gt;findIndex&lt;/code&gt;. The usage has been replaced with simpler functions. This reduces the complexity of the project and makes the chapter quicker to go through.&lt;/li&gt;
&lt;li&gt;Improved the flow of &lt;em&gt;Understanding React Components&lt;/em&gt;. Now it explains things in the right order.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Integrated &lt;em&gt;alt-utils&lt;/em&gt; so the project works with Alt 0.18.&lt;/li&gt;
&lt;li&gt;Simplified store methods somewhat.&lt;/li&gt;
&lt;li&gt;Put emphasis on the dangers of mutation.&lt;/li&gt;
&lt;li&gt;Explained isomorphic rendering briefly given it&amp;#39;s mentioned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simplified store methods.&lt;/li&gt;
&lt;li&gt;Dropped &lt;em&gt;Implementing &lt;code&gt;findLane&lt;/code&gt;&lt;/em&gt;. This isn&amp;#39;t needed now that the implementation is simpler.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Installed &lt;em&gt;react-addons-update&lt;/em&gt; from a package of its own so the project won&amp;#39;t break with React 0.15.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved the flow of the chapter. Now it proceeds in a slightly smarter order.&lt;/li&gt;
&lt;li&gt;Fixed hashing configuration. Bundles should get invalidated as initially intended now. This took some extra effort to pull off.&lt;/li&gt;
&lt;li&gt;Linked the chapter better to &lt;em&gt;Authoring Libraries&lt;/em&gt;. It&amp;#39;s valuable to understand npm in detail as that can help with your build so that&amp;#39;s a good chapter to read.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#authoring-libraries&quot; id=&quot;authoring-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Authoring Libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#authoring-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Expanded on &lt;em&gt;.gitignore&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Added mention of &lt;em&gt;postinstall&lt;/em&gt; and its usage.&lt;/li&gt;
&lt;li&gt;Explained how to deal with preprocessing (i.e., &lt;em&gt;postinstall&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Added a section about version ranges and how they work.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#styling-react&quot; id=&quot;styling-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Styling React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#styling-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved the flow of the early part of the chapter.&lt;/li&gt;
&lt;li&gt;Added an image showing how different processing tools can work in tandem. &lt;a href=&quot;https://medium.com/@ddprrt/deconfusing-pre-and-post-processing-d68e3bd078a3&quot;&gt;Stefan Baumgartner&lt;/a&gt; describes that well so I used his idea.&lt;/li&gt;
&lt;li&gt;Added a section for &lt;a href=&quot;https://github.com/postcss/postcss&quot;&gt;PostCSS&lt;/a&gt;. It was mentioned already but I felt it could use a better description.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#troubleshooting&quot; id=&quot;troubleshooting&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Troubleshooting&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#troubleshooting&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added a section about &lt;code&gt;Module parse failed&lt;/code&gt;. That&amp;#39;s something you can see with Webpack quite easily so it felt like something nice to cover.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The coast is clear for the Flow work. I see no blockers with that. TypeScript will take some further investigation. And there are some smaller things, like improving those code examples, which I want to get done. That should keep me busy next week.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Again, this is a small release. If you are working through the book, it might be a good idea to patch your project based on &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;the book repository&lt;/a&gt; so it&amp;#39;s up to date and continue from there. I know this isn&amp;#39;t ideal, but you cannot make an omelette without breaking an egg. It&amp;#39;s for the better.&lt;/p&gt;
&lt;p&gt;Thanks for the feedback again. It helps. You can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >React Indie Bundle - Summary</title><id >areactindiebundlesummary2015-12-07t00:00:00+02:00</id><link href="http://survivejs.com/blog/react-indie-bundle"></link><updated >2015-12-07T00:00:00+02:00</updated><content type="html">&lt;p&gt;It is amazing what a great year this turned out to be. I launched this site &lt;a href=&quot;../the-story-so-far&quot;&gt;around July&lt;/a&gt;. Since then a lot has changed. While the situation might have looked a little desperate back then, I feel we are on a sustainable track now. And there is still a lot to come.&lt;/p&gt;
&lt;p&gt;If you&amp;#39;ve been wondering about the radio silence, a lot of it has to do with the &lt;a href=&quot;http://www.reactindiebundle.com/&quot;&gt;React Indie Bundle&lt;/a&gt;. We got a couple of smart heads together and decided to launch something that would work well as an entry point to React. In order to support the effort, I launched a little campaign of my own. I thought it would be fun to summarize some of my efforts, so here we go.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#presentations&quot; id=&quot;presentations&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Presentations&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#presentations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I don&amp;#39;t present a lot. There simply isn&amp;#39;t a lot of demand for presentations locally so it makes sense for me to focus my efforts on coding and writing. That said, I&amp;#39;ll do my best if I get asked to talk about some topic.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#frontend-in-2015-clear-the-decks&quot; id=&quot;frontend-in-2015-clear-the-decks&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Frontend in 2015 - Clear the Decks&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#frontend-in-2015-clear-the-decks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Earlier this year I was invited to talk about the state of frontend in 2015. Even though that was a couple of months ago, a lot of the points still stand. The &lt;a href=&quot;https://survivejs.github.io/frontend-in-2015&quot;&gt;slides&lt;/a&gt; work best in Chrome.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s more of an overview. This was an interesting year in front-end and I can only imagine what 2016 is going to be like.&lt;/p&gt;
&lt;p&gt;I know this presentation didn&amp;#39;t contribute to the bundle directly. It just felt like something fun to mention.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-to-write-a-book-and-survivejs-it&quot; id=&quot;how-to-write-a-book-and-survivejs-it&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How to Write a Book and SurviveJS it&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-to-write-a-book-and-survivejs-it&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I was invited to talk about my book a week ago. Even though &lt;a href=&quot;https://www.youtube.com/watch?v=DrgZaiqm4YE&quot;&gt;the recording&lt;/a&gt; of my presentation is in Finnish, you might still enjoy &lt;a href=&quot;https://survivejs.github.io/how-to-write-a-book-and-survivejs-it&quot;&gt;the slides&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s more about the business side of things, but having that sort of understanding doesn&amp;#39;t hurt. Especially if you want to write a book of your own.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-for-awesome-people&quot; id=&quot;react-for-awesome-people&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React for Awesome People&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-for-awesome-people&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Webinars are tough. In addition to potential technical woes, it can feel strange to talk to an audience you don&amp;#39;t see. Regardless, I gave a little introduction to React in a recent one we did to discuss React.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://survivejs.github.io/react-for-awesome-people/&quot;&gt;slides&lt;/a&gt; get to the point. In short, there is not that much to learn in React itself. It&amp;#39;s more about learning how to deal with the ecosystem as a whole. I feel we&amp;#39;re still in a discovery mode as new, better solutions to complement React come along.&lt;/p&gt;
&lt;p&gt;This is in contrast to approaches enabled by popular frameworks. The framework approach itself is very powerful. Rather than having to splice things together, you just follow the conventions. The potential problems begin as you need to go beyond the initial design of the framework.&lt;/p&gt;
&lt;p&gt;Keeping up with the framework&amp;#39;s development can sometimes be a daunting proposition as you need to drag all of the project forward. A library oriented approach allows you to modernize your project one dependency at a time. This seems more sustainable to me over longer term.&lt;/p&gt;
&lt;p&gt;I am sure both approaches are valid depending on the situation. And sometimes the approaches overlap. It may even make sense to construct a &amp;quot;framework&amp;quot; of your own out of libraries you like and then standardize on that. In the end it&amp;#39;s about the constraints you want.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#guest-posts&quot; id=&quot;guest-posts&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Guest Posts&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#guest-posts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given I&amp;#39;m a little stronger on the writing side of things, I put some conscious effort to that. Writing some guest posts felt like a good way to generate some interest towards the bundle while being useful to the community as a whole. I&amp;#39;ve listed some of my efforts below.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-bundling-for-fun-and-profit&quot; id=&quot;webpack-bundling-for-fun-and-profit&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack – Bundling for Fun and Profit&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-bundling-for-fun-and-profit&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codersclan.net/&quot;&gt;CodersClan&lt;/a&gt; is a little service meant for getting small coding tasks done. It fits somewhere between Fiverr and those larger freelancing sites. I decided to give them a taste of Webpack. This is what &lt;a href=&quot;http://blog.codersclan.net/webpack-bundling-for-fun-and-profit-2/&quot;&gt;Webpack - Bundling for Fun and Profit&lt;/a&gt; achieves.&lt;/p&gt;
&lt;p&gt;If you have read my book or understand the basics of Webpack, there&amp;#39;s nothing new here. It is an entry level post after all.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-a-cdn-reporting-application-with-webpack-and-react&quot; id=&quot;building-a-cdn-reporting-application-with-webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building a CDN Reporting Application with Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-a-cdn-reporting-application-with-webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I wrote an entire tutorial for &lt;a href=&quot;https://www.maxcdn.com/&quot;&gt;MaxCDN&lt;/a&gt;, a popular CDN provider. &lt;a href=&quot;https://www.maxcdn.com/blog/cdn-reporting-application-webpack-react/&quot;&gt;Building a CDN Reporting Application with Webpack and React&lt;/a&gt; shows you how to build a little reporting application to understand how your CDN is performing.&lt;/p&gt;
&lt;p&gt;Again, this is a 101 level post that&amp;#39;s meant for beginners. Beyond that the API mocking idea might be worthwhile.&lt;/p&gt;
&lt;p&gt;The cool thing about front-end development that you don&amp;#39;t need an actual endpoint to work against. You can just generate the data that looks about right. When the time is right, you will plug in the real back-end. And this will just work assuming there is no impedance mismatch somewhere.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-to-structure-a-react-project-&quot; id=&quot;how-to-structure-a-react-project-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How to Structure a React Project?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-to-structure-a-react-project-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://reactjsnews.com/structuring-react-projects/&quot;&gt;How to Structure a React Project?&lt;/a&gt; written for &lt;a href=&quot;https://reactjsnews.com/&quot;&gt;ReactJS News&lt;/a&gt; gained some nice visibility through &lt;a href=&quot;https://news.ycombinator.com/item?id=10645170&quot;&gt;Hacker News&lt;/a&gt;. This was surprising given I usually get ignored there. But I&amp;#39;m not complaining.&lt;/p&gt;
&lt;p&gt;I think the post hit some nerve. Even though the Reddit commentary wasn&amp;#39;t entirely supporting as some readers felt there wasn&amp;#39;t enough substance, I believe the core idea of the post is valid.&lt;/p&gt;
&lt;p&gt;There simply isn&amp;#39;t one right way to structure your React project. It&amp;#39;s a matter of judgment. Even though conventions can be cool, I think you should evolve the structure of your project as it evolves. It&amp;#39;s about making things understandable, not about following some rules. Rules can be great, but it&amp;#39;s better to make them yourself based on the situation.&lt;/p&gt;
&lt;p&gt;Over longer term the community might begin to gravitate towards certain structures. That&amp;#39;s fine, though, as it tells something about maturity. As we begin to understand better what we are doing, structure emerges. I believe this is one of the pain points for people coming from more structured environments.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope you enjoy the material. Now that &lt;a href=&quot;http://www.reactindiebundle.com/&quot;&gt;the bundle&lt;/a&gt; is nearing its end, I can get back to normal business. That said, there might be something interesting on the horizon. I&amp;#39;ll get back to that when the time is right, though.&lt;/p&gt;
</content></entry><entry ><title >StarHackIt - A Full Stack ES6/ES7 Starter Kit based on React and Node - Interview with Frederic Heem</title><id >astarhackitafullstackes6es7starterkitbasedonreactandnodeinterviewwithfredericheem2015-11-24t00:00:00+02:00</id><link href="http://survivejs.com/blog/starhackit-interview"></link><updated >2015-11-24T00:00:00+02:00</updated><content type="html">&lt;p&gt;I discussed my &lt;a href=&quot;../react-component-boilerplate&quot;&gt;React component boilerplate&lt;/a&gt; earlier on. It is focused and deals only with the frontend. Often you need more than just a frontend, though. This is where Frederic Heem&amp;#39;s &lt;a href=&quot;http://starhack.it/&quot;&gt;StarHackIt&lt;/a&gt; fits. It is a full stack boilerplate. Read on to learn more.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
  &lt;span class=&quot;author&quot;&gt;
    &lt;img src=&quot;/assets/img/starhackit/hf.jpg&quot; alt=&quot;Frederic Heem&quot; class=&apos;author&apos; width=&apos;100&apos; /&gt;
  &lt;/span&gt;
I studied industrial engineering in France but ended up being a software engineer for the last the last 15 years mostly in the UK and Italy. Right now, I am working on blockchain and distributed ledger technology in the city of London. During my spare time and when the wind blows, I am hooked on my kitesurf.
&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/starhackit/dunkerque-malo.jpg&quot; alt=&quot;dunkerque-malo&quot; /&gt;&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-starhackit-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-starhackit-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe &lt;em&gt;StarHackIt&lt;/em&gt; to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-starhackit-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;StarHackIt&lt;/em&gt; is a full stack web application boilerplate. The aim is to provide a code base to quickly create a new web application. It is a foundation on which software developers can build on top of it.&lt;/p&gt;
&lt;p&gt;This starter kit is written in JavaScript &lt;strong&gt;ES6&lt;/strong&gt;/&lt;strong&gt;ES7&lt;/strong&gt;, it is composed of a frontend based on React/Reflux, a Node.js backend, the data is backed by &lt;strong&gt;SQL&lt;/strong&gt; thanks to the Sequelize ORM, automatic deployment is done with Ansible. The code is built with Gulp, analyzed by ESLint, tested with Mocha, covered by Istanbul.&lt;/p&gt;
&lt;p&gt;One of the main benefits is that StarHackIt comes with &lt;em&gt;authentication&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users can register and login with username and password, reset the password via email.&lt;/li&gt;
&lt;li&gt;Social login with Facebook, Google, GitHub etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A fine-grained &lt;strong&gt;authorization&lt;/strong&gt; system based on groups, permissions and resources is also provided. This allows to create users belonging to groups with a different set of permissions to the API. A simple example is to grant special access to users belonging to the &lt;em&gt;Admin&lt;/em&gt; group.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-starhackit-&quot; id=&quot;why-did-you-develop-starhackit-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop StarHackIt?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-starhackit-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most JavaScript boilerplates are not really full stack, either they focus on the frontend or they specialize on the backend.&lt;/p&gt;
&lt;p&gt;The data is almost always stored on non-relational &lt;strong&gt;NoSQL&lt;/strong&gt; database like MongoDB or in the cloud with Firebase. However, most applications rely on relational data so SQL databases such as PostgreSQL or MySQL are better suited. Actually, using a NoSQL database when the data are essentially relational could lead to serious issues.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/starhackit/nosql.jpg&quot; alt=&quot;NoSQL&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;MEAN stack&lt;/strong&gt; is quite popular, it&amp;#39;s composed of MongoDB, Express, Angular and Node. Instead, StarHackIt is a &lt;strong&gt;SERNA stack&lt;/strong&gt;: SQL, Express, React, Node, and Ansible.&lt;/p&gt;
&lt;p&gt;The Ruby fans have Ruby on Rails, but the JavaScript developers don&amp;#39;t have Node on rails (yet). This project is a little step towards the direction of a productive JavaScript web framework.&lt;/p&gt;
&lt;p&gt;Image that you have to attend a hackathon to create a useful app in a weekend, is there any time to lose creating from scratch an application with some basic functionalities such as login and register?&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot; id=&quot;what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What kind of challenges have you experienced while developing it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The JavaScript ecosystem is vibrant with a record number of packages that have overtaken any other languages, see &lt;a href=&quot;http://www.modulecounts.com/&quot;&gt;modulecount&lt;/a&gt; for the facts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/starhackit/modulecounts.png&quot; alt=&quot;Module counts&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The challenge is mostly about making choice between these huge numbers of packages to build upon:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React/Angular/Angular2/Ember/Backbone&lt;/li&gt;
&lt;li&gt;Reflux/Flux/Redux/Alt&lt;/li&gt;
&lt;li&gt;Bootstrap/Material/Foundation&lt;/li&gt;
&lt;li&gt;Eslint/Jscs/Jshint&lt;/li&gt;
&lt;li&gt;Stylus/Saas/Less/CSS&lt;/li&gt;
&lt;li&gt;Express/Koa/Hapi/Strongloop/Sails/Meteor&lt;/li&gt;
&lt;li&gt;SQL/NoSql&lt;/li&gt;
&lt;li&gt;Sequelize/Bookshelf&lt;/li&gt;
&lt;li&gt;Webpack/Browserify/RequiresJs&lt;/li&gt;
&lt;li&gt;Gulp/Grunt&lt;/li&gt;
&lt;li&gt;Ansible/Chef/Puppet&lt;/li&gt;
&lt;li&gt;Mocha/QUnit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is about selecting the best tools at a given time and integrating them. Over time, new libraries will emerge, other libraries will be unmaintained. Keeping the code up to date with the new version will require some kind of maintenance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/starhackit/choosepillsmatrix.jpg&quot; alt=&quot;Red pill or blue pill?&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Writing code in &lt;em&gt;ES6&lt;/em&gt; and &lt;em&gt;ES7&lt;/em&gt; adds another layer of complexity on the build system since files need to be transpiled to plain old JavaScript. This also makes setting up code coverage and testing trickier, however, it&amp;#39;s definitely worth it.&lt;/p&gt;
&lt;p&gt;The most amazing feature of &lt;em&gt;ES7&lt;/em&gt; is &lt;strong&gt;async/await&lt;/strong&gt;, forget about callbacks and Promises, async/await is an enlightenment and the way to go, it makes writing asynchronous code similar to writing synchronous code, it significantly changes the way JavaScript is written, especially on the node side.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Twenty years ago JavaScript was a joke, now it&amp;#39;s the future. &lt;a href=&quot;http://jster.net/blog/monthly-jster-september-2015-part-2#.VkPBH2SKH-k&quot;&gt;jster.net september-2015 &lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next is to improve the documentation to explain the various parts of the stack, write a tutorial on how to create the famous TODO app. Then a native mobile app with react-native is definitely on the roadmap. An admin interface to manage users and other aspects of the app would be also very useful.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React and front-end in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The future of React lies in the various Flux implementations that are evolving very quickly, React is only a part of the equation for building an application. The React community is growing at fast pace, for instance, the React Meetup in London is fully booked only after 20 minutes upon publication of the event. The frontend development and software in general have a bright and sustainable future, there is no shortage of software development jobs in sight.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/starhackit/react-trends.png&quot; alt=&quot;react-trends&quot;/&gt;&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What about an interview of Juho Vepsäläinen? The mind behind &lt;a href=&quot;http://jster.net/&quot;&gt;jster.net&lt;/a&gt; and &lt;a href=&quot;http://survivejs.com/&quot;&gt;SurviveJS&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks a lot for the interview Frederic! I&amp;#39;ll consider interviewing myself in the near future for sure as I might have a little announcement to make.&lt;/p&gt;
&lt;p&gt;Best of luck to &lt;a href=&quot;http://starhack.it/&quot;&gt;StarHackIt&lt;/a&gt;! Let&amp;#39;s hope people find it and help you to push it further. Beyond the project site, consider checking &lt;a href=&quot;https://github.com/FredericHeem/starhackit&quot;&gt;the source code on GitHub&lt;/a&gt;.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v1.9.10</title><id >asurvivejswebpackandreactv19102015-11-22t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs1910"></link><updated >2015-11-22T00:00:00+02:00</updated><content type="html">&lt;p&gt;It&amp;#39;s time for another maintenance release with minor tweaks here and there. Probably the biggest change is the fancy new cover which I crafted based on the logo design of &lt;a href=&quot;http://prospectone.pl/&quot;&gt;Prospect One&lt;/a&gt;. Cheers for that.&lt;/p&gt;
&lt;p&gt;Probably the biggest news this time around is that the book is going to be a part of the &lt;a href=&quot;http://www.reactindiebundle.com/&quot;&gt;React Indie Bundle&lt;/a&gt;. This will be a good chance to pick up some additional material while supporting indie authors and library/tool developers in their craft.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#overview-of-the-situation&quot; id=&quot;overview-of-the-situation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Overview of the Situation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#overview-of-the-situation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The situation with Babel 6 is still a little problematic. Besides waiting for &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot;&gt;babel-plugin-react-transform&lt;/a&gt; to catch up, there&amp;#39;s &lt;a href=&quot;http://phabricator.babeljs.io/T2645&quot;&gt;the additional issue of decorator support&lt;/a&gt;. I&amp;#39;ll keep an eye on the progress and update the book once the time is right.&lt;/p&gt;
&lt;p&gt;The biggest cosmetic change has to do with the introduction of property initializers. I simply got tired of having to use &lt;code&gt;bind&lt;/code&gt; at constructor so I enabled the feature for the project. Even though experimental feature, it cleans up the examples somewhat so I believe it was worth it. The only gotcha is that hot loading doesn&amp;#39;t support property initializers. But then, we had the same issue earlier. Now the code is just a little neater.&lt;/p&gt;
&lt;p&gt;I put some serious effort to developing &lt;a href=&quot;https://antwarjs.github.io/&quot;&gt;Antwar&lt;/a&gt;, my Webpack and React based site generator. Given I use it to develop this site, I felt it was a good chance to push it further. I managed to simplify it conceptually somewhat while improve performance a great deal. The work is on-going and I&amp;#39;m still dogfooding it. By the looks of it, the next release should be quite sweet. You can think of Antwar as &amp;quot;Webpack of static site generators&amp;quot;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-1-9-10-&quot; id=&quot;book-improvements-1-9-10-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;1.9.10&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-1-9-10-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 34 commits went to &lt;code&gt;1.9.10&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.9.5...v1.9.10&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained Webpack&amp;#39;s approach in detail.&lt;/li&gt;
&lt;li&gt;Explained React in detail.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pushed path configuration to a single &lt;code&gt;PATHS&lt;/code&gt; structure. A little neater this way.&lt;/li&gt;
&lt;li&gt;Explained how to serve build results easily.&lt;/li&gt;
&lt;li&gt;Made &lt;em&gt;webpack-dev-server&lt;/em&gt; use &lt;code&gt;stats: &amp;#39;errors-only&amp;#39;,&lt;/code&gt; option. This relatively new option gives you far less output and helps to keep your terminal clean.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Enabled &lt;a href=&quot;https://github.com/jeffmo/es-class-static-properties-and-fields&quot;&gt;class properties&lt;/a&gt; so we can use &lt;em&gt;property initializers&lt;/em&gt; to clean up the code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added warning mentioning that hot loading isn&amp;#39;t fool proof. It&amp;#39;s at its best if you can push your state to a state container such as &lt;a href=&quot;http://redux.js.org/&quot;&gt;redux&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Changed &lt;code&gt;key&lt;/code&gt; to use &lt;code&gt;id&lt;/code&gt; directly. The ids are unique so why not.&lt;/li&gt;
&lt;li&gt;Explained &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;bind&lt;/a&gt; in greater detail.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added missing filenames.&lt;/li&gt;
&lt;li&gt;Simplified &lt;a href=&quot;http://alt.js.org/docs/components/altContainer/&quot;&gt;AltContainer&lt;/a&gt; explanation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clarified &lt;code&gt;waitFor&lt;/code&gt; explanation.&lt;/li&gt;
&lt;li&gt;Hinted how to improve &lt;code&gt;Editable&lt;/code&gt;. Now it encapsulates store itself. It would be interesting to extract the state and control it outside. This would be a good extension point for further development.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Tied drag and drop explanation to the application better.&lt;/li&gt;
&lt;li&gt;Fixed filenames.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Expanded on &lt;code&gt;DefinePlugin&lt;/code&gt; and how to use it. I managed to bum a couple of lines of code while at it given you can do just &lt;code&gt;&amp;#39;process.env.NODE_ENV&amp;#39;&lt;/code&gt;. Small win but a win still.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react-&quot; id=&quot;testing-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixed &lt;em&gt;isparta-instrumenter-loader&lt;/em&gt; to version 0.2.1 given that&amp;#39;s the last version that works with Babel 5.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I will review the typing situation and go through the book myself from start to finish to see potential pain points. Perhaps I can do something to improve the code examples. There are a couple of ideas related to that. After this I have to cut &lt;code&gt;v2.0.0&lt;/code&gt;. That&amp;#39;s not an end of course but I feel it&amp;#39;s an important milestone for this project.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even though small release, I want to thank you for feedback again. You helped me to fix a lot of issues I never would have caught on my own. You can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >react-router5 - Routing Alternative for React - Interview with Thomas Roch</title><id >areactrouter5routingalternativeforreactinterviewwiththomasroch2015-11-09t00:00:00+02:00</id><link href="http://survivejs.com/blog/react-router5"></link><updated >2015-11-09T00:00:00+02:00</updated><content type="html">&lt;p&gt;When people ask about what routing solution to use with React, they often get pointed at &lt;a href=&quot;https://github.com/reactjs/react-router&quot;&gt;react-router&lt;/a&gt;. It is a powerful solution and used by many so it can make sense. That doesn&amp;#39;t mean it&amp;#39;s the only alternative, though.&lt;/p&gt;
&lt;p&gt;This time I&amp;#39;m interviewing Thomas Roch, the author of &lt;a href=&quot;https://github.com/router5/react-router5&quot;&gt;react-router5&lt;/a&gt;. It provides React bindings for &lt;a href=&quot;https://router5.github.io/&quot;&gt;router5&lt;/a&gt;, a generic routing solution he has developed. Read on to learn more about this interesting alternative.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are also &lt;a href=&quot;https://github.com/router5/redux-router5&quot;&gt;redux bindings&lt;/a&gt; available for router5!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;/assets/img/roch.jpg&quot; alt=&quot;Thomas Roch&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;I have a degree in engineering, although my education was for most parts non specialised, I ended up studying a bit more mechanical and electronics engineering. I have always been programming in my spare time and hacking stuff, and inevitably, my early professional career slowly drifted towards software engineering. I explored a few areas and languages: embedded software on micro-processors, desktop applications and web applications.&lt;/p&gt;
&lt;p&gt;I did a fair amount of full-stack web development, and a few years ago I decided to take front-end development very seriously, being amazed by what a difference Node.js and social coding had started to make. I am a French national, I am currently a software engineer at Fanduel and live in Glasgow, Scotland.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-react-router5-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-react-router5-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe &lt;em&gt;react-router5&lt;/em&gt; to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-react-router5-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;react-router5&lt;/em&gt; (and router5) is a different way of thinking about routing in front-end applications, and a way which I think suits a lot more trees of components. Instead of focusing on what component to render for what route, or providing a handler function per route, it sees routing as going from A to B, not loading B.&lt;/p&gt;
&lt;p&gt;There is clear separation of concerns: router5 will take care of checking routing can happen and provide route updates. react-router5 provides ways to update your virtual tree, but won&amp;#39;t do it for you. So you can have control over routing. I am not the only one testing and implementing new ideas around routing though.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-react-router5-&quot; id=&quot;why-did-you-develop-react-router5-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop &lt;em&gt;react-router5&lt;/em&gt;?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-react-router5-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I started using React a little more than a year ago, while still developing heavily with Angular. Working alongside a back-end team using Scala, I had slowly been introduced to functional programming, immutability, reactive programming, etc... I played with React, used it on a playground project at home, and one of the really first thing I searched for was a router. I think it is a habit most of us have, having being used to rely on frameworks. And no surprise on the outcome, I ended up with react-router.&lt;/p&gt;
&lt;p&gt;Slowly, my practice of React evolved. I started to reject state, played with Flux without being fully convinced, looked a lot at reactive programming but I didn&amp;#39;t know what to do about routing. It felt like it was standing on my way, I wasn&amp;#39;t building my application virtual tree, a router was doing it for me. So I started to play with routing, implementing custom solutions.&lt;/p&gt;
&lt;p&gt;The first ones reflected my thoughts at the time: it was all very confusing. I slowly realized I wanted routing to be treated the same way application state changes are. Therefore, I didn&amp;#39;t need a router for React. And not only did I need a library or framework agnostic router, I needed a router spitting out route updates as data updates, and not a router defining routes as a map of paths and route handlers.&lt;/p&gt;
&lt;p&gt;I looked around and couldn&amp;#39;t find what I was after. At the time, an article mentioning &lt;a href=&quot;https://github.com/pillarjs/routington&quot;&gt;pillarjs/routington&lt;/a&gt; on DailyJS was published, I really liked the idea of a trie of routes. It mirrors your tree of components which helps building a mental model about your application and routing in general.&lt;/p&gt;
&lt;p&gt;But I wanted to use named routes with parameters and it became router5 starting point: developing a library allowing to build a tree of named routes (route-node, supported by path-parser) before developing a router. It was also a conscious effort to explode routing in specialised parts, and remove the tight coupling between routes and components. I took some inspiration from various sources, including new generation frameworks like Aurelia and Angular2 for functionalities.&lt;/p&gt;
&lt;p&gt;A few months back, shortly after ReactEurope 2015, I remember watching Christopher Chedeau saying about routers during his keynote: &lt;em&gt;&amp;quot;We have seen only one player emerge which is react-router... Is there any innovation going on? ... Actually, innovation already happened a few years ago and it happened in the Ember community...&amp;quot;.&lt;/em&gt; That fuelled my motivation and made me accelerate on router5. Once router5 was released in July, I started to focus on integration with React but lacked time and maturity. And it is only now with 1.0.0 that a solid React integration is provided with react-router5.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot; id=&quot;what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What kind of challenges have you experienced while developing it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first barrier was to believe routing is complicated, there was an intimidation factor. Once I started to focus on specific areas and to split concerns, those initial concerns went away. One other challenge was to detrain from libraries and frameworks I was used to, and trying not to be too much influenced by existing routing solutions.&lt;/p&gt;
&lt;p&gt;I don&amp;#39;t think I had major technical challenges, I was for example able to re-use previous experiences around lexical analysis and tokenisers to build a library for parsing and matching paths. I otherwise needed to let my thoughts and knowledge mature over time. For react-router5, I had to gain experience on higher-order components to be able to propose them rather than mixins.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Version 1.0.0 of router5 is an important milestone because it totally removes side-effects from the router core. URL and browser history are now fully treated as side-effects, like DOM updates are side-effects of state updates and virtual tree re-renders. It also introduces plugins and improves on the use of middleware functions. The next step would be to start to see stuff emerge from the community.&lt;/p&gt;
&lt;p&gt;The second important aspect is data loading. I don&amp;#39;t currently have examples demonstrating how it can be achieved. Partially because there are so many ways data loading can be handled depending on how you handle state, and partially because I am careful not to introduce tight coupling where I wouldn&amp;#39;t want to see some. But I will explore GraphQL and Falcor and see if there is a need to introduce integration helpers.&lt;/p&gt;
&lt;p&gt;I would also like to improve the overall quality of the documentation I provide in order to attract more people.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React and front-end in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The biggest trend right now is functional programming. At the component level, it means context-free and state-free components with higher-order components linking them to state and context. The second trend is reactive programming, outside components.&lt;/p&gt;
&lt;p&gt;I mentioned above having routes in a tree to help with building mental pictures, having an application state as a tree is also very beneficial in that sense, and I believe in global application states. I am currently using redux on a greenfield project and released &lt;a href=&quot;https://github.com/router5/redux-router5&quot;&gt;redux-router5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also like Baobab a lot and follow what Christian Alfoni is doing with Cerebral, and what Andre Staltz is doing with CycleJs. I recently wrote an article about &lt;a href=&quot;http://blog.reactandbethankful.com/posts/2015/09/15/understanding-the-functional-revolution/&quot;&gt;understanding the functional revolution in front-end applications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For React, the future will be towards stateless, context-less, this-less functional components. It only started with 0.14.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I like what Anthony Short is doing with &lt;a href=&quot;https://github.com/dekujs/deku&quot;&gt;Deku&lt;/a&gt;. I also like the work of Simon Friis Vindum (&lt;a href=&quot;https://github.com/paldepind&quot;&gt;paldepind&lt;/a&gt; on Github).&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks a lot for the interview Thomas! I hope people will find your routing solution. To make it easier to dig in, I&amp;#39;ve compiled a set of resources below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://router5.github.io/&quot;&gt;The official site of router5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/router5/react-router5&quot;&gt;router5/react-router5&lt;/a&gt; - React bindings&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://router5.github.io/docs/with-react.html#/inbox&quot;&gt;Online demo for React&lt;/a&gt; - &lt;a href=&quot;https://github.com/router5/examples/tree/master/apps/react&quot;&gt;Demo source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/router5/redux-router5&quot;&gt;router5/redux-router5&lt;/a&gt; - Redux bindings&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://router5.github.io/docs/with-react-redux.html#/inbox&quot;&gt;Online demo for React and Redux&lt;/a&gt; - &lt;a href=&quot;https://github.com/router5/examples/tree/master/apps/react-redux&quot;&gt;Demo source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v1.9.5</title><id >asurvivejswebpackandreactv1952015-11-03t00:00:00+02:00</id><link href="http://survivejs.com/blog/survivejs-195"></link><updated >2015-11-03T00:00:00+02:00</updated><content type="html">&lt;p&gt;You could say a lot has happened since &lt;a href=&quot;../survivejs-19&quot;&gt;the previous release&lt;/a&gt;. &lt;a href=&quot;https://facebook.github.io/react/blog/2015/10/07/react-v0.14.html&quot;&gt;React 0.14&lt;/a&gt; came out mere hours after it. React DnD gained 0.14 compatibility in its 2.0 release. Node.js reached &lt;a href=&quot;https://nodejs.org/en/blog/release/v5.0.0/&quot;&gt;5.0.0&lt;/a&gt; (v4 is LTS, supported for four years). And a couple of days ago &lt;a href=&quot;https://babeljs.io/blog/2015/10/29/6.0.0/&quot;&gt;Babel 6.0.0&lt;/a&gt; was released. In addition &lt;a href=&quot;https://github.com/webpack/webpack/pull/861&quot;&gt;Webpack 2&lt;/a&gt; is in sight.&lt;/p&gt;
&lt;p&gt;The purpose of this release is to take some of these changes into account. Most importantly it introduces initial support for React 0.14. Babel hasn&amp;#39;t been updated to the newest version yet given some tooling the book relies upon needs to catch up. The book doesn&amp;#39;t take advantage of the function based component syntax because of the same reason. As the tooling matures, I&amp;#39;ll perform the changes needed.&lt;/p&gt;
&lt;p&gt;Due to a twist of fate I had a chance to represent &lt;a href=&quot;http://www.jsdelivr.com/&quot;&gt;jsDelivr&lt;/a&gt;, a free super-fast CDN, at &lt;a href=&quot;http://conferences.oreilly.com/oscon/open-source-eu-2015&quot;&gt;OSCON EU&lt;/a&gt;. It was a great trip and gave some new perspective on what I&amp;#39;m doing at the moment. Besides &lt;a href=&quot;http://www.nixtu.info/2015/10/thoughts-on-oscon-2015-amsterdam.html&quot;&gt;visiting OSCON&lt;/a&gt;, I did a quick visit at &lt;a href=&quot;http://www.nixtu.info/2015/10/thoughts-on-blender-conference-2015.html&quot;&gt;the Blender conference&lt;/a&gt;. It&amp;#39;s fun to break the monotony every once in a while.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-1-9-5-&quot; id=&quot;book-improvements-1-9-5-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;1.9.5&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-1-9-5-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 79 commits went to &lt;code&gt;1.9.5&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.9.0...v1.9.5&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved the flow of the chapter and made it more accessible hopefully.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; configuration. Now you can set those through the env if you want.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;em&gt;webpack-dev-server&lt;/em&gt; alternatives.&lt;/li&gt;
&lt;li&gt;Made the code examples more complete so it&amp;#39;s harder to miss vital parts.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixed &lt;em&gt;babel-loader&lt;/em&gt; to version 5. If version 6 is installed, the current setup will fail as major changes are needed.&lt;/li&gt;
&lt;li&gt;Expanded code examples so it&amp;#39;s harder to miss vital parts.&lt;/li&gt;
&lt;li&gt;Changed the configuration to enable specific features instead of &lt;em&gt;stage 1&lt;/em&gt;. This will change further with Babel 6. I believe it&amp;#39;s preferable to enable specific features rather than stages as that documents the project better.&lt;/li&gt;
&lt;li&gt;Streamlined Babel discussion and removed duplication.&lt;/li&gt;
&lt;li&gt;Added React 0.14 specific bits (&lt;em&gt;react-dom&lt;/em&gt; most importantly).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned React import shortcut. Personally I favor explicit imports as then it&amp;#39;s easier to grep around. It&amp;#39;s good to be aware of alternatives, though.&lt;/li&gt;
&lt;li&gt;Linked to &lt;code&gt;debugger;&lt;/code&gt; statement documentation and cleared it up. It matters where you place it.&lt;/li&gt;
&lt;li&gt;Explained &lt;code&gt;super&lt;/code&gt; behavior in greater detail.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;concat&lt;/code&gt; shortcut related typo. It&amp;#39;s better to use &lt;code&gt;[...this.state.notes, {id: uuid.v4(), task: &amp;#39;New task&amp;#39;}]&lt;/code&gt; there.&lt;/li&gt;
&lt;li&gt;Simplified &lt;em&gt;context&lt;/em&gt; discussion now that there is &lt;a href=&quot;https://facebook.github.io/react/docs/context.html&quot;&gt;official documentation&lt;/a&gt; for it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained &lt;code&gt;bind&lt;/code&gt; and its behavior in greater detail.&lt;/li&gt;
&lt;li&gt;Pushed decorator parts to an appendix of its own. Now the chapter is more digestible and you can check out decorators later if you want.&lt;/li&gt;
&lt;li&gt;Changed Alt to use &lt;code&gt;alt-container&lt;/code&gt; package. This makes it React 0.14 compatible.&lt;/li&gt;
&lt;li&gt;Simplified dispatching discussion to make PDF layout work better.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Discussed alternative ways to deal with data modeling at introduction.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;react-dnd-html5-backend&lt;/code&gt; to the project. Now React DnD backends are available through separate packages.&lt;/li&gt;
&lt;li&gt;Explained what the decorator does given this is the first place where we hit them now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added a little section about deploying to GitHub Pages. This is one of those small things that makes life simpler.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react-&quot; id=&quot;testing-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Upgraded to 0.14. Now React DnD uses a separate package for testing.&lt;/li&gt;
&lt;li&gt;Renamed &lt;code&gt;react-testutil-query&lt;/code&gt; as &lt;code&gt;teaspoon&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#typing-with-react-&quot; id=&quot;typing-with-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Typing with React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#typing-with-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Upgraded to 0.14.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;Lane&lt;/code&gt; propType definition.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#authoring-libraries&quot; id=&quot;authoring-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Authoring Libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#authoring-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Rewrote portions to improve flow.&lt;/li&gt;
&lt;li&gt;Dropped &lt;em&gt;bower.json&lt;/em&gt; mention.&lt;/li&gt;
&lt;li&gt;Updated &lt;em&gt;package.json&lt;/em&gt; example to match &lt;a href=&quot;https://survivejs.github.io/react-component-boilerplate/&quot;&gt;the boilerplate&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Added a section about publishing packages. Now the workflow should be clearer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#styling-react&quot; id=&quot;styling-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Styling React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#styling-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Rewrote portions to improve flow.&lt;/li&gt;
&lt;li&gt;Replaced &lt;a href=&quot;https://github.com/hackhat/smart-css&quot;&gt;smart-css&lt;/a&gt; with &lt;a href=&quot;https://github.com/jsstyles/jss&quot;&gt;JSS&lt;/a&gt; as JSS is more current and represents an interesting alternative.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Content-wise there isn&amp;#39;t much to do. I want to get the typing chapter to a good shape. Fortunately &lt;a href=&quot;http://flowtype.org/&quot;&gt;Flow&lt;/a&gt; has been developing nicely. The same goes for &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/yahoo/react-dnd-touch-backend&quot;&gt;react-dnd-touch-backend&lt;/a&gt; related work is progressing. There are still some initial problems to resolve, though, so I&amp;#39;m not sure if this will make the cut.&lt;/p&gt;
&lt;p&gt;Depending on how 0.14 related tooling develops, I may do an intermediate release before &lt;code&gt;v2.0.0&lt;/code&gt;. In any case, there&amp;#39;s light at the end of the tunnel.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most amazing part of this project has been the amount of feedback I&amp;#39;ve received. I&amp;#39;ve tried to put it to good use. You can &lt;a href=&quot;mailto:info@survivejs.com&quot;&gt;contact me directly&lt;/a&gt; or through the GitHub &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;issue tracker&lt;/a&gt;. Also &lt;a href=&quot;https://gitter.im/survivejs/webpack_react&quot;&gt;Gitter&lt;/a&gt; will work.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >Baobab - Data Trees with Cursors - Interview with Guillaume Plique</title><id >abaobabdatatreeswithcursorsinterviewwithguillaumeplique2015-11-02t00:00:00+02:00</id><link href="http://survivejs.com/blog/baobab-interview"></link><updated >2015-11-02T00:00:00+02:00</updated><content type="html">&lt;p&gt;I remember running into &lt;a href=&quot;https://github.com/Yomguithereal/baobab&quot;&gt;Baobab&lt;/a&gt; through &lt;a href=&quot;http://www.christianalfoni.com/articles/2015_02_06_Plant-a-Baobab-tree-in-your-flux-application&quot;&gt;Christian Alfoni&amp;#39;s post about it&lt;/a&gt;. In short, it&amp;#39;s a library that provides you optionally immutable data trees with cursors. Admittedly that&amp;#39;s quite a mouthful.&lt;/p&gt;
&lt;p&gt;In order to understand the topic a little better, it&amp;#39;s probably best to let the author, Guillaume Plique, to explain his ideas behind the library.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
  &lt;span class=&quot;author&quot;&gt;
    &lt;img src=&quot;/assets/img/plique.jpg&quot; alt=&quot;Guillaume Plique&quot; class=&quot;author&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;
  &lt;/span&gt;

My name is Guillaume Plique and I am a full stack developer currently working in Paris for Sciences Po&amp;#39;s &lt;a href=&quot;https://github.com/medialab&quot;&gt;médialab&lt;/a&gt; which is a laboratory aiming at gathering people from social sciences, design and IT in order to develop innovative research projects.
&lt;/p&gt;

&lt;p&gt;I mostly deal with web mining, graph processing and, of course, UI development. More concretely, my job consists in helping researchers achieve their goals by designing and developing the correct tools for them.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-baobab-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-baobab-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe Baobab to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-baobab-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I guess you could picture Baobab as a mere JavaScript object. As such, you can set its keys, and of course, nest items as you wish. If you do so, you will find yourself with what is commonly known in computer science as a tree (hence the Baobab).&lt;/p&gt;
&lt;p&gt;Now this is where the library kicks in: imagine that you can select any particular branch of the tree, because at this precise moment it might be the only part of the tree you are interested in, and subscribe to its updates.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Let&apos;s create a very simple tree:&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; &gt;var&lt;/span&gt; tree &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; &gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; &gt;Baobab&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
  user&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
    name&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;John&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
    surname&lt;span class=&quot;token punctuation&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;Doe&apos;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Selecting a part of the tree by creating a &quot;cursor&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; &gt;var&lt;/span&gt; nameCursor &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; tree&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Getting the user&apos;s name:&lt;/span&gt;
tree&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; &gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// or&lt;/span&gt;
nameCursor&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; &gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Listening to the name&apos;s updates&lt;/span&gt;
nameCursor&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;update&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot; &gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
  console&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;The name has changed!&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let&amp;#39;s imagine this tree is meant to hold your whole app&amp;#39;s state (think &lt;em&gt;model&lt;/em&gt; in a typical MVC architecture) and you have, with cursors, a very straightforward way to plug UI components to it. Just make your component declare the part of the tree they are interested in and they will be re-rendered &lt;strong&gt;only&lt;/strong&gt; if required because said part of the tree was updated.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// A simplistic component displaying the user&apos;s surname:&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; &gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot; &gt;component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;surname&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot; &gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;&amp;lt;span&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot; &gt;+&lt;/span&gt; surname &lt;span class=&quot;token operator&quot; &gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;&amp;lt;/span&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Rendering logic&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; &gt;var&lt;/span&gt; mountNode &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;surname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; &gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot; &gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;

  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Getting the surname from our tree&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot; &gt;var&lt;/span&gt; surname &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; tree&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; &gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;surname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Rendering our component&lt;/span&gt;
  mountNode&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot; &gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot; &gt;component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;surname&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
&lt;span class=&quot;token function&quot; &gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// Subscribing to the surname&apos;s updates&lt;/span&gt;
tree&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;surname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; &gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;update&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot; &gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;

  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// The surname has been updated, let&apos;s re-render!&lt;/span&gt;
  &lt;span class=&quot;token function&quot; &gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// This will trigger a render:&lt;/span&gt;
tree&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; &gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;surname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;Williams&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// This will not:&lt;/span&gt;
tree&lt;span class=&quot;token punctuation&quot; &gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; &gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot; &gt;&apos;user&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&apos;Jack&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As a bonus, the tree&amp;#39;s data is persistent and immutable (at least by default, but feel free to tweak this if needed through options). This means that you can easily store its history to go back and forth in time, plus you can perform efficient referential comparisons (&lt;code&gt;O(1)&lt;/code&gt;, no diffing involved) between several states of the tree in time. Comparison of states is as simple as:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;previousData &lt;span class=&quot;token operator&quot; &gt;!==&lt;/span&gt; nextData
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-baobab-&quot; id=&quot;why-did-you-develop-baobab-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop Baobab?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-baobab-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well, I really enjoy developing in &lt;a href=&quot;http://clojure.org/&quot;&gt;Clojure&lt;/a&gt; from time to time and I grew accustomed to &lt;a href=&quot;https://en.wikipedia.org/wiki/Zipper_%28data_structure%29&quot;&gt;zippers&lt;/a&gt; (a typical data structure you generally encounter in functional programming languages) and I am very fond of cursors such as the ones you can find in the &lt;a href=&quot;https://github.com/omcljs/om/wiki/Cursors&quot;&gt;Om&lt;/a&gt; library (a popular ClojureScript interface to &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;So, basically, the idea was to port/re-use those concepts (functional programming is a place full of wonderful concepts) in raw JavaScript. But none of the existing solutions were fitting my needs.&lt;/p&gt;
&lt;p&gt;At first, I tried to create cursors for the &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;immutable-js&lt;/a&gt; library but finally abandoned because of the mere size of the files that clients would need to load and the quirks of having to use a dedicated API for both get/set operations on the data compared to what you would do with raw JavaScript objects.&lt;/p&gt;
&lt;p&gt;Then I stumbled upon React&amp;#39;s &lt;a href=&quot;https://facebook.github.io/react/docs/update.html&quot;&gt;immutability helpers&lt;/a&gt; and thought this was mainly what I wanted but needed to go further (the first versions of Baobab&amp;#39;s updates specifications were by the way very similar to the MongoDB-like objects used by the aforementioned helpers).&lt;/p&gt;
&lt;p&gt;Hence I started developing the first version of Baobab along with its React integration so I could build my UIs the way I wanted. The objectives of the library were therefore the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Baobab tree should be able to hold the centralized state of an app and this state could be as complex as any JavaScript object would (simple key/value store without nesting capabilities would not be enough, for instance).&lt;/li&gt;
&lt;li&gt;The Boabab tree should support cursors and should dispatch update events correctly so that the rendering of components bound to specific parts of the tree may be optimal.&lt;/li&gt;
&lt;li&gt;The data you read from the tree should be raw JavaScript and not some abstraction over it.&lt;/li&gt;
&lt;li&gt;The tree&amp;#39;s data should be persistent and immutable (I must thank &lt;a href=&quot;https://github.com/christianalfoni&quot;&gt;Christian Alfoni&lt;/a&gt; here for our numerous discussions on the subject when developing the first versions of the library).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot; id=&quot;what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What kind of challenges have you experienced while developing it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The main challenges concerned memory structures and optimization. Baobab really sits halfway between raw JavaScript objects and immutable data structures. Remaining as efficient as possible in this case is not the easiest thing. For instance, to ensure persistence and referential comparisons between several states of your tree, I have to shallow clone some parts of it, not the whole tree, of course, but only the updated branch in the tree.&lt;/p&gt;
&lt;p&gt;The outcome is that you do have a data structure which is really faster than &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;immutable-js&lt;/a&gt; if your objective is to read and handle raw JavaScript objects but which comes with a performance cost on writes. But this cost remain extremely negligible when handling the kind of data we usually use as our app&amp;#39;s state. But, obviously, I wouldn&amp;#39;t vouch for Baobab, for instance, if you need to store immutable lists containing billions of items and that need to be updated very frequently (i.e. every ~n ms).&lt;/p&gt;
&lt;p&gt;To be true, I am still pondering some internal optimizations of the library and the main challenge here is to be able to optimize the general cases and the cases for which the library was created while not falling into the trap of over optimizing edge cases that wouldn&amp;#39;t happen normally.&lt;/p&gt;
&lt;p&gt;Another challenge was to produce an API as streamlined as possible. What I noticed before starting to develop Baobab was that most of the zippers/cursors libraries existing in JavaScript often have a very complex and verbose API which is, in the end, very difficult to manipulate.&lt;/p&gt;
&lt;p&gt;My aim, with Baobab, was therefore to offer the simplest and most polymorphic API so that one could use it easily and without having to be an expert on lambda calculus. I hope I have reached this goal with the current API.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For now, I need to polish some things, optimize the internals of the library, fix bugs and add some more features to the library. After that, I will start trimming useless parts of the library that no one is using and maybe relocate some of its parts to external libraries (the history helpers might become an external library, for instance).&lt;/p&gt;
&lt;p&gt;What I want to avoid is to bloat the library with unnecessary features that would make it evolve into a complex and shapeless blob.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React and front-end in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Those are great times for JavaScript as most functional principles finally start to reach web development. To me, UI componentization is key here (mainly symbolized by React and web components nowadays but not only) and will slowly make everyone realize that UIs should be, as far as possible, considered as pure functions. The centralized state of your app is therefore no less than the arguments you pass to such a function.&lt;/p&gt;
&lt;p&gt;Building UIs thusly comes with a lot of collateral advantages: UI snapshots, app state storage, time travel, easy hot-reloading etc. and it would be a loss not to embrace them. What&amp;#39;s more, functional principles, notably immutability, really make reasoning about complexity easier and make us better developers at the end.&lt;/p&gt;
&lt;p&gt;To me, the future also means new tools that should make working on front-end apps more comfortable/enjoyable and hot-loading is just the beginning. The &lt;a href=&quot;https://github.com/bhauman/devcards&quot;&gt;devcards&lt;/a&gt; concept by &lt;a href=&quot;https://github.com/bhauman&quot;&gt;Bruce Hauman&lt;/a&gt; (again, coming from ClojureScript&amp;#39;s community) is the very symbol of what we can expect to work with in a near future.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I cannot give you a specific name but I think you should definitely interview someone from the ClojureScript community. We still have a lot to learn from this community which is actively bringing functional concepts to life in modern web development.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for the interview Guillaume! In case you want to get started with Baobab, consider the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Yomguithereal/baobab&quot;&gt;Baobab project site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Yomguithereal/baobab-react&quot;&gt;baobab-react&lt;/a&gt; - baobab-react implements popular React patterns to make it easier to integrate with Baobab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that &lt;a href=&quot;http://christianalfoni.com/cerebral/&quot;&gt;Cerebral&lt;/a&gt; has Baobab bindings. We &lt;a href=&quot;../cerebral-interview&quot;&gt;discussed the topic earlier&lt;/a&gt; with Christian.&lt;/p&gt;
</content></entry><entry ><title >React Component Boilerplate v1.0</title><id >areactcomponentboilerplatev102015-10-22t00:00:00+03:00</id><link href="http://survivejs.com/blog/react-component-boilerplate-10"></link><updated >2015-10-22T00:00:00+03:00</updated><content type="html">&lt;p&gt;If you &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=react+boilerplate&quot;&gt;try searching GitHub for React boilerplates&lt;/a&gt;, you&amp;#39;ll find over thousand results. Nothing is harder than to agree on a standard boilerplate. As a result we have many to choose from.&lt;/p&gt;
&lt;p&gt;Given I like to author React components, such as &lt;a href=&quot;https://bebraw.github.io/reactabular/&quot;&gt;Reactabular&lt;/a&gt;, I&amp;#39;ve developed a little boilerplate myself. &lt;a href=&quot;https://survivejs.github.io/react-component-boilerplate/&quot;&gt;survivejs/react-component-boilerplate&lt;/a&gt; incorporates a large amount of good practices. I&amp;#39;ll go through some of them next. I cover many of them &lt;a href=&quot;../../webpack_react/authoring_libraries/&quot;&gt;at the book&lt;/a&gt; but it doesn&amp;#39;t hurt to dig deeper.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing&quot; id=&quot;testing&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I implemented my testing approach based on Cesar Andreu&amp;#39;s &lt;a href=&quot;https://github.com/cesarandreu/web-app&quot;&gt;web-app&lt;/a&gt;. It is based on &lt;a href=&quot;https://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt; (test runner), &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; (test framework), &lt;a href=&quot;http://chaijs.com/&quot;&gt;Chai&lt;/a&gt; (assertions), and &lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt; (headless browser). Code coverage reports are generated through &lt;a href=&quot;https://gotwarlost.github.io/istanbul/&quot;&gt;istanbul&lt;/a&gt; and &lt;a href=&quot;https://github.com/douglasduteil/isparta&quot;&gt;isparta&lt;/a&gt; (Babel compatibility for istanbul). Besides casual &lt;em&gt;npm test&lt;/em&gt;, there&amp;#39;s also a TDD mode (&lt;em&gt;npm run tdd&lt;/em&gt;) so you can run tests automatically while you develop.&lt;/p&gt;
&lt;p&gt;Not surprisingly this is where most of the complexity of my boilerplate lies. There&amp;#39;s not much I can do about it, though. There are times when I wish npm allowed more granularity. If I could push test dependencies to something like &lt;code&gt;testDependencies&lt;/code&gt; or define hierarchies below &lt;code&gt;devDependencies&lt;/code&gt;, that would help me to communicate the intent better.&lt;/p&gt;
&lt;p&gt;My earlier setup relied on Facebook&amp;#39;s &lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;Jest&lt;/a&gt;. Even though it&amp;#39;s easier to hook it up, I find the current approach more developer friendly. I never could get into grips with Jest&amp;#39;s auto-mocking behavior and performance was an issue even with small libraries. It is possible the situation will change but for now I&amp;#39;m sticking with Mocha myself. Keep an eye on Jest, though.&lt;/p&gt;
&lt;p&gt;Linting is handled through &lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt;. It&amp;#39;s an amazing tool and will contribute towards the quality and consistency of your code. Read &lt;a href=&quot;../../webpack_react/linting_in_webpack/&quot;&gt;my chapter about linting&lt;/a&gt; to get into it. There&amp;#39;s &lt;em&gt;npm run lint&lt;/em&gt; and Webpack triggers it as a pre-loader. This way I get linting warnings and errors during develop. In addition I have my editor set up to show them interactively.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#handling-versions&quot; id=&quot;handling-versions&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Handling Versions&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#handling-versions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An important part of developing libraries is actually publishing them. I&amp;#39;ve tried to keep this simple. I can get a release out simply by hitting:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ npm version 0.2.1
$ npm publish
$ &lt;span class=&quot;token function&quot; &gt;git&lt;/span&gt; push
$ &lt;span class=&quot;token function&quot; &gt;git&lt;/span&gt; push --tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I know this could be hidden easily behind a single command but it&amp;#39;s not too bad as I might not want to push immediately always. A tool known as &lt;a href=&quot;https://www.npmjs.com/package/semantic-release&quot;&gt;semantic-release&lt;/a&gt; could simplify the workflow further but I haven&amp;#39;t adopted it yet. &lt;/p&gt;
&lt;p&gt;To make sure I get the right build artifacts out there in the current approach, I&amp;#39;ve set up a couple of npm hooks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-json&quot;&gt;&lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
  ...
  &lt;span class=&quot;token property&quot; &gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
    ...
    &lt;span class=&quot;token property&quot; &gt;&quot;preversion&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&quot;npm run test &amp;amp;&amp;amp; npm run lint &amp;amp;&amp;amp; npm run dist &amp;amp;&amp;amp; npm run dist-min &amp;amp;&amp;amp; git commit --allow-empty -am \&quot;&lt;/span&gt;Update dist\&lt;span class=&quot;token string&quot; &gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot; &gt;&quot;prepublish&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&quot;npm run dist-modules&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot; &gt;&quot;postpublish&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&quot;npm run gh-pages &amp;amp;&amp;amp; npm run deploy-gh-pages&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot; &gt;&quot;postinstall&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot; &gt;&quot;node lib/post_install.js&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;preversion&lt;/em&gt; hook makes sure all tests pass, lint included, generates distribution builds, and includes those into a commit. I prefer to maintain the builds this way as it&amp;#39;s convenient and I don&amp;#39;t feel they bloat the repository too much. So far the approach has worked well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;prepublish&lt;/em&gt; hook makes sure the npm version of the package gets generated. In short, it just triggers &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; over the source and converts possible special features and JSX I&amp;#39;m using into a form that&amp;#39;s easy to consume from the Node.js world.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;postpublish&lt;/em&gt; generates the package site and pushes it to the &lt;em&gt;gh-pages&lt;/em&gt; branch. The setup is isomorphic and it will convert the project &lt;em&gt;README.md&lt;/em&gt; into a HTML structure. This was implemented to make sure the package page works even without JavaScript. There&amp;#39;s also a minor SEO benefit. And you get to say that your boilerplate is isomorphic so there&amp;#39;s that.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;postinstall&lt;/em&gt; portion is there to make sure that it is possible to consume the package through a GitHub reference (i.e., &lt;code&gt;bebraw/reactabular#hashgoeshere&lt;/code&gt;). If I detect that there isn&amp;#39;t expected directory, it will trigger &lt;em&gt;npm run dist-modules&lt;/em&gt; just like the &lt;em&gt;prepublish&lt;/em&gt; process does. The only problem is that the current solution supports only Node.js 0.12+. It would be possible to rewrite that if it becomes an issue.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#pre-push-hook&quot; id=&quot;pre-push-hook&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Pre-push Hook&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#pre-push-hook&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even though I have &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; set up and make it run my tests after each push, I&amp;#39;ve gone a step further. I like to catch problems before a push. That&amp;#39;s why I&amp;#39;ve set up a pre-push hook through a package known as &lt;a href=&quot;https://www.npmjs.com/package/git-prepush-hook&quot;&gt;git-prepush-hook&lt;/a&gt;. It writes the Git configuration to your repository when you install it. You can control its behavior through &lt;em&gt;package.json&lt;/em&gt; by a declaration like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-json&quot;&gt;&lt;span class=&quot;token punctuation&quot; &gt;{&lt;/span&gt;
  ...
  &lt;span class=&quot;token property&quot; &gt;&quot;pre-push&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot; &gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot; &gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot; &gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; &gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot; &gt;&quot;lint&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot; &gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot; &gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You tell it what npm scripts to execute and it does that before a push. The biggest advantage of doing this is that it allows you to fix potential issues before they end up in public consumption. You can do the fix and then make it look as if you didn&amp;#39;t make one through an interactive rebase (&lt;code&gt;git rebase -i&lt;/code&gt;). It&amp;#39;s one of those Git features that can help to keep your version history sane.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#other-features&quot; id=&quot;other-features&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Other Features&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#other-features&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There&amp;#39;s of course &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot;&gt;React Transform&lt;/a&gt; based hot loading. The Webpack configuration is a little elaborate but I&amp;#39;ve done my best to keep it readable. You can find some usual React related optimizations there (mainly env). The isomorphic portion takes some code as well.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;#39;ve been thinking of pushing some of the common parts to a library of its own to ease the maintenance effort. This is the way &lt;a href=&quot;https://www.npmjs.com/package/hjs-webpack&quot;&gt;hjs-webpack&lt;/a&gt; does it. The problem is that a boilerplate is a snapshot always. A library based approach would help in this regard. Most importantly, it would help to cut down the amount of dependencies.&lt;/p&gt;
&lt;p&gt;I believe it could be valuable to adopt a tool such as &lt;a href=&quot;https://commitizen.github.io/cz-cli/&quot;&gt;commitizen&lt;/a&gt;. That would make it easier to write meaningful Git commit messages. Even better, the tool can generate change logs for releases.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope you&amp;#39;ll find my little boilerplate useful. There might be some ideas there you could adopt for your own. Boilerplates are a little problematic maintenance-wise, but as mentioned, it might be possible to alleviate that by pushing the problem elsewhere.&lt;/p&gt;
&lt;p&gt;Of course the situation is far worse if you don&amp;#39;t have a boilerplate to begin with. Even a small project tends to require quite a few dependencies before you can become productive with it.&lt;/p&gt;
</content></entry><entry ><title >React-Bootstrap - Bootstrap Rebuilt for React - Interview with Matt Smith</title><id >areactbootstrapbootstraprebuiltforreactinterviewwithmattsmith2015-10-13t00:00:00+03:00</id><link href="http://survivejs.com/blog/react-bootstrap-interview"></link><updated >2015-10-13T00:00:00+03:00</updated><content type="html">&lt;p&gt;&lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; is easily one of the most popular CSS frameworks out there. Beyond grids and basic layout utilities, it provides a nice set of widgets to use. Even though you can use the CSS with React, this may become cumbersome quite soon. You will likely end up wrapping portions of Bootstrap within components of your own.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://react-bootstrap.github.io/&quot;&gt;React-Bootstrap&lt;/a&gt; is a project that solves this problem for you. To understand the project better, I&amp;#39;m interviewing Matt Smith, one of the authors.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
  &lt;span class=&quot;author&quot; style=&quot;float: right&quot;&gt;
    &lt;img src=&quot;https://www.gravatar.com/avatar/2edcba3f73592de39dc2e83826e22fe2?s=200&quot; alt=&quot;Matt Smith&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
  &lt;/span&gt;

I have been writing software since I was in High School back in the 90s. I wasn&amp;#39;t able to land my first real job though until the mid 2000s as a QA Engineer. Automating the UI of desktop applications I didn&amp;#39;t write was not what I&amp;#39;d call fun, though the learning experience was immeasurable.
&lt;/p&gt;

&lt;p&gt;Shortly after that I was serving in the United States Marine Corps Reserve which required a break from coding to serve a 1 year tour of duty in Al Ramadi, Iraq. Soon after my return I was able to find a new job where I built a number of internal web applications for my employer.&lt;/p&gt;
&lt;p&gt;It was there that I first tested out the waters of OSS Development. I mainly stayed in the realm of the C# or .Net community until about two years ago when I started branching out. Writing well crafted quality software is my passion.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-react-bootstrap-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-react-bootstrap-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe React-Bootstrap to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-react-bootstrap-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;React-Bootstrap is a collection of React Components that are primarily designed to work with
Bootstrap CSS classes. Bootstrap does provide some JavaScript but it&amp;#39;s tightly coupled to jQuery which does not play well with React idioms. We aim to provide parity with Bootstrap CSS in functionality and styling, though we differ in the JavaScript API.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-react-bootstrap-&quot; id=&quot;why-did-you-develop-react-bootstrap-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop React-Bootstrap?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-react-bootstrap-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I didn&amp;#39;t that credit goes to &lt;a href=&quot;https://github.com/stevoland&quot;&gt;Stephen J. Collings (stevoland)&lt;/a&gt; and &lt;a href=&quot;https://github.com/pieterv&quot;&gt;Pieter Vanderwerff (pieterv)&lt;/a&gt;. Though when I came into the picture active development on React-Bootstrap wasn&amp;#39;t really going anywhere. From what I could tell it had been abandoned, though the number of issues and pull requests kept growing.&lt;/p&gt;
&lt;p&gt;The design team at our dev shop has been using a slightly modified version of Bootstrap for years, and when we started moving to React we found React-Bootstrap. We were using Angular and didn&amp;#39;t use a core UI library leaving us to implement a lot of the Bootstrap JavaScript ourselves in an Angular world. We didn&amp;#39;t want to make that mistake again so we grabbed a hold of React-Bootstrap pretty quick.&lt;/p&gt;
&lt;p&gt;At the same time that we started this transition to React, we were also going after Section 508 and WCAG 2.0 AA Compliance. We were continually finding that the React-Bootstrap components are not compliant so we wanted to contribute back.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-react-bootstrap-&quot; id=&quot;what-kind-of-challenges-have-you-experienced-while-developing-react-bootstrap-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What kind of challenges have you experienced while developing React-Bootstrap?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-kind-of-challenges-have-you-experienced-while-developing-react-bootstrap-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As I mentioned earlier, the React-Bootstrap project felt like a dead project around February/March of 2015. The release up on npm at that time didn&amp;#39;t even work nor had it for a few months. I had submitted a PR or two prior to that time so I reached out to Stephen and Pieter to ask if there was anything I could do to help. They were kind enough to include me in the organization and granted me push access to npm.&lt;/p&gt;
&lt;p&gt;The npm release was broken because there was a tedious manual process in place to build the JSX code and manually push that to the Bower repo and Docs repo. Most of my background is in DevOps build engineering so this was something that I knew I could fix. I moved the project from the old JSX Transformer tools and Browserify to Babel and Webpack. This made the Bower release and Docs site easier to build and develop against. Then I automated the push to those separate repos on GitHub. Common tools for this with Grunt and Gulp just weren&amp;#39;t fast enough for me, so I rolled our own tailored experience.&lt;/p&gt;
&lt;p&gt;During this time I was also working to triage issues and review/accept pull requests from the community. On most issues I was quick to say that I&amp;#39;d accept a pull request, which many people did do. This presented the next biggest problem, which was around the Firehose of issues and pull requests that just kept coming in.&lt;/p&gt;
&lt;p&gt;It was at this time that me employer sent me to the &lt;a href=&quot;http://dotnetfringe.org/&quot;&gt;.Net Fringe&lt;/a&gt;
conference. At my dev shop we have been active contributors to OSS in the .Net ecosystem for years, and this was a conference devoted to that community. While at that conference a large number of the sessions were mainly focused on breaking down the barriers that folks encounter when contributing to OSS projects. The basic undertone I walked away from that was that we as an open source community need to reach out to those that are testing out the OSS waters and welcome, no pull, them in with a warm embrace.&lt;/p&gt;
&lt;p&gt;I was already feeling overwhelmed with the number of issues and pull requests that were coming in on React-Bootstrap and my colleagues in the office didn&amp;#39;t have the bandwidth to really help. Some of them have tried, but viewed it as a second class citizen to our development efforts. I can&amp;#39;t entirely blame them for this since most of our code was still in Angular. So there was a huge cost benefit deficit competing for attention with the newer features we were getting asked to produce by the business.&lt;/p&gt;
&lt;p&gt;It was at this time that I reached out to the more frequent pull request authors that showed attention to testing and documentation with an invite to join the organization. I worked on improving the Contributing Guide and Maintaining Guide to stand as a governance for this growing team. In a sense I didn&amp;#39;t want to see the project cease progression again because of my own inabilities to keep up. I also knew that I would be moving off our front-end sites in the coming months to head up a DevOps team.&lt;/p&gt;
&lt;p&gt;Many folks did accept the invite to join the organization and we haven&amp;#39;t really heard much from them since. Though there were others that did accept the invite and are now thriving contributors. In fact I&amp;#39;d say that &lt;a href=&quot;https://github.com/taion&quot;&gt;Jimmy Jia (taion)&lt;/a&gt; and &lt;a href=&quot;https://github.com/jquense&quot;&gt;Jason Quense (jquense)&lt;/a&gt; now stand as the current technical leads with &lt;a href=&quot;https://github.com/AlexKVal&quot;&gt;Alexander Shemetovsky (AlexKVal)&lt;/a&gt; as the bulldog that just keeps fixing everything he can as fast as he can.&lt;/p&gt;
&lt;p&gt;I can say that my goal to build a community that worked together to continue building the project was a success that continues to refine the project.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;React-Bootstrap still has some work to achieve Section 508 and WCAG 2.0 AA compliance, at which point we&amp;#39;ll declare a 1.0 release. We&amp;#39;ll need to keep up with React and Bootstrap to keep the project up to date with the latest features of both projects.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React and front-end in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The future of React is undeniably very bright. I have full confidence in the core community involved in defining the best practices for building these front-end frameworks and tools.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Jimmy and Jason would have more current insight to the affairs of React-Bootstrap.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks a lot for the interview Matt! I hope React-Bootstrap will have a bright future and more people will find the project. There&amp;#39;s a &lt;a href=&quot;https://react-bootstrap.github.io/getting-started.html&quot;&gt;getting started guide&lt;/a&gt; for those interested. Also check out &lt;a href=&quot;https://react-bootstrap.github.io/components.html&quot;&gt;the component listing&lt;/a&gt; to get a better idea of the capabilities of the library.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v1.9.0</title><id >asurvivejswebpackandreactv1902015-10-07t00:00:00+03:00</id><link href="http://survivejs.com/blog/survivejs-19"></link><updated >2015-10-07T00:00:00+03:00</updated><content type="html">&lt;p&gt;Compared to &lt;a href=&quot;../survivejs-18&quot;&gt;1.8.0&lt;/a&gt;, &lt;code&gt;1.9.0&lt;/code&gt; can be seen as a more conservative release. There are plenty of smaller fixes and even some new content too. I decided to fix the chapter structure to the current. I rather provide less but better content. This also helps to keep the cost of a paper version down.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#towards-2-0-0-&quot; id=&quot;towards-2-0-0-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Towards &lt;code&gt;2.0.0&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#towards-2-0-0-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Besides integrating changes (thanks Steve!) and ideas, I gave &lt;code&gt;2.0.0&lt;/code&gt; some proper thought. With &lt;code&gt;2.0.0&lt;/code&gt; I will finally try to get the book to Amazon while getting it printed through them. This means I&amp;#39;ll need to get a proper ISBN for the book. Only smaller tweaks, such as grammar fixes, are allowed after this. That&amp;#39;s a little problematic.&lt;/p&gt;
&lt;p&gt;The way I see it, the smartest move would be to treat &lt;code&gt;2.0.0&lt;/code&gt; as an Amazon snapshot while developing the book further at Leanpub (&lt;code&gt;2.1.0&lt;/code&gt; and so on). Once &lt;code&gt;3.0.0&lt;/code&gt; is reached, Amazon would get a new snapshot. I don&amp;#39;t expect &lt;code&gt;3.0.0&lt;/code&gt; to happen anytime soon, though, as that wouldn&amp;#39;t be fair to the Amazon customers that bought &lt;code&gt;2.0.0&lt;/code&gt;. Perhaps a yearly cycle would work. That would mean a minor release per month.&lt;/p&gt;
&lt;p&gt;In order to keep it fair to potential Amazon clients, I&amp;#39;m willing to provide the Leanpub version for them using a heavily discounted upgrade cost. I&amp;#39;m a still fuzzy on the exact details but there has to be a neat transition path in place.&lt;/p&gt;
&lt;p&gt;Getting the book printed is a huge step for me personally. It&amp;#39;s great unknown but you don&amp;#39;t get ahead unless you put in the effort. At the very least I will get something for my bookshelf if nothing else. The printing costs seem adequate given the current scope of the book. The print version will likely have to be black and white to keep the cost bearable but apart from that we should be good.&lt;/p&gt;
&lt;p&gt;Ideally the book will continue to provide some level of income as that enables me to keep developing the content and technology around it.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-1-9-0-&quot; id=&quot;book-improvements-1-9-0-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;1.9.0&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-1-9-0-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 134 commits went to &lt;code&gt;1.9.0&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.8.0...v1.9.0&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#general-fixes&quot; id=&quot;general-fixes&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;General Fixes&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#general-fixes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Grammar was improved overall. Big thanks again Steve!&lt;/li&gt;
&lt;li&gt;Move from &lt;code&gt;&amp;lt;ul className=&amp;#39;names&amp;#39;&amp;gt;&lt;/code&gt; format to &lt;code&gt;&amp;lt;ul className=&amp;quot;names&amp;quot;&amp;gt;&lt;/code&gt;. This is the format that official React documentation uses so it&amp;#39;s better to use the same here as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Linked to alternative implementations of Kanban. See &lt;a href=&quot;https://github.com/survivejs/mobservable-demo&quot;&gt;mobservable&lt;/a&gt;, &lt;a href=&quot;https://github.com/survivejs/redux-demo&quot;&gt;Redux&lt;/a&gt;, and &lt;a href=&quot;https://github.com/survivejs/cerebral-demo&quot;&gt;Cerebral/Baobab&lt;/a&gt; demos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-compared&quot; id=&quot;webpack-compared&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack Compared&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-compared&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained in more detail what Webpack actually does.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Noted that &lt;em&gt;css-loader&lt;/em&gt; requires some tweaking when using Node 0.10. See &lt;a href=&quot;https://github.com/webpack/css-loader/issues/144&quot;&gt;the issue&lt;/a&gt; for details.&lt;/li&gt;
&lt;li&gt;Dropped &lt;em&gt;node-libs-browser&lt;/em&gt; from project dependencies. Webpack depends on it directly now.&lt;/li&gt;
&lt;li&gt;Explained why &lt;em&gt;html-webpack-plugin&lt;/em&gt; is used.&lt;/li&gt;
&lt;li&gt;Pushed configuration paths to higher level. This way it&amp;#39;s easier to tweak them to fit your personal projects.&lt;/li&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://www.npmjs.com/package/open-browser-webpack-plugin&quot;&gt;open-browser-webpack-plugin&lt;/a&gt;. There are small plugins like this that save time once you have set them up.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped &lt;em&gt;babel-core&lt;/em&gt; as &lt;em&gt;babel-loader&lt;/em&gt; depends on that directly.&lt;/li&gt;
&lt;li&gt;Replaced deprecated &lt;em&gt;react-hot-loader&lt;/em&gt; with a &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot;&gt;babel-plugin-react-transform&lt;/a&gt; based solution. Even though it takes more configuration, it&amp;#39;s more powerful. I recommend moving your projects to it if you are using &lt;em&gt;react-hot-loader&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;code&gt;debugger;&lt;/code&gt; statement. I realized this is a feature not many people are aware of. It&amp;#39;s good to have it mentioned as a tip.&lt;/li&gt;
&lt;li&gt;Mentioned that spread operator can be used to replace &lt;code&gt;concat&lt;/code&gt;. I.e., instead of &lt;code&gt;this.state.notes.concat({id: uuid.v4(), task: &amp;#39;New task&amp;#39;})&lt;/code&gt; you could do &lt;code&gt;[...this.state.notes, [{id: uuid.v4(), task: &amp;#39;New task&amp;#39;}]]&lt;/code&gt;. You see this particularly in Redux examples so it&amp;#39;s good to know.&lt;/li&gt;
&lt;li&gt;Explained why we have to retain the state at &lt;code&gt;App&lt;/code&gt; level. We&amp;#39;ll push that to a nicer place in the following chapter of course.&lt;/li&gt;
&lt;li&gt;Link to &lt;a href=&quot;https://github.com/casesandberg/react-context/&quot;&gt;feature detection&lt;/a&gt; example as that showcases well when to use a context.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Expanded on Flux explanation. Now we start from a unidirectional flow and show how that becomes a cycle in the architecture.&lt;/li&gt;
&lt;li&gt;Noted that &lt;code&gt;{notes}&lt;/code&gt; is analogous to &lt;code&gt;{notes: notes}&lt;/code&gt; and linked to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer&quot;&gt;property shorthand&lt;/a&gt; documentation. We are using this shorthand a lot so it&amp;#39;s worth discussing it.&lt;/li&gt;
&lt;li&gt;Explained by I don&amp;#39;t use &lt;code&gt;splice&lt;/code&gt; although it would work here.&lt;/li&gt;
&lt;li&gt;Dropped matryoshka image. That was a poor analogy. Better to save the space for something else.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Passed Lane data through &lt;code&gt;lane&lt;/code&gt; prop instead of object spreading. It is easier to understand what&amp;#39;s going on in this solution.&lt;/li&gt;
&lt;li&gt;Explained why Object rest spread syntax is used when it&amp;#39;s used.&lt;/li&gt;
&lt;li&gt;Explained why &lt;code&gt;waitFor&lt;/code&gt; is used in a clearer manner.&lt;/li&gt;
&lt;li&gt;Fixed the ordering between &lt;code&gt;LaneActions.detachFromLane&lt;/code&gt; and &lt;code&gt;NoteActions.delete&lt;/code&gt;. It is a very good idea to detach a note from a lane before actually removing it from the system. Else you might end up trying to render notes that don&amp;#39;t exist.&lt;/li&gt;
&lt;li&gt;Noted that it would be a very good idea to get rid of notes associated to a lane when a lane is removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Showed how to indicate where to move a note while you are moving. This improves user experience somewhat.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simplified JSX related Webpack configuration. This was possible because &lt;em&gt;react-hot-loader&lt;/em&gt; was dropped.&lt;/li&gt;
&lt;li&gt;Moved cache invalidation hashes back to filenames. I&amp;#39;m going to take &lt;a href=&quot;http://www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/&quot;&gt;Steve Souders&lt;/a&gt;&amp;#39; word on it.&lt;/li&gt;
&lt;li&gt;Dropped the section about isomorphic rendering. That felt like a kludge and you would never do it like this in a real world configuration. As a result I removed it from the book. It is a far better idea for me to discuss the topic in a blog post of its own later on.&lt;/li&gt;
&lt;li&gt;Explained how to analyze your Webpack build statistics using &lt;a href=&quot;http://webpack.github.io/analyse/&quot;&gt;the online tool&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react-&quot; id=&quot;testing-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Rewrote the introduction and added testing pyramid to get better into the topic.&lt;/li&gt;
&lt;li&gt;Updated configuration to work with the adjusted setup (no &lt;em&gt;react-hot-loader&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Linked to more associated tooling.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#typing-with-react-&quot; id=&quot;typing-with-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Typing with React*&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#typing-with-react-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixed &lt;code&gt;Lane&lt;/code&gt; related &lt;code&gt;propTypes&lt;/code&gt;. There were a couple of glitches to fix.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#linting-in-webpack&quot; id=&quot;linting-in-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Linting in Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#linting-in-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained why &lt;code&gt;preLoaders&lt;/code&gt; is used for linting. These get executed first. If a linter fails, you&amp;#39;ll want to know about it before doing anything else.&lt;/li&gt;
&lt;li&gt;Explained how to enable specific ES6 features with ESLint. Of course as we go through &lt;em&gt;babel-eslint&lt;/em&gt;, we can skip that but it&amp;#39;s good to know.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#styling-react&quot; id=&quot;styling-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Styling React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#styling-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Explained how &lt;code&gt;style-loader&lt;/code&gt; and &lt;code&gt;css-loader&lt;/code&gt; work in tandem.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I originally intended to have this release to include React 0.14 related fixes. Rather than to keep you waiting, I decided to push those to &lt;code&gt;2.0.0&lt;/code&gt;. An intermediate &lt;code&gt;1.9.5&lt;/code&gt; might be possible but we&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;The book content is fixed and I&amp;#39;ll perform tweaks only to the current content. I&amp;#39;m most interested in expanding the sections about Flow and TypeScript. Even though Flow has been developing fast, there are still some issues I have to wrestle with.&lt;/p&gt;
&lt;p&gt;I also have to look into integrating &lt;a href=&quot;https://github.com/yahoo/react-dnd-touch-backend&quot;&gt;react-dnd-touch-backend&lt;/a&gt;. I&amp;#39;ve done some preliminary work on that and hope to get included it in &lt;code&gt;2.0.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I have a variety of blog content coming up. It&amp;#39;s the perfect place for me to play with ideas in a more freeform manner. As I stated earlier, getting that Amazon release done is the biggest hurdle for me.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope you enjoy this release. As usual &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;feedback&lt;/a&gt; and pull requests are welcome.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >Cerebral - Expressing Application Flow with Signals - Interview with Christian Alfoni</title><id >acerebralexpressingapplicationflowwithsignalsinterviewwithchristianalfoni2015-10-05t00:00:00+03:00</id><link href="http://survivejs.com/blog/cerebral-interview"></link><updated >2015-10-05T00:00:00+03:00</updated><content type="html">&lt;p&gt;I ran into &lt;a href=&quot;http://www.christianalfoni.com/&quot;&gt;Christian Alfoni&lt;/a&gt; through his original blog early this year (2015). He had written a nice post about Webpack. That led me to provide a several suggestions and I realized we might want to combine some of our knowledge in the form of a &lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot;&gt;React/Webpack cookbook&lt;/a&gt;. Eventually the development led to this book so I suppose you can blame Christian for that.&lt;/p&gt;
&lt;p&gt;While I&amp;#39;ve been plugging away with the book, Christian has been busy developing cool technology. This includes &lt;a href=&quot;https://github.com/christianalfoni/EmptyBox&quot;&gt;EmptyBox&lt;/a&gt;, a static site generator, &lt;a href=&quot;https://github.com/christianalfoni/formsy-react&quot;&gt;formsy-react&lt;/a&gt;, a form input builder and validator for React, and of course &lt;a href=&quot;http://christianalfoni.com/cerebral/&quot;&gt;Cerebral&lt;/a&gt;, the primary topic of our interview. You could say it puts some brains to React and Angular development. We&amp;#39;ll also discuss &lt;a href=&quot;https://github.com/christianalfoni/addressbar&quot;&gt;addressbar&lt;/a&gt;, a routing solution with a twist.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-did-you-discover-webpack-and-react-can-you-provide-a-bit-of-background-&quot; id=&quot;how-did-you-discover-webpack-and-react-can-you-provide-a-bit-of-background-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How did you discover Webpack and React? Can you provide a bit of background?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-did-you-discover-webpack-and-react-can-you-provide-a-bit-of-background-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;/assets/img/christian.jpg&quot; alt=&quot;Christian Alfoni&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;
I had saved up some money and chose to quit my job the summer of last year (2014). I wanted to spend 6 months on my own researching web technologies and play around with projects. I feel kinda lucky that way, as obsessed I am with JavaScript and building things I now got the chance to level up. At my previous employer I left a Backbone app with a Grunt workflow. Before that it was all vanilla JavaScript… crazy, but learned a lot!
&lt;/p&gt;

&lt;p&gt;So I suppose my timing was good. I started my expedition by diving into Angular, but now both React and Flux started to get some solid ground. Not being too opinionated by Angular I instantly saw the benefits of the “one way flow” of Flux. Now I had a strong concept of storing any kind of state, it being from the server or produced on the client. This was a huge issue at my previous employer, sharing client side state between views and keeping it in sync.&lt;/p&gt;
&lt;p&gt;At the same time, I was exploring Gulp and saw this video where Pete Hunt introduced Webpack. As I had time on my hands, I decided to make an overview of different build tools and write an article on it. It got some attention and the feedback gave me the confidence to share more knowledge. Other developers were actually interested in what I had to say. It was a big eye opener!&lt;/p&gt;
&lt;p&gt;When comparing the build tools I realized that Webpack was awesome, but had one big issue. It was hard to understand and configure. With my new earned confidence in sharing knowledge I wrote a new article. This one got even more attention, also by you Juho. It is amazing to see all the work you have done after that little comment. You have done fantastic work!&lt;/p&gt;
&lt;p&gt;Anyways, around this time I got a job offer and since I soon needed income I grabbed the opportunity. My employer wanted to build a React framework for their huge application portfolio. I suggested we use Webpack to handle all the packaging, use ES6 etc. It has been a great success and that led to the last article on &lt;a href=&quot;http://www.christianalfoni.com/articles/2015_04_19_The-ultimate-webpack-setup&quot;&gt;The ultimate Webpack setup&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I often get questions about combining Webpack with other build tools like Grunt or Gulp. I have never been in a situation where that is necessary. Webpack is just a brilliant piece of engineering and it makes my day so much easier. Other projects like &lt;a href=&quot;http://jspm.io/&quot;&gt;JSPM&lt;/a&gt; are interesting though. We are moving towards HTTP2 and bundling files does not fit in with that technology. It will be interesting to see how this pans out! &lt;a href=&quot;https://mattwilcox.net/web-development/http2-for-front-end-web-developers&quot;&gt;More info&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-cerebral-how-would-you-describe-it-to-someone-who-has-never-heard-of-it-what-next-&quot; id=&quot;why-did-you-develop-cerebral-how-would-you-describe-it-to-someone-who-has-never-heard-of-it-what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop Cerebral? How would you describe it to someone who has never heard of it? What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-cerebral-how-would-you-describe-it-to-someone-who-has-never-heard-of-it-what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even though Flux made a lot of sense to me as a concept, the implementation details did not. In my opinion it is a bit verbose and many stores gave me the same problems that Flux fixed in my view layer. Like circular dependencies and just understanding the flow of state changes.&lt;/p&gt;
&lt;p&gt;Then I found &lt;a href=&quot;https://github.com/Yomguithereal/baobab&quot;&gt;Baobab&lt;/a&gt;, a single state tree. It fixed all the issues I had with the initial Flux implementation and kept the concept of “one way flow”. All my state was now in one place. No dispatcher and no splitting state into different “containers”. I wrote &lt;a href=&quot;http://www.christianalfoni.com/articles/2015_02_06_Plant-a-Baobab-tree-in-your-flux-application&quot;&gt;an article on this too&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now I was actually pretty happy about developing applications. With React I got a great concept for composing my view layer. With Baobab I got a great concept for storing all my state in a single entity. But there was still a problem… the stuff that happens &amp;quot;in between&amp;quot;. The layer that actually produces the state.&lt;/p&gt;
&lt;p&gt;As this was bugging me I got some “a-ha” moments. One &amp;quot;a-ha&amp;quot; was a video on “turning the database inside out” and talking to a backend colleague about it. I also got an &amp;quot;a-ha&amp;quot; watching a clip on &lt;a href=&quot;http://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; with its time travel debugging. Most importantly though, I got my head around why immutability is so great. One day everything kinda merged into one big “A-HA” moment.&lt;/p&gt;
&lt;p&gt;No matter what you call your architecture it has three main layers. A layer to produce UI and get user input, a layer to handle this input and produce state and a layer to store the state. I wanted to make these three layers as clear and simple as possible. So I thought a lot about what this state changing layer looks like today. How do we actually express handling these inputs from the view layer and update our state?&lt;/p&gt;
&lt;p&gt;What I realized is that we often do this with a single function. We get some user input and call a function that does one or more state updates. This is fine if you just want to increase/decrease a counter. It is not so nice if you want to handle more than one HTTP response and do other conditionals.&lt;/p&gt;
&lt;p&gt;It is difficult to understand the flow of an application reading implementation details. So I wanted to express the state changes of my app without having to dive into implementation details. I also wanted to be able to analyze this flow to create developer tools. Reading your &lt;a href=&quot;../redux-interview&quot;&gt;interview with Dan Abramov&lt;/a&gt; I can totally relate to how Redux got started. With Cerebral it is the signals the makes this possible.&lt;/p&gt;
&lt;p&gt;Signals is a way to express state changes in your application using pure functions. These pure functions, called actions, are composed into a signal. This makes a signal declarative. It is almost like reading a sentence and it can be complex without being hard to read and reason about. But it is also functional as these actions are just functions. So for example factories is an important part of expressing your state flow.&lt;/p&gt;
&lt;p&gt;As signals are arrays of actions you can also use the new spread operator. This allows you to compose action chains together with ease. So a signal never calls or depends on other signals, you just reuse actions. “Composition over inheritance”.&lt;/p&gt;
&lt;p&gt;So Cerebral is this layer between your state storing and UI. It handles the complex part of your application, state changing flow. It is a single powerful entity representing the layer between state and ui, as displayed here:&lt;/p&gt;
&lt;p&gt;&lt;img src=&apos;/assets/img/cerebral_state_ui.png&apos; class=&apos;center-image&apos; width=&apos;425&apos; height=&apos;510&apos; alt=&apos;Cerebral is between the state and the UI&apos;&gt;&lt;/p&gt;
&lt;p&gt;Running the debugger next to the UI gives you insight into all these three layers. The UI, the state changing flow and the current state of the application. It is pretty cool!
About the future of Cerebral. I have been working on a project for a year now.&lt;/p&gt;
&lt;p&gt;When the Cerebral idea came up, I got a breakthrough. I decided to apply for some funding and what do you know, I got it! From October 1st I will spend most of my time on this project and Cerebral. For Cerebral this means cleaning up any bugs/API and make it production ready.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-describe-what-addressbar-https-github-com-christianalfoni-addressbar-is-about-given-there-are-so-many-routers-already-why-to-develop-yet-another-one-&quot; id=&quot;can-you-describe-what-addressbar-https-github-com-christianalfoni-addressbar-is-about-given-there-are-so-many-routers-already-why-to-develop-yet-another-one-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you describe what &lt;a href=&quot;https://github.com/christianalfoni/addressbar&quot;&gt;addressbar&lt;/a&gt; is about? Given there are so many routers already, why to develop yet another one?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-describe-what-addressbar-https-github-com-christianalfoni-addressbar-is-about-given-there-are-so-many-routers-already-why-to-develop-yet-another-one-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So routers have two main concepts. Listen to url changes and act upon url changes. Different routers has their own implementation of how they listen to url changes. They also have different and opinionated ways of acting upon those changes. Some routers just triggers a function related to a url change, like &lt;a href=&quot;https://visionmedia.github.io/page.js/&quot;&gt;Page JS&lt;/a&gt;. Most of them goes way beyond this though. Often routers dive into the view layer of your application and decides what views to display.&lt;/p&gt;
&lt;p&gt;As applications are complex you often want to load some data before doing the actual change in the view. Your router now fetches data for you to achieve this. But this data is something you want to store so now your router also needs a relationship with your state store. Some of them also do transitions in the UI. In my opinion this increases complexity as you already have concepts for this. View updates, ajax requests, transitions etc. are things you already do in the general state changing flow of your app.&lt;/p&gt;
&lt;p&gt;Inspired by React I got this idea about the addressbar not being this magical URL thing. Just a plain input you could listen to and change the value of. If that was the case I think a lot of developers would have a much lower threshold to experiment with urls. Create their own custom routing logic. Something that makes sense for the specific application.&lt;/p&gt;
&lt;p&gt;As a result I built a project called &lt;a href=&quot;https://github.com/christianalfoni/addressbar&quot;&gt;addressbar&lt;/a&gt;. It just exposes the addressbar as an input you can listen to. You can also prevent default behaviour on it and change the value of it. Now you can focus on the important part, creating the routing logic.&lt;/p&gt;
&lt;p&gt;So one way of doing routing is to map the url to a url definition which in turn triggers a function. With help from a couple of guys on the Cerebral gitter channel we created the project &lt;a href=&quot;https://github.com/christianalfoni/url-mapper&quot;&gt;url-mapper&lt;/a&gt;. Combine “addressbar” with “url-mapper” and you have yourself a typical router. Much like the Page JS approach. But I think there are many other approaches to handling URL changes.&lt;/p&gt;
&lt;p&gt;An example of this is the Cerebral Router. It uses both “addressbar” and “url-mapper” to bind URLs to signals. This means that you can trigger signals in your app and the bound url will update in the addressbar. If you trigger the url from a hyperlink or in the addressbar that will result in the same behaviour. So it works both ways.&lt;/p&gt;
&lt;p&gt;You do not have to do a typical route change to update the url, it is just a side-effect of running a signal. This gives you great freedom in developing your application. You just think about these signals that defines the state changing flow of your app. You can actually bring in URLs into your app later if you wanted to. This might not make complete sense just reading about it, but I have a &lt;a href=&quot;https://www.youtube.com/watch?v=PZjXPziD9Cw&quot;&gt;video&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So to summarize. I think it would benefit us to think about routing differently. When I read discussions on routing they often tend to be “How can we make the router change the views in the app?”. I might be a bit controversial, but I think that is the wrong approach.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s say you have an “isLoading” state.  You use that state in your views to toggle a “loading-indication”. Why can not the url “/messages” set a state called “currentPage=’messages’”? You would then use the exact same approach to render the correct page. It is just less complex in my opinion because now a url change is a state change like any other. No special logic and you can go about it however you want.&lt;/p&gt;
&lt;p&gt;I am going a bit off trail here! What I want to emphasize here is that addressbar lowers the threshold for developers. The threshold to explore urls in new ways. Creating new experiences and evolve urls to mean something more. Not just “what view to display”, but for example “what signal to trigger” like the Cerebral-Router.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#at-the-moment-a-lot-of-architecture-related-innovation-seems-to-happen-what-do-you-think-of-alternative-approaches-such-as-mobservable-https-mweststrate-github-io-mobservable-or-redux-http-redux-js-org-&quot; id=&quot;at-the-moment-a-lot-of-architecture-related-innovation-seems-to-happen-what-do-you-think-of-alternative-approaches-such-as-mobservable-https-mweststrate-github-io-mobservable-or-redux-http-redux-js-org-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;At the moment a lot of architecture related innovation seems to happen. What do you think of alternative approaches such as &lt;a href=&quot;https://mweststrate.github.io/mobservable/&quot;&gt;mobservable&lt;/a&gt; or &lt;a href=&quot;http://redux.js.org/&quot;&gt;redux&lt;/a&gt;?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#at-the-moment-a-lot-of-architecture-related-innovation-seems-to-happen-what-do-you-think-of-alternative-approaches-such-as-mobservable-https-mweststrate-github-io-mobservable-or-redux-http-redux-js-org-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So I think a lot of innovation lately has been improving stores in Flux. It can be a bit difficult to reason about them. Projects like Mobservable and Redux do exactly this. They make it easier to reason about how to store state. It is amazing to see how much attention Redux has gotten. The community is enthusiastic and contributes a lot with their own ideas. Kudos to Dan for inspiring so many developers and handling it so well!&lt;/p&gt;
&lt;p&gt;Personally I have not dived into Mobservable and Redux. For me it was Baobab that made the difference, which had an earlier release. It is a single immutable state tree storing all the state of your application.&lt;/p&gt;
&lt;p&gt;So both Redux and Mobservable make Flux simpler. That said, I think there are still challenges to tackle. I am going to compare these two projects to Cerebral, but only to highlight what Cerebral does. I am not saying that any of them are bad.&lt;/p&gt;
&lt;p&gt;Both the solutions mentioned here hides state from the other state entities. It being reducers or stores. Take note that Redux does indeed produce a single state tree by combining its reducers. But inside a reducer, you do not have access to the whole tree as far as I know.&lt;/p&gt;
&lt;p&gt;So many entities to store state is in my experience a challenge. Large applications often need to know about state in other stores/reducers when producing new state. This is often related to relational data, like looking up state by id. I do not think an approach where you isolate different parts of your state is the way to go.&lt;/p&gt;
&lt;p&gt;You risk creating relationships which can be hard to reason about and even create. If you just have one entity, there is no relationship, which makes it easier to reason about and scale your app. This is what I like about &lt;a href=&quot;https://github.com/Yomguithereal/baobab&quot;&gt;Baobab&lt;/a&gt;. It is impossible to go wrong in how you structure your state.&lt;/p&gt;
&lt;p&gt;But Baobab does not have any concepts for producing state. In Redux you produce state in the reducer itself or in combination with an async action creator. Mobservable does this inside the stores. What these two have in common, like many others, is that producing a state change is expressed with a single function. You have to read the implementation details of this function to understand it. This is easy when you want to add a todo or change a counter, but our applications are more complex than that.&lt;/p&gt;
&lt;p&gt;I think the concept of expressing a “state changing flow” is where we have to go next. Cerebral is a contribution to this. Libraries like &lt;a href=&quot;http://cycle.js.org/&quot;&gt;Cycle.js&lt;/a&gt; uses FRP concepts to express this flow. I thought about this for Cerebral, but to me it is hard to reason about complex flows using FRP.&lt;/p&gt;
&lt;p&gt;RxJS has so many methods and most examples converts input to a single state change. App flows are a lot more complex than that. HTTP responses, conditionals, multiple state changes, relational data, optimistic updates etc. I just really really want it declared as one flow.&lt;/p&gt;
&lt;p&gt;But FRP in JavaScript is still in its early adoption and I am not trying to state FRP as a bad thing at all. I just think its current form is too difficult to use for the common JavaScript developer. André Staltz is doing fantastic work with Cycle.js. Making FRP more developer friendly for application development. Evan Czaplicki, creator of Elm, is also doing a tremendous effort. I think both Dan and André will agree that Evan has been a great inspiration for our contributions.&lt;/p&gt;
&lt;p&gt;I just want to say that I think it is great that everybody is so open to sharing what they build. Also sharing theories on how we can make development more fun than painful. What works and makes sense to people is what inspires the next step of this evolution.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What developers miss out on with React is that it is not related to templating at all. React is not a templating engine, it is a rendering engine. It has a lot more in common with game rendering engines than Handlebars etc. This makes React able to render to different targets in lightning speed. In the browser that would be the DOM, but it can render to whatever. So getting projects like React Native is great!&lt;/p&gt;
&lt;p&gt;What I also think trips developers up is that components in React are not views. They are closer to defining a single HTML tag than defining a complete view in your application. This unlike templates. I can see how scary a component would be if you copied an Angular template into it… the thing is, you would never do that.&lt;/p&gt;
&lt;p&gt;Also JSX is controversial and is partly guilty in tripping developers up on what React is. I have been using it from the start and love it. I understand why developers used to working with HTML templates does not embrace it though. Often overlooking what React is all about. It is just sad and I think this will continue to be an unfair challenge for Reacts adoption.&lt;/p&gt;
&lt;p&gt;It is also a matter of Web Components. React JS, as I understand it, does not support Web Components. Now, I do not think Web Components will be app specific building blocks at all. I think they will be &lt;code&gt;&amp;lt;GoogleMap/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;GoogleDocs/&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Youtube/&amp;gt;&lt;/code&gt; types of tags. Web Components will just become new superpowered HTML tags that we can use globally in our apps, like the existing tags.&lt;/p&gt;
&lt;p&gt;So why do I say that? The problem with Web Components, as far as I know, is that they are loaded globally. You do not have a good way to wrap these components into modules. But maybe I am just not getting it! Anyways, React will have a missing feature if it is unable to render these new HTML tags. I think we will import a lot of them in the future.&lt;/p&gt;
&lt;p&gt;So to summarize I think React is here to stay for a long time. It will be exciting to see how Ember and Angular catches up with their new rendering solutions too. As I understand they will also support native development and web components.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It would be interesting to talk to someone invested in FRP.  Who uses it for something more than counters and lists. Since you already interviewed André, it would be great to get Evan in here too. And if you do, tell him thanks for all his great work :-)&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for the interview Christian! I hope the best of luck with your projects. It is always inspiring to see alternative solutions like these to pop up. If you became interested in Cerebral, consider checking out &lt;a href=&quot;https://gitter.im/christianalfoni/cerebral&quot;&gt;gitter&lt;/a&gt; or &lt;a href=&quot;https://github.com/survivejs/cerebral-demo&quot;&gt;Cerebral port of Kanban&lt;/a&gt;. You can also try running &lt;a href=&quot;https://chrome.google.com/webstore/detail/cerebral-debugger/ddefoknoniaeoikpgneklcbjlipfedbb&quot;&gt;Cerebral Chrome debugger plugin&lt;/a&gt; against &lt;a href=&quot;http://www.christianalfoni.com/todomvc/&quot;&gt;TodoMVC demo&lt;/a&gt;.&lt;/p&gt;
</content></entry><entry ><title >ShaderFrog - Building a WebGL Shader Editor and Composer - Interview with Andrew Ray</title><id >ashaderfrogbuildingawebglshadereditorandcomposerinterviewwithandrewray2015-09-28t00:00:00+03:00</id><link href="http://survivejs.com/blog/shaderfrog-interview"></link><updated >2015-09-28T00:00:00+03:00</updated><content type="html">&lt;p&gt;It&amp;#39;s always impressive when people take an idea and turn it into a concrete service. &lt;a href=&quot;http://andrewray.me/&quot;&gt;Andrew Ray&lt;/a&gt; did this with his &lt;a href=&quot;http://shaderfrog.com/&quot;&gt;ShaderFrog&lt;/a&gt;. It&amp;#39;s a portal where you can design 3D shaders using WebGL. Most interestingly, it has been developed using React.&lt;/p&gt;
&lt;p&gt;As building tools such as this isn&amp;#39;t easy, I&amp;#39;m primarily curious to know why Ray picked React and what sort of challenges he faced during the development of his service.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-did-you-discover-webpack-and-react-can-you-provide-a-bit-of-background-&quot; id=&quot;how-did-you-discover-webpack-and-react-can-you-provide-a-bit-of-background-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How did you discover Webpack and React? Can you provide a bit of background?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-did-you-discover-webpack-and-react-can-you-provide-a-bit-of-background-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;https://www.gravatar.com/avatar/b3a21f6147bcc6bd9d997d5cc5b5f87c?size=200&quot; alt=&quot;Andrew Ray&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;

The front-end ecosystem is constantly morphing, so we have to stay on top of front-end news. That&amp;#39;s how I heard about React, most likely from Hacker News. The path to Webpack was natural from there. Many example projects use Webpack and there&amp;#39;s a lot of Webpack and React development overlap in the community.
&lt;/p&gt;

&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-shaderfrog-how-would-you-describe-it-to-someone-who-has-never-heard-of-it-what-next-&quot; id=&quot;why-did-you-develop-shaderfrog-how-would-you-describe-it-to-someone-who-has-never-heard-of-it-what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop ShaderFrog? How would you describe it to someone who has never heard of it? What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-shaderfrog-how-would-you-describe-it-to-someone-who-has-never-heard-of-it-what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I built ShaderFrog to solve a problem that no one was aware existed. I was making a WebGL 3d browser game, where your character is a bubble in an underwater environment. To make a &lt;a href=&quot;http://shaderfrog.com/app/view/147&quot;&gt;bubble look convincing visually&lt;/a&gt; you have to have a few effects, such as reflection and refraction. The program that draws these effects is called a &amp;quot;shader.&amp;quot;&lt;/p&gt;
&lt;p&gt;It tells the computer how to &amp;quot;shade&amp;quot; a 3d object. I also had a &lt;a href=&quot;http://shaderfrog.com/app/view/30&quot;&gt;fireball powerup&lt;/a&gt;, and I wanted to show the player getting the powerup by combining the fire effect (a shader) and the bubble effect (another shader).&lt;/p&gt;
&lt;p&gt;That meant I had to take these two programs and combine them together by hand, and essentially add their output color together. It was quite tedious, and I thought I could build a tool to automate the process. That&amp;#39;s how ShaderFrog was born.&lt;/p&gt;
&lt;p&gt;ShaderFrog is a tool to design effects called shaders for 3d games and applications in a visual environment without writing code. There are still plenty of features to add, and it&amp;#39;s still finding its place in the world. Right now I&amp;#39;m continuing to build out more features and doing some marketing.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-choose-to-use-react-for-the-project-which-alternatives-did-you-consider-&quot; id=&quot;why-did-you-choose-to-use-react-for-the-project-which-alternatives-did-you-consider-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you choose to use React for the project? Which alternatives did you consider?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-choose-to-use-react-for-the-project-which-alternatives-did-you-consider-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a front-end developer for most of my career, React feels like the first framework that got it &amp;quot;right.&amp;quot; I had previously tried Angular and Backbone, and toyed with Ember, but none of them felt like they actually helped me solve complex UI problems.&lt;/p&gt;
&lt;p&gt;One of React&amp;#39;s biggest benefits is it stays as close to normal Javascript paradigms as possible. You don&amp;#39;t have to understand &lt;code&gt;$scope&lt;/code&gt; or learn a huge API like Backbone. It&amp;#39;s just functions and Javascript classes. Even JSX is just HTML and Javascript.&lt;/p&gt;
&lt;p&gt;Learning Flux was a steep hill for me, but in the end you&amp;#39;re basically writing event listeners and plain Javascript objects. Server side rendering was very important to me too. I honestly feel like without React, I could not have built ShaderFrog.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-sort-of-challenges-did-you-encounter-during-development-what-would-you-do-differently-&quot; id=&quot;what-sort-of-challenges-did-you-encounter-during-development-what-would-you-do-differently-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What sort of challenges did you encounter during development? What would you do differently?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-sort-of-challenges-did-you-encounter-during-development-what-would-you-do-differently-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;React is a newcomer to the field and we&amp;#39;re still figuring out how to do things correctly. CSS is the easiest target. React is teaching me that CSS is a fundamentally flawed concept and that our newest iteration of inline styles, or &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS Modules&lt;/a&gt;, is a welcomed future. There is plenty of legacy CSS in ShaderFrog that I am embarrassed by, but at least I can see the light at the end of the tunnel.&lt;/p&gt;
&lt;p&gt;I faced some challenges specific to making a 3d editor. I need to maintaining 60 frames per second constantly. For example, let&amp;#39;s say I have three lights moving around my scene. Every time their position changes, I have to fire an action through Flux, which triggers many component updates.&lt;/p&gt;
&lt;p&gt;If you do this three times per &lt;code&gt;requestAnimationFrame&lt;/code&gt;, you get two unnecessary virtual DOM comparison checks. The solution to this problem was to &amp;quot;batch&amp;quot; the Flux calls until the last one, so my stores only emit once per loop, removing unnecessary work.&lt;/p&gt;
&lt;p&gt;When I first started work on ShaderFrog, I didn&amp;#39;t fully understand Flux, so I built a few things using event listeners binding to specific data properties. This code is still in my application, and it&amp;#39;s often a source of bugs, and more difficult to reason about than the Flux code. If I could change things I would have stuck more closely to the Flux pattern, because every time I diverge, it causes me problems and increased cognitive load.&lt;/p&gt;
&lt;p&gt;Server side rendering was also a big challenge. React has an unspoken idea that you get server side rendering for free, but this is very far from the truth. For static pages, yes, it&amp;#39;s easy to render some components to an HTML string. For dynamic pages that require data pre-fetching that must be done differently on the client and the server, there are countless edge cases. I hope that in the future, Relay solves many of these problems.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;React has paved a bright future of front-end development, but React probably isn&amp;#39;t the end of the road. A better virtual DOM library may come out. We&amp;#39;ve already seen the evolution of the Flux pattern with Redux, and the evolution of CSS with inline and CSS modules. I would definitely say we&amp;#39;re moving towards more computer science principles boosting the productivity of the front-end.&lt;/p&gt;
&lt;p&gt;We&amp;#39;re moving towards more componentization, less coupling, and more portability. React has shown many front-end developers the true power of an entirely self contained component. I think these principles will continue to drive the productivity and enjoyment of front-end development forward.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have no idea! :)&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for the interview Andrew! I wish you great success with &lt;a href=&quot;http://shaderfrog.com/&quot;&gt;ShaderFrog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I remember writing little shaders of my own in the past. If you&amp;#39;ve ever wondered what to use math for, well, here&amp;#39;s a good application. You can actually put operations, such as &lt;code&gt;mod&lt;/code&gt;, into use here! It&amp;#39;s amazing how little operations can make nice patterns.&lt;/p&gt;
&lt;p&gt;To get started, &lt;a href=&quot;http://shaderfrog.com/app&quot;&gt;pick up a shader&lt;/a&gt; you like and start modifying. If you want to dig into theory, you can&amp;#39;t go wrong with NeHe&amp;#39;s material. They&amp;#39;ve written &lt;a href=&quot;http://nehe.gamedev.net/article/glsl_an_introduction/25007/&quot;&gt;an introduction to GLSL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Feel free to share your shaders at the comments.&lt;/p&gt;
</content></entry><entry ><title >Cycle.js - Reactive Framework for HCI - Interview with André Staltz</title><id >acyclejsreactiveframeworkforhciinterviewwithandrestaltz2015-09-21t00:00:00+03:00</id><link href="http://survivejs.com/blog/cycle-interview"></link><updated >2015-09-21T00:00:00+03:00</updated><content type="html">&lt;p&gt;If there&amp;#39;s one thing that has been bubbling below for a couple of years now, it must be reactive programming. There have been solutions, such as &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS&quot;&gt;RxJS&lt;/a&gt; or &lt;a href=&quot;https://github.com/baconjs/bacon.js&quot;&gt;bacon.js&lt;/a&gt;, but they haven&amp;#39;t quite made it to the mainstream yet. I feel the time for that might be close, though.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cycle.js.org/&quot;&gt;Cycle.js&lt;/a&gt; builds on top of RxJS and characterizes itself as a fully reactive JavaScript framework for Human-Computer Interaction. The question of course is what that means. André Staltz, the author of Cycle.js, is the best person to tell us.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot; id=&quot;can-you-tell-a-bit-about-yourself-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell a bit about yourself?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-a-bit-about-yourself-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;https://www.gravatar.com/avatar/d992db0c8f42fcee52f96dc320f8aa04?s=200&quot; alt=&quot;André Staltz&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;

I am a UI developer at Futurice in Finland, with extensive knowledge in reactive programming. In my daily work I build web apps and Android applications, and on my free time I build open source libraries such as Cycle.js and contribute to ReactiveX.
&lt;/p&gt;

&lt;p&gt;A lot of people have read the &lt;a href=&quot;https://gist.github.com/staltz/868e7e9bc2a7b8c1f754&quot;&gt;Introduction to Reactive Programming you&amp;#39;ve been missing&lt;/a&gt; that I wrote in the summer of 2014, or have seen &lt;a href=&quot;http://RxMarbles.com&quot;&gt;RxMarbles&lt;/a&gt;. That is how most people know me.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-cycle-js-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-cycle-js-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe Cycle.js to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-cycle-js-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Cycle.js is a framework where your app is described as a simple function taking an event stream as input and outputting an event stream. These event streams might sound magical, but they are pretty simple. They are similar to arrays in reality, except they evolve over time instead of being static.&lt;/p&gt;
&lt;p&gt;A simple Cycle.js app might take an array-like sequence of clicks and output an array-like sequence of DOM elements. So essentially coding is just describing how to dynamically transform a stream of user events into a stream of interface elements.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-cycle-js-&quot; id=&quot;why-did-you-develop-cycle-js-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop Cycle.js?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-cycle-js-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I started developing Cycle.js after I took React for a spin and was disappointed with its API. I initially got really excited about the Virtual DOM concept in React, but could not understand why the API is built on OOP classes, state mutation, and imperative event handlers. There is a mismatch between React’s foundational ideas (reactive rendering and UI as pure function of state) and its implementation means (OOP, classes, imperative programming).&lt;/p&gt;
&lt;p&gt;Cycle.js is a React alternative where implementation matches foundational ideas by applying functional and reactive programming to the extreme. The result is a tiny API surface where everything is either a function or an RxJS Observable.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been slowly learning more about hard core functional programming, in other words Haskell. I have also been experimenting with Elm, a more approachable Haskell alternative for the Web.&lt;/p&gt;
&lt;p&gt;I have many plans on what to develop next. My time will probably be mainly focused on improving Cycle.js: making it simpler to use, building integrations with React Native, integrating the upcoming rewritten RxJS by Netflix, etc. But I hope to join efforts with the pure functional programming community, be it &lt;a href=&quot;https://www.haskell.org/&quot;&gt;Haskell&lt;/a&gt;, &lt;a href=&quot;http://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;, or &lt;a href=&quot;http://www.purescript.org/&quot;&gt;PureScript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cycle.js has a lot of functional techniques but JavaScript is not a language that supports functional programming well enough. I miss the types, the immutability, and the clean syntax.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React and front-end in general? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-and-front-end-in-general-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Functional programming is definitely a trend in the front-end community. React is also at the center of this trend. I recall Sebastian Markbåge mentioned multiple times in his interview at React Europe that React is all about functional programming and how to introduce it in a clever way to people unfamiliar with this paradigm.&lt;/p&gt;
&lt;p&gt;It seems there are still a lot of unsolved problems regarding APIs. In modern JavaScript, we use functional and reactive techniques, often mixed with some imperative programming. One on hand, imperative programming is familiar and simple for many of us, but functional and reactive have amazing benefits often hidden behind obscure terminology. Yet these two sides are often incompatible in the same application.&lt;/p&gt;
&lt;p&gt;The community will need to actively experiment with alternatives, and we need to start considering transpiled functional languages (PureScript, Elm) more and more if our techniques are mainly functional anyway. I am not convinced we have stable best practices and good guiding principles in how to architect applications. Cycle.js is just one attempt at finding that guiding principle.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Evan Czaplicki. I was skeptic about Elm before meeting him, but after meeting him in person, I strongly believe his work with Elm is doing a great service to the whole community in bringing functional programming to a level most of us can digest. Evan has vision, is enthusiastic, reads Computer Science papers, and has a ton of great and wild ideas.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks a lot for the interview André! Perhaps a programming model as demonstrated by Cycle.js is the future. It always takes time for the community to warm up to the ideas. Interestingly there&amp;#39;s a proof of concept that implements &lt;a href=&quot;https://github.com/jas-chen/thisless-react&quot;&gt;thisless React&lt;/a&gt;, inspired by Cycle.js of course!&lt;/p&gt;
&lt;p&gt;If this interview made you interested in Cycle.js, consider the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cycle.js.org/getting-started.html&quot;&gt;Getting started guide&lt;/a&gt;. I set up a small &lt;a href=&quot;https://github.com/survivejs/cycle-starter&quot;&gt;boilerplate&lt;/a&gt; to help you get up to speed faster.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cycle.js.org/cycle-time-travel/&quot;&gt;Time traveling with Cycle.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.edanschwartz.com/2015/09/18/dead-simple-rxjs-todo-list/&quot;&gt;A Dead-Simple Todo List with Cycle.js&lt;/a&gt; by Edan Schwartz&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitter.im/cyclejs/cycle-core&quot;&gt;Online support through Gitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vic/awesome-cyclejs&quot;&gt;Awesome Cycle.js&lt;/a&gt; contains a lot more.&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry ><title >Redux - Reinventing Flux - Interview with Dan Abramov</title><id >areduxreinventingfluxinterviewwithdanabramov2015-09-14t00:00:00+03:00</id><link href="http://survivejs.com/blog/redux-interview"></link><updated >2015-09-14T00:00:00+03:00</updated><content type="html">&lt;p&gt;I remember seeing these strange &lt;code&gt;webpack.config.js&lt;/code&gt; files in JavaScript projects for a long time. I didn’t give &lt;a href=&quot;https://webpack.github.io/&quot;&gt;Webpack&lt;/a&gt; a good look until the promise of hot loading with React drew me in. &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;Dan Abramov&lt;/a&gt;’s &lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot;&gt;React Hot Loader&lt;/a&gt; was life changing for me.&lt;/p&gt;
&lt;p&gt;Besides React Hot Loader, Dan is behind well-known projects such as &lt;a href=&quot;https://gaearon.github.io/react-dnd/&quot;&gt;React DnD&lt;/a&gt; and &lt;a href=&quot;http://redux.js.org/&quot;&gt;Redux&lt;/a&gt;. Redux in particular has begun to make waves across the community even though it’s a young project. Compared to earlier &lt;a href=&quot;https://facebook.github.io/flux/docs/overview.html&quot;&gt;Flux&lt;/a&gt; inspired implementations it is particularly small (~2k) yet powerful.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-did-you-discover-react-can-you-provide-a-bit-of-background-&quot; id=&quot;how-did-you-discover-react-can-you-provide-a-bit-of-background-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How did you discover React? Can you provide a bit of background?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-did-you-discover-react-can-you-provide-a-bit-of-background-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;/assets/img/dan.jpg&quot; alt=&quot;Dan Abramov&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;
I think it’s a typical story. In 2014, when I was working at &lt;a href=&quot;http://stampsy.com&quot;&gt;Stampsy&lt;/a&gt;, we needed to pivot from an iPad app to a webapp in a matter of a few months. We only knew Backbone so we went with it, but as the app grew more dynamic and complicated, we knew we couldn’t use it for much longer.
&lt;/p&gt;

&lt;p&gt;However, we also decidedly did not adopt any opinionated data binding library because we wanted to maintain a simple mental model of what’s happening in the app. At some point in time, there was a widget with a dozen of different states that occurred several times on the page, and we knew we &lt;em&gt;had&lt;/em&gt; to throw some data binding library into the mix.&lt;/p&gt;
&lt;p&gt;A coworker of mine suggested React a few month before, but I shrugged at JSX and didn’t investigate. So he suggested it again, and I decided to go for it. The same evening, I got this widget working exactly as I wanted, and I was hooked. Over the course of the next nine months, we gradually rewrote the Backbone app into a React app. Then React Router came along, and we migrated fully. All the while adding new features.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#as-i-ran-to-you-through-react-hot-loader-what-motivated-you-to-develop-the-project-in-the-first-place-&quot; id=&quot;as-i-ran-to-you-through-react-hot-loader-what-motivated-you-to-develop-the-project-in-the-first-place-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;As I ran to you through React Hot Loader what motivated you to develop the project in the first place?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#as-i-ran-to-you-through-react-hot-loader-what-motivated-you-to-develop-the-project-in-the-first-place-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There were a couple of factors.&lt;/p&gt;
&lt;p&gt;Firstly, it was watching our designer &lt;a href=&quot;https://twitter.com/kkga_&quot;&gt;Gadzhi&lt;/a&gt; struggle with tweaking components inside modal windows. (By the way, Gadzhi created &lt;a href=&quot;https://github.com/kkga/spacegray&quot;&gt;Spacegray&lt;/a&gt;, which is still more popular than any of my projects!)&lt;/p&gt;
&lt;p&gt;Every time he’d change some tiny piece of UI, he’d have to refresh, open that modal, find that widget, discover that something is wrong, and change it again, over and over. It was even more painful with widgets like autocomplete, or dynamic widgets that change their state too quickly.&lt;/p&gt;
&lt;p&gt;Secondly, I read a book on Erlang when I was a teenager, and it said something that changed my life forever:&lt;/p&gt;
&lt;p&gt;&lt;img src=&apos;/assets/img/pure_functions.jpg&apos; class=&apos;center-image&apos; width=&apos;400&apos; height=&apos;400&apos; alt=&apos;Pure functions can be replaced while the application is running&apos;&gt;&lt;/p&gt;
&lt;p&gt;Thirdly, I was in awe of Bret Victor’s videos.&lt;/p&gt;
&lt;p&gt;At some point I was reading Webpack docs and it described something mysterious called &lt;a href=&quot;http://webpack.github.io/docs/hot-module-replacement.html&quot;&gt;hot module replacement&lt;/a&gt;. I &lt;a href=&quot;http://stackoverflow.com/q/24581873&quot;&gt;asked about it&lt;/a&gt;, and &lt;a href=&quot;http://stackoverflow.com/a/24587740&quot;&gt;Tobias answered&lt;/a&gt;. I realized I could mix HMR with React, and this was the birth of React Hot Loader.&lt;/p&gt;
&lt;p&gt;I don’t think React Hot Loader is important as a piece of tech—it’s really not—but I definitely see people’s expectations of web tooling capabilities raise, and I’m happy if my work helped this. &lt;a href=&quot;https://github.com/elm-lang/elm-reactor&quot;&gt;Elm&lt;/a&gt; and &lt;a href=&quot;https://github.com/bhauman/lein-figwheel&quot;&gt;ClojureScript&lt;/a&gt; community are doing exciting work in this field, and I’m happy that JavaScript community is now paying more attention to the functional programming and developer experience it enables.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#how-would-you-describe-redux-to-someone-who-has-never-heard-of-it-&quot; id=&quot;how-would-you-describe-redux-to-someone-who-has-never-heard-of-it-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;How would you describe Redux to someone who has never heard of it?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#how-would-you-describe-redux-to-someone-who-has-never-heard-of-it-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First of all, it’s tiny (about 2k). If you remove sanity checks that prevent common beginner mistakes, it’s 1K. I’m not saying this to brag, and I’m not obsessed with microlibraries. However, this should give you an idea about the scope of the project.&lt;/p&gt;
&lt;p&gt;Although it is often used instead of Backbone, Flummox, or some other Flux-inspired library, the size of the API surface is comparable to the original &lt;a href=&quot;https://github.com/facebook/flux&quot;&gt;Flux&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;Why would you use it? Redux embraces immutability and &lt;a href=&quot;https://youtu.be/1uRC3hmKQnM?t=15m26s&quot;&gt;ties your hands to free your mind.&lt;/a&gt; If you developed a complex JavaScript application, you might have fallen into one of two traps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using mutable models in asynchronous code which is later impossible to trace, understand, modify, or refactor;&lt;/li&gt;
&lt;li&gt;using a framework that promised to solve this problem, and then spending hours debugging the guts of this framework and working around its limitations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Redux is my attempt to answer the following question: what is the least opinionated API surface useful for predictably managing state of complex apps with a &lt;a href=&quot;https://github.com/gaearon/redux-devtools&quot;&gt;great developer experience&lt;/a&gt;? What hooks do we need to expose to create &lt;a href=&quot;https://github.com/xgrommx/awesome-redux&quot;&gt;an ecosystem&lt;/a&gt; around a 2K library?&lt;/p&gt;
&lt;p&gt;There is nothing new in Redux: David Nolen has been talking about benefits of a single immutable state tree &lt;a href=&quot;http://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs/&quot;&gt;for two years now&lt;/a&gt;, and Evan Czaplicki has made an enormous effort to describe the &lt;a href=&quot;https://github.com/evancz/elm-architecture-tutorial&quot;&gt;Elm architecture&lt;/a&gt; from which Redux borrows its ideas.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-did-you-develop-redux-&quot; id=&quot;why-did-you-develop-redux-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why did you develop Redux?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-did-you-develop-redux-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I didn’t mean to create a Flux framework. When React Europe was first announced, I proposed a talk on “hot reloading and time travel” but to be honest I had no idea how to implement time travel. I thought about it for a while, and I knew there was prior art in &lt;a href=&quot;http://elm-lang.org&quot;&gt;Elm&lt;/a&gt;, so I read &lt;a href=&quot;https://github.com/evancz/elm-architecture-tutorial&quot;&gt;Elm Architecture&lt;/a&gt;, but forgot about it soon. I &lt;a href=&quot;https://github.com/gaearon/flux-hot-loader/issues/1&quot;&gt;attempted&lt;/a&gt; to create a “Flux Hot Loader” but it was full of &lt;a href=&quot;https://github.com/gaearon/flux-hot-loader/blob/e74ca3ca4493e1855af37cb72a18b66d2a967efc/index.js#L68-L120&quot;&gt;horrible hacks&lt;/a&gt; to work around all the side effects inside Flux Stores: registering a handler, managing subscriptions.&lt;/p&gt;
&lt;p&gt;I wanted the logic of the Stores to be hot reloadable so I tried to move subscriptions and registering outside the Stores. I also realized I needed to guarantee the data to be immutable. I remembered how Pete Hunt and others described Flux Stores as &lt;code&gt;state, action =&amp;gt; state&lt;/code&gt;, and how Jing Chen suggested me to replay actions for hot reloading. So all of this was in my head, but I was still prototyping when I released Redux 0.1.0.&lt;/p&gt;
&lt;p&gt;I had these “stateless Stores” (now we call them reducers) that take &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; and return the next &lt;code&gt;state&lt;/code&gt;. This let me implement hot reloading for their logic. However, there was still a big missing piece: I had this “dispatcher” thing from Flux that would call those “stateless Stores”.&lt;/p&gt;
&lt;p&gt;Then Andrew Clark &lt;a href=&quot;https://gist.github.com/acdlite/9f1b5883d132ad242323&quot;&gt;suggested&lt;/a&gt; we just combine reducer functions into a single reducer function. This would kill the need for dispatcher. Just like UI component tree has one component at the root, different reducer functions can be called from a single root reducer function. Later I realized that this is exactly &lt;a href=&quot;https://github.com/evancz/elm-architecture-tutorial&quot;&gt;Elm architecture&lt;/a&gt;, and I just didn’t understand it at first.&lt;/p&gt;
&lt;p&gt;This is how Redux came to be. I was trying to write some code for a fancy React Europe demo, but it turned out that people really liked the architecture, so I marketed it as a library, although there is really very little code there.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I am happy to have moved Redux to &lt;a href=&quot;http://github.com/rackt&quot;&gt;rackt&lt;/a&gt; where we share ownership of quality React-related code. I’ve been doing things on my own for quite a while, and lately it’s been more stressful because of the attention my work is receiving, so I intend to &lt;a href=&quot;http://250bpm.com/blog:50&quot;&gt;step back&lt;/a&gt; from the active maintenance of Redux once I’m happy with it. (And I almost am.)&lt;/p&gt;
&lt;p&gt;Andrew Clark is collaborating with &lt;a href=&quot;https://reactjs-training.com/&quot;&gt;Ryan and Michael&lt;/a&gt; on the &lt;a href=&quot;https://github.com/acdlite/redux-react-router&quot;&gt;React Router integration&lt;/a&gt;—people have been asking for it for a long time, so I’m full of joy this is finally happening.&lt;/p&gt;
&lt;p&gt;I have released &lt;a href=&quot;https://github.com/gaearon/react-transform-boilerplate&quot;&gt;a few new tools&lt;/a&gt; that are going to obsolete React Hot Loader. I will write a post describing them in greater detail soon. I am also going to work on screencasts about Redux, as I promised in &lt;a href=&quot;https://www.patreon.com/reactdx&quot;&gt;my Patreon campaign&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And then—who knows?—I might even take a day job!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#at-the-moment-a-lot-of-architecture-related-innovation-seems-to-happen-what-do-you-think-of-alternative-approaches-such-as-mobservable-https-mweststrate-github-io-mobservable-or-cerebral-http-christianalfoni-com-cerebral-&quot; id=&quot;at-the-moment-a-lot-of-architecture-related-innovation-seems-to-happen-what-do-you-think-of-alternative-approaches-such-as-mobservable-https-mweststrate-github-io-mobservable-or-cerebral-http-christianalfoni-com-cerebral-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;At the moment a lot of architecture related innovation seems to happen. What do you think of alternative approaches such as &lt;a href=&quot;https://mweststrate.github.io/mobservable/&quot;&gt;mobservable&lt;/a&gt; or &lt;a href=&quot;http://christianalfoni.com/cerebral/&quot;&gt;cerebral&lt;/a&gt;?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#at-the-moment-a-lot-of-architecture-related-innovation-seems-to-happen-what-do-you-think-of-alternative-approaches-such-as-mobservable-https-mweststrate-github-io-mobservable-or-cerebral-http-christianalfoni-com-cerebral-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I am not the right person to ask, as I have not used them. I’m definitely in awe of the work Christian has been putting into Cerebral and the &lt;a href=&quot;http://www.youtube.com/watch?v=xCIv4-Q2dtA&quot;&gt;developer experience behind it&lt;/a&gt;. Its concept of signals and expressing async flow declaratively is &lt;a href=&quot;https://github.com/rackt/redux/issues/343&quot;&gt;also very interesting&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My hope with Redux is that it’s extensible enough that great ideas and patterns find its way into it as userland extensions like &lt;a href=&quot;https://rackt.github.io/redux/docs/advanced/Middleware.html&quot;&gt;Redux middleware&lt;/a&gt;. My other hope is that migrating &lt;em&gt;from&lt;/em&gt; Redux to something better won’t be difficult because of its tiny API surface.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Look no further than &lt;a href=&quot;https://www.youtube.com/watch?v=Zemce4Y1Y-A&quot;&gt;Sebastian’s talk&lt;/a&gt;. We’re going to see more &lt;a href=&quot;https://medium.com/@mjackson/universal-javascript-4761051b7ae9&quot;&gt;universality&lt;/a&gt;. We’re going to see both cross-platform, as well as platform-specific components for DOM, server, native, &lt;a href=&quot;https://github.com/gaearon/react-blessed-hot-motion&quot;&gt;console&lt;/a&gt;, WebGL, you name it.&lt;/p&gt;
&lt;p&gt;With the advent of &lt;a href=&quot;http://facebook.github.io/react/blog/2015/09/10/react-v0.14-rc1.html&quot;&gt;pure functions as components&lt;/a&gt;, we’re also entering the era of a new kind of universality: components that work across libraries. If you don’t use imperative APIs, what’s the different between a React component function, Deku component function and a Cycle component function? Only the rendering backend and element factories. If you use JSX, you can literally replace the view framework, and pure function components will “just work” with the new engine.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/andrestaltz&quot;&gt;André Staltz&lt;/a&gt;, creator of &lt;a href=&quot;http://cycle.js.org/&quot;&gt;Cycle&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for the interview Dan! It has been certainly amazing to see how much React has evolved within a year. And of course we can thank you for some of the innovation - hot loading and Redux in particular.&lt;/p&gt;
&lt;p&gt;It was straight-forward to port the &lt;a href=&quot;https://github.com/survivejs/redux-demo&quot;&gt;Kanban example of the book to Redux&lt;/a&gt;. There&amp;#39;s a lot of familiar code. It has been just structured a little differently. It is easy to understand what&amp;#39;s going on.&lt;/p&gt;
&lt;p&gt;If Redux piqued your interest, check out &lt;a href=&quot;https://rackt.github.io/redux/&quot;&gt;the official documentation&lt;/a&gt; to get started. Even though the library is tiny, it comes with high quality documentation. See the following resources for more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://teropa.info/blog/2015/09/10/full-stack-redux-tutorial.html&quot;&gt;Full-Stack Redux Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@bananaoomarang/handcrafting-an-isomorphic-redux-application-with-love-40ada4468af4&quot;&gt;Tutorial: Handcrafting an Isomorphic Redux Application (With Love)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/happypoulp/redux-tutorial&quot;&gt;happypoulp/redux-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v1.8.0</title><id >asurvivejswebpackandreactv1802015-09-13t00:00:00+03:00</id><link href="http://survivejs.com/blog/survivejs-18"></link><updated >2015-09-13T00:00:00+03:00</updated><content type="html">&lt;p&gt;We have once more new chapters in the book. I&amp;#39;m going to try a new model with these. For now the full versions of the testing and typing chapters will be available through &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;Leanpub&lt;/a&gt; only. The community version will contain TLDR;s for these so you still get the core points. Of course the project source is public for examination.&lt;/p&gt;
&lt;p&gt;By doing this I want to give my supporters a small edge. As a result they&amp;#39;ll get the access to the new material first. If it looks like this works, I don&amp;#39;t mind developing more content and opening old as new chapters get developed. Consider it as a poor man&amp;#39;s Kickstarter. We can even agree on goals if that works better.&lt;/p&gt;
&lt;p&gt;Pricing-wise I&amp;#39;ve bumped the minimum price of the book to $20 as I believe that reflects its current value. I may do another bump later on as I understand how the situation develops.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-v1-8-0-&quot; id=&quot;book-improvements-v1-8-0-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;v1.8.0&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-v1-8-0-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 137 commits went to &lt;code&gt;v1.8.0&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.7.5...v1.8.0&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#general-fixes&quot; id=&quot;general-fixes&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;General Fixes&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#general-fixes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Grammar was improved overall. Big thanks Steve!&lt;/li&gt;
&lt;li&gt;&lt;em&gt;app/main.js[x]&lt;/em&gt; was renamed as &lt;em&gt;app/index.js[x]&lt;/em&gt;. This simplifies Webpack entry configuration as you can point directly to &lt;code&gt;app&lt;/code&gt;. This resolves to the index file within the directory and saves some hassle.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-and-react&quot; id=&quot;webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;. This free editor has grown fast. It gained JSX support in &lt;code&gt;v0.8.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Fixed basic JSX example. A React component should return a single node.&lt;/li&gt;
&lt;li&gt;Linked to a &lt;a href=&quot;https://medium.com/@housecor/react-s-jsx-the-other-side-of-the-coin-2ace7ab62b98&quot;&gt;blog post about JSX shock&lt;/a&gt;. It goes more detail about the experience.&lt;/li&gt;
&lt;li&gt;Updated Webpack example to use &lt;code&gt;eval-source-map&lt;/code&gt; instead of &lt;code&gt;eval&lt;/code&gt;. This is consistent with the earlier chapter. In our case we can avoid &lt;code&gt;eval&lt;/code&gt;. Even though it&amp;#39;s faster we can afford to go for quality.&lt;/li&gt;
&lt;li&gt;Explained &lt;code&gt;resolve.extensions&lt;/code&gt; in detail. Simply put this Webpack property allows us to control the way it matches against files (is it ok to skip extension or not).&lt;/li&gt;
&lt;li&gt;Moved Babel to use &lt;code&gt;.babelrc&lt;/code&gt;. This will become even more important in the future as &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot;&gt;react-transform&lt;/a&gt; Babel plugin will replace the current hot loader.&lt;/li&gt;
&lt;li&gt;Documented how to control &lt;code&gt;.babelrc&lt;/code&gt; based on env easily. This is important when you want to perform branching based on your build target.&lt;/li&gt;
&lt;li&gt;Mentioned about &lt;a href=&quot;https://github.com/facebook/react-devtools&quot;&gt;React Developer Tools&lt;/a&gt;. They give you a better idea of what&amp;#39;s going on at your code. Available for both Chrome and Firefox.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Noted that hot loading won&amp;#39;t pick up changes made to a &lt;code&gt;constructor&lt;/code&gt;. It simply replaces method contents so these get missed. It would be nice to find a good alternative to those &lt;code&gt;bind&lt;/code&gt; statements that is performant and works with hot loading.&lt;/li&gt;
&lt;li&gt;Explained what &lt;code&gt;super()&lt;/code&gt; actually does. Simply put it invokes the same method of the parent class.&lt;/li&gt;
&lt;li&gt;Mentioned that using a &lt;em&gt;context&lt;/em&gt; might be a viable option for dealing with &lt;code&gt;onEdit&lt;/code&gt;. It is currently and undocumented feature. Dmitry Kudryavtsev goes into a good detail at his article &lt;a href=&quot;https://medium.com/@skwee357/the-land-of-undocumented-react-js-the-context-99b3f931ff73&quot;&gt;The land of undocumented react.js: The Context&lt;/a&gt;. React 0.14 will introduce a stable context API and it&amp;#39;s worth discussing then.&lt;/li&gt;
&lt;li&gt;Caught possible &lt;code&gt;alt.bootstrap&lt;/code&gt; related exception. It can fail if it receives data it cannot interpret. Better to deal with that than to blow up.&lt;/li&gt;
&lt;li&gt;Linked to Sebastian Markbåge&amp;#39;s expanded explanation of &lt;a href=&quot;https://gist.github.com/sebmarkbage/07bbe37bc42b6d4aef81&quot;&gt;JSX spread attributes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Made &lt;code&gt;get(ids)&lt;/code&gt; more tolerant against missing data. Now it doesn&amp;#39;t return possible empty (&lt;code&gt;undefined&lt;/code&gt; or such) results. Of course getting that sort of data at &lt;code&gt;localStorage&lt;/code&gt; isn&amp;#39;t a good idea in the first place but sometimes it&amp;#39;s a good idea to be a little defensive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pushed &lt;code&gt;ItemTypes&lt;/code&gt; below &lt;em&gt;app/constants/itemTypes.js&lt;/em&gt;. Given they are constants that feels like the right place for those. I noticed this while implementing the &lt;a href=&quot;https://github.com/survivejs/redux-demo&quot;&gt;Redux version of the Kanban&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Expanded explanations. I tend to go somewhat terse on my first pass of content. Now I&amp;#39;ve expanded on possibly clear parts so it&amp;#39;s easier to see what&amp;#39;s going on and why.&lt;/li&gt;
&lt;li&gt;Passed &lt;code&gt;id&lt;/code&gt; instead of &lt;code&gt;data&lt;/code&gt; to &lt;code&gt;Note&lt;/code&gt;. This change simplified &lt;code&gt;move&lt;/code&gt; logic somewhat and it goes according to &lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_Demeter&quot;&gt;the law of Demeter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dropped redundant references to &lt;code&gt;TARGET&lt;/code&gt;. Now we can avoid setting &lt;code&gt;TARGET&lt;/code&gt; at &lt;em&gt;package.json&lt;/em&gt; as we deduce the target based on npm lifecycle information.&lt;/li&gt;
&lt;li&gt;Noted that peeking at the warnings Uglify.js, the minifier, provides can be beneficial.&lt;/li&gt;
&lt;li&gt;Expanded on splitting &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;vendor&lt;/code&gt; bundles. Now it&amp;#39;s easier to see what&amp;#39;s going on and, most importantly, why.&lt;/li&gt;
&lt;li&gt;Noted &lt;code&gt;ExtractTextPlugin&lt;/code&gt; related gotchas. It won&amp;#39;t work through &lt;code&gt;loader&lt;/code&gt; form. Instead you have to use &lt;code&gt;loaders: [ExtractTextPlugin.extract(&amp;#39;style&amp;#39;, &amp;#39;css!autoprefixer&amp;#39;)]&lt;/code&gt; or such. If you need to use multiple loaders with it, note the syntax! You should use the &lt;code&gt;!&lt;/code&gt; form in the second parameter to add more if needed.&lt;/li&gt;
&lt;li&gt;Noted that &lt;a href=&quot;https://github.com/webpack/webpack/issues/1315&quot;&gt;chunkhash seems to be broken&lt;/a&gt; at the moment. For now I would suggest generating hashes of your own but I understand it&amp;#39;s a heavy solution. Hopefully this one gets fixed soon.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#testing-react&quot; id=&quot;testing-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Testing React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#testing-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a new chapter! The chapter can likely use some work still. I&amp;#39;ll probably cover techniques such as mocking in the future but the basic setup inspired by Cesar Andreu&amp;#39;s &lt;a href=&quot;https://github.com/cesarandreu/web-app&quot;&gt;web-app&lt;/a&gt; is there. We also get some tests done so that&amp;#39;s good.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#typing-with-react&quot; id=&quot;typing-with-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Typing with React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#typing-with-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is another new chapter. In the chapter I show how to annotate our project using &lt;a href=&quot;https://facebook.github.io/react/docs/reusable-components.html&quot;&gt;propTypes&lt;/a&gt;. This is one of those steps you should take to solidify your project.&lt;/p&gt;
&lt;p&gt;There is a basic introduction to &lt;a href=&quot;http://flowtype.org/&quot;&gt;Flow&lt;/a&gt;. Unfortunately the current version is missing some functionality our project would need. I have to get back to this later as the tool develops further.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; will receive JSX support in 1.6. That&amp;#39;s another tool I want to cover once it gets out.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#linting-in-webpack&quot; id=&quot;linting-in-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Linting in Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#linting-in-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Rewrote introduction to be easier to approach.&lt;/li&gt;
&lt;li&gt;Mentioned about &lt;a href=&quot;http://eslint.org/blog/2015/09/eslint-v1.4.0-released/&quot;&gt;ESLint autofixing&lt;/a&gt;. This is a feature that allows you to fix certain linting errors automatically. As it&amp;#39;s new, not a lot of rules are supported yet.&lt;/li&gt;
&lt;li&gt;Explained ESLint env configuration detail. That&amp;#39;s important to know especially when you are dealing with multiple environments and testing tools.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&quot;http://editorconfig.org/&quot;&gt;EditorConfig&lt;/a&gt;. This tool allows you to maintain project-wide coding style. There&amp;#39;s a good level of editor/IDE support. It&amp;#39;s a valuable tool in a team environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#authoring-libraries&quot; id=&quot;authoring-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Authoring Libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#authoring-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Expanded on &lt;code&gt;npm adduser&lt;/code&gt; and mentioned &lt;code&gt;npm login&lt;/code&gt; alias to clear up confusion.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#styling-react&quot; id=&quot;styling-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Styling React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#styling-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentioned &lt;a href=&quot;https://learnboost.github.io/stylus/&quot;&gt;Stylus&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Added &amp;quot;resources&amp;quot; sidebar to the site. I&amp;#39;ll be setting similar ones for other chapters. I&amp;#39;ll likely push this to a separate repository so it&amp;#39;s easier to contribute.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given there&amp;#39;s a &lt;a href=&quot;https://facebook.github.io/react/blog/2015/09/10/react-v0.14-rc1.html&quot;&gt;release candidate of React 0.14&lt;/a&gt; out there, it likely doesn&amp;#39;t take that long for a final version to appear. This will lead to some important changes in the book. Most importantly it will allow me to default to function syntax for components. In addition I can dig into features such as context.&lt;/p&gt;
&lt;p&gt;Once I&amp;#39;m convinced that &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot;&gt;babel-plugin-react-transform&lt;/a&gt; is stable enough and that it works well with the project, I&amp;#39;ll change my recommendation to it. It&amp;#39;s already worth a look.&lt;/p&gt;
&lt;p&gt;I&amp;#39;ll also develop the content based on your feedback. The site may receive some small updates. I would love to do something about the highlighting of the code examples and improve the way the are laid out (show added/removed lines better).&lt;/p&gt;
&lt;p&gt;I&amp;#39;ll write at least one more chapter for my Leanpub readers. The way the situation develops determines the rest.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope you enjoy this release. As usual &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;feedback&lt;/a&gt; and pull requests are welcome.&lt;/p&gt;
&lt;p&gt;I&amp;#39;m still a little conflicted about Amazon and dead tree versions. One option is that I&amp;#39;ll do a snapshot (&lt;code&gt;v2.0.0&lt;/code&gt;) that will be published. Leanpub version would then continue from there. Amazon buyers would obviously receive a heavy discount on Leanpub. It&amp;#39;s more about reaching more people with the work than anything else.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >Front-end Singularity and How to Deal with It</title><id >afrontendsingularityandhowtodealwithit2015-09-06t00:00:00+03:00</id><link href="http://survivejs.com/blog/frontend-singularity-is-here"></link><updated >2015-09-06T00:00:00+03:00</updated><content type="html">&lt;p&gt;Technological progress is both exhilarating and terrifying thing. And by the looks of it, it just keeps on progressing faster and faster. This has lead to an idea of technological singularity. As singularity is reached, technology develops so fast humans can&amp;#39;t keep up with the progress anymore. It feels like something similar is happening with front-end development right now.&lt;/p&gt;
&lt;p&gt;This is a topic I&amp;#39;ve had to ponder about for a presentation known as &lt;a href=&quot;https://survivejs.github.io/frontend-in-2015/&quot;&gt;Frontend in 2015 - Clear the Decks&lt;/a&gt;. I believe the term &amp;quot;clear the decks&amp;quot; gets to the gist of it. Embrace change.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-big-bang-of-frameworks&quot; id=&quot;the-big-bang-of-frameworks&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;The Big Bang of Frameworks&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#the-big-bang-of-frameworks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As &lt;a href=&quot;https://twitter.com/geraldyeo/status/640036032138846208&quot;&gt;Gerald Yeo put it&lt;/a&gt;, we&amp;#39;re experiencing an explosion of frameworks - a big bang. We&amp;#39;ve gone from literally nothing to an amazing amount of alternatives. Add libraries, such as React, to that and you end up with a massive ecosystem.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; alone has over 180k packages to give you a sense of scale. By this rate it will reach million packages by 2020 as it keeps growing faster and faster. Of course the growth comes with problems of its own. How do you find the good packages and know which ones are maintained well?&lt;/p&gt;
&lt;p&gt;From the perspective of a developer this means it&amp;#39;s impossible to keep up with the development. Even as a book author I have trouble keeping up. I can only imagine how difficult it is for normal developers that have their hands full keeping the boat from sinking.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-hype-cycle&quot; id=&quot;the-hype-cycle&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;The Hype Cycle&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#the-hype-cycle&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This all ties to the concept of &lt;a href=&quot;https://en.wikipedia.org/wiki/Hype_cycle&quot;&gt;the hype cycle&lt;/a&gt;. In the context of JavaScript that&amp;#39;s something we&amp;#39;re experiencing constantly. Each framework and new technique goes through the cycle. After initial excitement you will face the reality. Eventually the situation will stabilize and, of course, something new will come along. To quote Teletubbies, &amp;quot;Again-Again&amp;quot;!&lt;/p&gt;
&lt;p&gt;As new solutions become available, they can learn from the earlier efforts. For instance, you can see the influence of React in Angular 2.0 and other up and coming frameworks. Eventually the most powerful ideas make it to the standards (i.e. Web Components). In turn this allows libraries and frameworks to collaborate.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#working-across-boundaries&quot; id=&quot;working-across-boundaries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Working Across Boundaries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#working-across-boundaries&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;No matter what solution you are using, there&amp;#39;s always room for collaboration. Even though we might choose our &amp;quot;side&amp;quot; and prefer some specific stack, the world is never black and white. I believe this is the reason why shared, lower level constructs, such as ones enabled by Web Components, are so important.&lt;/p&gt;
&lt;p&gt;Ideally Web Components will make it possible to work across boundaries. Instead of having separate bindings of &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; per framework, it would be more beneficial to have canonical bindings which to consume. Hopefully the world moves into that direction.&lt;/p&gt;
&lt;p&gt;Interestingly Angular 2.0 can consume Web Components already and I can only hope others will follow the suit. Anything we can do to enable collaboration across boundaries is worth it. npm has shown that already but we can go further than that.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#preparing-for-the-future&quot; id=&quot;preparing-for-the-future&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Preparing for the Future&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#preparing-for-the-future&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The future is already here — it&amp;#39;s just not very evenly distributed. - William Gibson&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There&amp;#39;s no telling what the world will look like in a year. It&amp;#39;s easier to look back and see how antiquated things were. Progress happens so gradually it can be difficult to realize it. Some bleeding edge developers are already experiencing the future while mainstream is behind in many ways. Of course sticking to the bleeding edge implies a certain amount of pain.&lt;/p&gt;
&lt;p&gt;It is hard to prepare for the future as so many things are possible. When it comes to software architecture it may be a good idea to design for change. As new winds blow, you may want to rethink your approach. As a result the architecture has to live. Web development is organic by definition. It is grown, not built.&lt;/p&gt;
&lt;p&gt;As I put it in my presentation slides subtitle, prepare to clear the decks. It&amp;#39;s hard to avoid that in web development. If you are prepared for change, you can deal with it better.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-need-for-new&quot; id=&quot;the-need-for-new&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;The Need for New&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#the-need-for-new&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In some ways front-end development is very frustrating. It is particularly difficult for perfectionists. As you get bombarded by new, shiny things, it can be easy to feel inadequate.&lt;/p&gt;
&lt;p&gt;Looking through job requirements doesn&amp;#39;t do any favors either. There are simply so many matters to master. And as they say, jack of all trades is a master of none. At the same time you should master something to stand out at least a little bit.&lt;/p&gt;
&lt;p&gt;This is one of the reasons why I wrote my book. I wanted to go through a slice of interesting technologies. Besides being useful for me personally, I believe the material saves some effort on your part. It is important to be aware of some of the available technologies if nothing else.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An important part of front-end development is knowing what you don&amp;#39;t know. You don&amp;#39;t have to be an absolute master at everything. There simply isn&amp;#39;t enough time for that. Instead, build around your strengths and stay curious.&lt;/p&gt;
&lt;p&gt;Big thanks to &lt;a href=&quot;http://lemire.me/blog/archives/2015/09/04/revisiting-vernor-vinges-predictions-for-2025/&quot;&gt;Daniel Lemire&lt;/a&gt; for inspiration. I also appreciate the feedback from &lt;a href=&quot;https://twitter.com/mbrochh&quot;&gt;Martin Brochhaus&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/geraldyeo&quot;&gt;Gerald Yeo&lt;/a&gt; that pushed me to write this post.&lt;/p&gt;
</content></entry><entry ><title >How to Succeed at Technical Books?</title><id >ahowtosucceedattechnicalbooks2015-09-04t00:00:00+03:00</id><link href="http://survivejs.com/blog/succeed-at-technical-books"></link><updated >2015-09-04T00:00:00+03:00</updated><content type="html">&lt;p&gt;I&amp;#39;ve &lt;a href=&quot;http://www.nixtu.info/2015/07/on-economics-of-ebook-publishing.html&quot;&gt;written about book publishing earlier&lt;/a&gt; at my personal blog. It is an interesting yet difficult business. I sort of stumbled into the world by chance. In this post I want to share some of my learnings.&lt;/p&gt;
&lt;p&gt;Long story short I wrote a little &lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot;&gt;Webpack cookbook&lt;/a&gt; with &lt;a href=&quot;http://www.christianalfoni.com/&quot;&gt;Christian Alfoni&lt;/a&gt;. That led to an idea of a bigger book. Initially we pitched that to a real publisher. After long negotiations we got a no. That didn&amp;#39;t stop me. You can see the result here.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#growing-pains&quot; id=&quot;growing-pains&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Growing Pains&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#growing-pains&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even though the book hasn&amp;#39;t been a great financial success, it has proven its benefits. There are multiple reasons for this. For instance having all your content open might not be the best idea for a beginner author unless you have some way to upsell. This is something I&amp;#39;m going to experiment with to see if having at least some of the content closed makes a difference.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#tackling-big-problems-by-yourself&quot; id=&quot;tackling-big-problems-by-yourself&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Tackling Big Problems by Yourself&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#tackling-big-problems-by-yourself&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I am aware a lot of beginner authors do a lot worse than me. The problem is that when you are starting out alone, you have to tackle big problems by yourself. Simply put even if you could write but fail at other important tasks, such as marketing and sales, it won&amp;#39;t work. If you wrote an excellent book and people failed to find it, it would still be a failure, at least financially.&lt;/p&gt;
&lt;p&gt;Note that you can, and probably should, outsource some of the book related tasks. You can find people to proofread your material for relatively cheap. Even if the reader knows nothing about the topic, you will likely get a bunch of grammar fixes to make. Same goes for crafting landing pages, marketing material and graphics. A professional can simply do better work, faster.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#extra-challenge-for-non-natives&quot; id=&quot;extra-challenge-for-non-natives&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Extra Challenge for Non-natives&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#extra-challenge-for-non-natives&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a non-native author you&amp;#39;ll encounter an extra challenge in the form of grammar. As a Finn I tend to be quite blind at articles. I miss some at times. My writing style has likely been inspired by my culture as well. That&amp;#39;s something that&amp;#39;s hard to tone down. On the other hand that can be treated as a strength. Sometimes it&amp;#39;s good to be a little different and stand out.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#royalties&quot; id=&quot;royalties&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Royalties&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#royalties&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a first time author going through an established publisher could be a good option. They&amp;#39;ll deal with some of the hard parts. You will pay for this quite literally, though. And there are no guarantees for success. At least this will make you familiar with the process. When you decide to self-publish, you already know some of the ropes. As a result you aren&amp;#39;t starting from the scratch anymore.&lt;/p&gt;
&lt;p&gt;The economics of self-publishing can be more rewarding. There are more aspects to worry about but the economics make up for that. Roughly put you might need to sell six times the books through a real publisher than otherwise. This means you can reach decent income even with modest sales.&lt;/p&gt;
&lt;p&gt;To give you a better idea, consider the figures below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Traditional publisher - 15-50% royalty, closer to 15% normally and can be less even&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leanpub.com/&quot;&gt;Leanpub&lt;/a&gt; - $0.50 + 10%&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gumroad.com/&quot;&gt;Gumroad&lt;/a&gt; - $0.25 + 5%&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://getdpd.com/&quot;&gt;DPD&lt;/a&gt; - $10 per month&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shortly, the more responsibility you take, the more you get paid for it. But this assumes you can deal with all the parts involved. Having a great royalty rate doesn&amp;#39;t help if the book doesn&amp;#39;t sell.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#leanpub-vs-alternatives&quot; id=&quot;leanpub-vs-alternatives&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Leanpub vs. Alternatives&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#leanpub-vs-alternatives&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Especially with something like DPD you would be raking most of the profit to yourself. But as stated earlier, the cost is usually elsewhere. The benefit of Leanpub is that they offer a decent landing page for your book and support Markdown based authoring.&lt;/p&gt;
&lt;p&gt;One potential problem is that you don&amp;#39;t get direct access to your clients. This makes it more difficult to grow your personal mailing list than it would have to be. There are likely good reasons for this, though.&lt;/p&gt;
&lt;p&gt;It is hard to underestimate the importance of a good mailing list. It is an amazing way to reach your audience. There are an entire set of techniques related to growing them. I am not an expert when it comes to mailing lists but I can see the value. Beyond marketing they actually allow you to help your audience directly, get feedback and so on.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#control-over-output&quot; id=&quot;control-over-output&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Control over Output&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#control-over-output&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can get output similar to Leanpub through something like &lt;a href=&quot;https://www.gitbook.com/&quot;&gt;Gitbook&lt;/a&gt;. If you have the skills for that, you can customize the result as you want. You can sell the result through Gumroad, DPD, and such. You will get more control over the sales process and can set up the sales funnel just the way you want it. I believe growing your mailing list becomes easier this way.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#benefits-of-a-proxy&quot; id=&quot;benefits-of-a-proxy&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Benefits of a Proxy&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#benefits-of-a-proxy&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I feel selling is one of the smallest problems, especially if you go through a proxy. If you deal with it yourself, you will have to deal with things like EU VAT. That will get very complex and time consuming fast. It is likely a better idea to leave these kind of details to companies that have them sorted out.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#going-dead-tree-and-beyond&quot; id=&quot;going-dead-tree-and-beyond&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Going Dead Tree and Beyond&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#going-dead-tree-and-beyond&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Note that services like &lt;a href=&quot;https://www.lulu.com/&quot;&gt;Lulu&lt;/a&gt; allow you to get actual dead tree books done. The obvious disadvantage of this is that it becomes difficult to push updates. Lulu also gives access to major digital bookshops, such as Amazon, B&amp;amp;N, and iBooks. This means you&amp;#39;ll need to have your book content fixed apart from grammatical fixes, though, as these platforms expect your book has an ISBN.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#potential-benefits&quot; id=&quot;potential-benefits&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Potential Benefits&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#potential-benefits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Financial success is only one potential benefit of writing a book. It will actually force you to become better at writing. Even though I&amp;#39;m far from top notch writers, I feel like my writing has improved. At least I&amp;#39;m faster at it, and it takes less effort. In addition I have gained contacts I wouldn&amp;#39;t have otherwise. And, most importantly, writing a book has opened an entire new world to me in the form of opportunities.&lt;/p&gt;
&lt;p&gt;Even in the worst case I have established a source of some level of income. The book seems to sell consistently and I have some tricks in my sleeve to improve on that. Better yet, I have made a dent to the market. It will be far easier to develop another book should I want to.&lt;/p&gt;
&lt;p&gt;Having a book in your CV doesn&amp;#39;t hurt either. The next time I do a round of interviews, I have an ace at sleeve. A book adds to your credibility and might be the factor that will help you to get the job. At the very least you will have a stronger bargaining position when negotiating over the financial bits.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-would-i-do-differently-&quot; id=&quot;what-would-i-do-differently-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Would I Do Differently?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-would-i-do-differently-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Just like with software projects the easiest thing to mess up is scoping. It&amp;#39;s difficult to estimate how long getting things done actually takes. This is exacerbated by the fact that as a first time author you don&amp;#39;t have a frame of reference. Based on this experience I would say it&amp;#39;s better to aim for a short guide, say 30-50 pages, rather than shoot for the moon from the first go.&lt;/p&gt;
&lt;p&gt;It is easier to expand than to cut down. Go for a short, quality book rather than something long and shoddy. Your readers will thank you.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#experiment-at-moderation&quot; id=&quot;experiment-at-moderation&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Experiment at Moderation&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#experiment-at-moderation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One interesting aspect of self-publishing is that it allows a wide range of experimentation. I probably went too far with that at some points. Instead it might be a good idea to try to fix your table of contents as soon as possible. This is just to avoid the amount of rework needed. Sometimes there&amp;#39;s no way to avoid that but as they say &amp;quot;fail to plan, plan to fail&amp;quot;.&lt;/p&gt;
&lt;p&gt;Ideally you wouldn&amp;#39;t have to iterate a lot on the content. I know this sounds like waterfall. It&amp;#39;s easier from a reader&amp;#39;s perspective, though. If nothing is ever done, how do you know when to read? At some point a book has to become ready. Editions are ideal for bigger changes. That&amp;#39;s the way the ISBN system has been designed.&lt;/p&gt;
&lt;p&gt;You could say there&amp;#39;s an interesting conflict between the need to move fast and the need for a stable result. Platforms, such as Leanpub or Gumroad, allow this sort of experimentation. As your book grows, it doesn&amp;#39;t hurt to become more conservative in your approach. For instance I&amp;#39;ve made conscious effort to move towards a more stable release cycle.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#shifting-topics&quot; id=&quot;shifting-topics&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Shifting Topics&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#shifting-topics&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One of the big challenges of being a technical author is that the scene changes all the time. If I started to write my book right now, I would perhaps choose some technologies covered a little differently. Especially in front-end development even a month is a long time. That puts extra pressure on both authors and readers.&lt;/p&gt;
&lt;p&gt;It can be hard to accept that your book is obsolete in some ways as soon as you publish it. That&amp;#39;s something for technical authors to endure.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#subscription-based-books-&quot; id=&quot;subscription-based-books-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Subscription Based Books?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#subscription-based-books-&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://commonsware.com/Android/&quot;&gt;The Busy Coder&amp;#39;s Guide to Android Development&lt;/a&gt; is an interesting alternative to the common approach. The author is selling his book as a subscription service. It&amp;#39;s a massive book, over 3,300 pages. Subscription would give you access to the newest content.&lt;/p&gt;
&lt;p&gt;From business point of view recurring income is one of the greatest things you can achieve. The problem with traditional sales is that it&amp;#39;s one-off. If you want more income from the same client, you would have to sell another offering or try to upsell your current offering in some way. You could for instance try to produce a video course or sell personal consulting to complement your base offering.&lt;/p&gt;
&lt;p&gt;A subscription based approach is more involved. It implies the need for continuous work. I believe that can work when scaled to a sufficient volume. As always, the problem for first time authors is in reaching that critical mass required to make it work.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#open-vs-closed&quot; id=&quot;open-vs-closed&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Open vs. Closed&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#open-vs-closed&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I went for an open approach in my first effort. The greatest advantage of this has been an immense amount of visibility. Of course translating that to sales is another story. If I started now, I would likely start with a mixed approach. Have something valuable behind a paywall to encourage sales. Perhaps a part of the content could be exclusive to the paid version only. Some keep all of the content closed.&lt;/p&gt;
&lt;p&gt;There&amp;#39;s likely no one right answer to this question. As the content has been available in an open format, that has enabled external contributions I would have missed otherwise. Given I&amp;#39;m a solo author, that has been a massive help. Now everyone gets a better book. This is something I am very happy about.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even though publishing a technical book is surprisingly simple, actually succeeding at it is another story. There are a lot of things that could go wrong. Don&amp;#39;t get discouraged, though. I believe that persistency, and the willingness to learn and adapt, will yield results at some point. Very few succeed with their first book anyway. So be prepared for another.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v1.7.5</title><id >asurvivejswebpackandreactv1752015-08-30t00:00:00+03:00</id><link href="http://survivejs.com/blog/survivejs-175"></link><updated >2015-08-30T00:00:00+03:00</updated><content type="html">&lt;p&gt;Onwards we go. &lt;code&gt;v1.7.5&lt;/code&gt; can be characterized as a refinement release. I went through &amp;quot;React and Flux&amp;quot; and &amp;quot;From Notes to Kanban&amp;quot; with my editor (thanks Jesús!). As a result we should have something that&amp;#39;s a notch better together. I took some decompression time during this iteration and negotiated a lot towards a better future I hope.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-v1-7-5-&quot; id=&quot;book-improvements-v1-7-5-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;v1.7.5&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-v1-7-5-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 116 commits went to &lt;code&gt;v1.7.5&lt;/code&gt;. To make it easier to follow what happened and where, I&amp;#39;ve split up the changes below.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.7.0...v1.7.5&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#general-fixes&quot; id=&quot;general-fixes&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;General Fixes&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#general-fixes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I learned something curious about &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;an&lt;/em&gt; (no, we don&amp;#39;t have these things in Finnish). It is important to remember to take in count what the words &lt;strong&gt;sound&lt;/strong&gt; like.&lt;/li&gt;
&lt;li&gt;Use nicer formatting for &lt;code&gt;npm i&lt;/code&gt; bits. Now &lt;code&gt;--&lt;/code&gt; shouldn&amp;#39;t get mangled.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot; id=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The introduction of the book has been expanded somewhat. There&amp;#39;s only one chance to make a first impression so might as well try to do a good one.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#webpack-compared&quot; id=&quot;webpack-compared&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Webpack Compared&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#webpack-compared&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added an expanded explanation for &lt;code&gt;make&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Added &lt;a href=&quot;http://jspm.io/&quot;&gt;JSPM&lt;/a&gt;. You should watch &lt;a href=&quot;https://www.youtube.com/watch?t=33&amp;amp;v=iukBMY4apvI&quot;&gt;Glen Maddern&amp;#39;s&lt;/a&gt; awesome demo about it. It wouldn&amp;#39;t surprise me a lot if JSPM had a bright future.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-with-webpack&quot; id=&quot;developing-with-webpack&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing with Webpack&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-with-webpack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Highlighted the importance of a proper &lt;code&gt;.gitignore&lt;/code&gt;. I&amp;#39;ve seen some people to neglect this so I felt it&amp;#39;s good to cover. It&amp;#39;s just one of those things that saves your nerves. :)&lt;/li&gt;
&lt;li&gt;Dropped &lt;code&gt;colors: true&lt;/code&gt; setting from &lt;code&gt;devServer&lt;/code&gt; configuration. Reading from source I learned that &lt;code&gt;webpack-dev-server&lt;/code&gt; actually detects for terminal colors automatically. As a result this bit of configuration can be dropped.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-a-basic-note-application&quot; id=&quot;implementing-a-basic-note-application&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing a Basic Note Application&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-a-basic-note-application&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pushed &lt;code&gt;notes&lt;/code&gt; definition outside of the &lt;code&gt;App&lt;/code&gt; component. This cleans up the implementation a little.&lt;/li&gt;
&lt;li&gt;Added screenshots to show what you should see after each visual step.&lt;/li&gt;
&lt;li&gt;Expanded the explanation of &lt;code&gt;super()&lt;/code&gt;. Remember that it refers to the method of the parent class.&lt;/li&gt;
&lt;li&gt;Improved the visual outlook of the add button.&lt;/li&gt;
&lt;li&gt;Made sure note tasks get assigned &lt;code&gt;display: inline-block;&lt;/code&gt; to force a minimum height to them even if there&amp;#39;s no content at all. This way they can be edited even then.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-and-flux&quot; id=&quot;react-and-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React and Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-and-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clarified &lt;em&gt;Gluing It All Together&lt;/em&gt; section a lot.&lt;/li&gt;
&lt;li&gt;Pushed &lt;em&gt;Dispatching in Alt&lt;/em&gt; to the end. I&amp;#39;ve settled for a convention where the main content should be about getting ahead with the application whereas these sort of good to know things have been pushed to the end.&lt;/li&gt;
&lt;li&gt;Dropped redundant &lt;code&gt;this.notes = this.notes || [];&lt;/code&gt; check. This won&amp;#39;t be needed so it can be safely dropped. The same goes for bootstrapped data in general. It just works.&lt;/li&gt;
&lt;li&gt;Clarified and expanded &lt;em&gt;What Are Decorators?&lt;/em&gt; and added an example showing how to implement &lt;code&gt;@log&lt;/code&gt; for logging how methods are called.&lt;/li&gt;
&lt;li&gt;Reworked &lt;em&gt;Using &lt;code&gt;AltContainer&lt;/code&gt; Instead of a Decorator&lt;/em&gt; for clarity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#from-notes-to-kanban&quot; id=&quot;from-notes-to-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;From Notes to Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#from-notes-to-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added screenshots to illustrate progress.&lt;/li&gt;
&lt;li&gt;Reworked &lt;em&gt;Modeling Lane&lt;/em&gt; for clarity.&lt;/li&gt;
&lt;li&gt;Reworked &lt;em&gt;Making Lanes Responsible of Notes&lt;/em&gt; for clarity.&lt;/li&gt;
&lt;li&gt;Push &lt;code&gt;addNote&lt;/code&gt; and &lt;code&gt;deleteNote&lt;/code&gt; &lt;code&gt;bind&lt;/code&gt;s to &lt;code&gt;constructor&lt;/code&gt; level. Logically &lt;code&gt;Lane&lt;/code&gt; id remains the same during its lifecycle so this seemed like a safe change to make.&lt;/li&gt;
&lt;li&gt;Highlighted important code changes using bullet points.&lt;/li&gt;
&lt;li&gt;Added a section known as &lt;em&gt;On Namespacing Components&lt;/em&gt;. This is a small technique you may find handy. It allows you to model cleaner component APIs so it&amp;#39;s worth knowing.&lt;/li&gt;
&lt;li&gt;Added missing &lt;code&gt;get&lt;/code&gt; to &lt;code&gt;NoteStore&lt;/code&gt;. While at it I bummed a couple of lines of code from it. Now it&amp;#39;s as compact as it can get.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#implementing-drag-and-drop&quot; id=&quot;implementing-drag-and-drop&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Implementing Drag and Drop&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#implementing-drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Reworked introduction.&lt;/li&gt;
&lt;li&gt;Reworked &lt;em&gt;Preparing Notes to Be Sorted&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Pushed &lt;code&gt;ItemTypes&lt;/code&gt; to &lt;code&gt;&amp;#39;../libs/item_types&amp;#39;&lt;/code&gt; as it&amp;#39;s not a component.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will be doing more work on this chapter to make it clearer still.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#building-kanban&quot; id=&quot;building-kanban&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Building Kanban&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#building-kanban&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added more context to the code examples to make them clearer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#authoring-libraries&quot; id=&quot;authoring-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Authoring Libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#authoring-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Made sure &lt;code&gt;preversion&lt;/code&gt; hook &lt;code&gt;git commit&lt;/code&gt; takes &lt;code&gt;--allow-empty&lt;/code&gt; to allow empty distribution commits to be made.&lt;/li&gt;
&lt;li&gt;Dropped redundant version related tip as &lt;code&gt;preversion&lt;/code&gt; hook does everything we need now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#styling-react&quot; id=&quot;styling-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Styling React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#styling-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Expanded on CSS Modules and linked to &lt;a href=&quot;https://github.com/gajus/react-css-modules&quot;&gt;gajus/react-css-modules&lt;/a&gt; as that makes it more convenient to work with them in React.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;#39;ll continue going through the content with my editor while listening to your feedback. I&amp;#39;m particularly interested in &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues/224&quot;&gt;highlighting updated lines&lt;/a&gt; as that would make it easier to follow what lines of code changed during the tutorial. I believe resolving this could help to push the book quality a notch further.&lt;/p&gt;
&lt;p&gt;Now that the content is getting solid this means I can spend more time on producing new content. I&amp;#39;ll be focusing on typing next. Also some other plans have been put to motion but more on those later.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think this was yet another good step towards a quality release at Amazon. Thanks for everyone involved! You make it worthwhile. :)&lt;/p&gt;
&lt;p&gt;I hope you enjoy this release. As usual &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;feedback&lt;/a&gt; and pull requests are welcome.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >Mobservable - Reactive React - Interview with Michel Weststrate</title><id >amobservablereactivereactinterviewwithmichelweststrate2015-08-19t00:00:00+03:00</id><link href="http://survivejs.com/blog/mobservable-interview"></link><updated >2015-08-19T00:00:00+03:00</updated><content type="html">&lt;p&gt;As React deals only with the view layer you will often have to complement it with something else. &lt;a href=&quot;https://facebook.github.io/flux/docs/overview.html&quot;&gt;Flux architecture&lt;/a&gt; is one answer but not the only one. &lt;a href=&quot;https://mweststrate.github.io/mobservable/&quot;&gt;Mobservable&lt;/a&gt; by &lt;a href=&quot;https://github.com/mweststrate&quot;&gt;Michel Weststrate&lt;/a&gt; is a refreshing alternative. But what is it really about?&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#can-you-tell-something-about-yourself-michel-how-did-you-discover-react-&quot; id=&quot;can-you-tell-something-about-yourself-michel-how-did-you-discover-react-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Can you tell something about yourself Michel? How did you discover React?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#can-you-tell-something-about-yourself-michel-how-did-you-discover-react-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;span class=&quot;author&quot;&gt;
  &lt;img src=&quot;https://www.gravatar.com/avatar/bdbeb02a7fe50b769e67e0c076b33c54?size=100&quot; alt=&quot;Michel Weststrate&quot; class=&apos;author&apos; width=&apos;100&apos; height=&apos;100&apos; /&gt;
&lt;/span&gt;
I&amp;#39;m a lead developer at Mendix where I worked on both frontend and backend development. About half a year ago me and my team started working on a greenfield,  enterprise scale project where most of the complexity is on the client side. We started a small research project to find the right technology and looked into Angular, Ember and React.
&lt;/p&gt;

&lt;p&gt;React was definitely the one that did enlighten us the most. Its mental model is really simple, it has a clearly defined scope and it is convenient to write.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-drove-you-to-develop-mobservable-why-not-to-just-stick-with-flux-&quot; id=&quot;what-drove-you-to-develop-mobservable-why-not-to-just-stick-with-flux-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What drove you to develop Mobservable? Why not to just stick with Flux?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-drove-you-to-develop-mobservable-why-not-to-just-stick-with-flux-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Performance and code simplicity are both very important values in our project. Performance because we have to draw hundreds of different, moving components at 50fps. Code simplicity because we have about 400 different domain concepts to cover, so all our components should be really DRY. An always-re-render-everything approach results in very simple code. But it doesn&amp;#39;t cut it in terms of performance.&lt;/p&gt;
&lt;p&gt;With most Flux implementations, it really seems that to achieve performance you have to give up code simplicity. Immutable data is often presented as the way to go here. Yet it results in verbose controller (store) functions and forces you to do reference management yourself.&lt;/p&gt;
&lt;p&gt;With mutable data structures, it is trivial to guarantee that there is only one version of a certain domain object in memory. So you never have to worry whether you leaked an old reference. With immutable data, pointer equality guarantees structural equality. Which is nice in terms of optimizations and history. Yet with mutable data, pointer equality means that you are looking at conceptually the same (and latest) thing.&lt;/p&gt;
&lt;p&gt;So our goal for Mobservable is: Be able to write components that look like they are always fully rendered. Without needing nifty things like cursors or store subscriptions. To achieve DRY: the render function is the dependency tree, and nothing else. For our model and controller code we wanted to be able to write vanilla JS code as much as possible. Be able to use the mutable arrays and objects, cyclic data-structures and classes. I think Mobservable achieves these goals.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#mobservable-can-work-with-flux&quot; id=&quot;mobservable-can-work-with-flux&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Mobservable can work &lt;strong&gt;with&lt;/strong&gt; Flux&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#mobservable-can-work-with-flux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is actually funny that you present Mobservable as an alternative to Flux. Mobservable can be combined with most Flux implementations. But I heard indeed from several people that they dropped Flux after starting to use Mobservable in their project.&lt;/p&gt;
&lt;p&gt;I think the issue with Flux is that it is very obtrusive to your code base. If you use React and Flux together, it impacts your whole codebase. While just React nicely separates the concerns of view and &amp;#39;the rest&amp;#39;. With Flux frameworks you go all-in. That introduces new problems like: &amp;#39;how do I do async actions&amp;#39; and &amp;#39;my actions need to go through the stores in a certain order&amp;#39;.&lt;/p&gt;
&lt;p&gt;That makes me wonder: Did you have these questions when building vanilla JavaScript applications? What do you get in return from Flux? I think most things offered by Flux can also be achieved by disciplined programming. Stuff like uni-directional flow and making it clear where your state lives.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#on-frameworks-vs-libraries&quot; id=&quot;on-frameworks-vs-libraries&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;On frameworks vs. libraries&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#on-frameworks-vs-libraries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;At Mendix we are pretty reluctant to use all-in frameworks. The first two years they serve you really well. But the third year they cannot longer keep up the pace with new technologies. The fourth year you spent refactoring just be able to adopt new technologies.&lt;/p&gt;
&lt;p&gt;We have learned from that, so Mobservable tries to be as unobtrusive as possible. Less obtrusive than frameworks that use immutables, cursors or reactive streams. So that you have a great deal of flexibility in how you structure your controller, view and model code (or actions and stores).&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-are-your-next-steps-how-do-you-plan-to-develop-mobservable-further-&quot; id=&quot;what-are-your-next-steps-how-do-you-plan-to-develop-mobservable-further-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What are your next steps? How do you plan to develop Mobservable further?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-are-your-next-steps-how-do-you-plan-to-develop-mobservable-further-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mobservable is all about updating views on your data automatically. People often interpret views as &amp;#39;user interface&amp;#39; and this plays a central role indeed in the React integration. But reactive data is really convenient for backend integration as well.&lt;/p&gt;
&lt;p&gt;At our project we do not only use Mobservable to update the user interface, but also to create a changelog that is sent to the backend server. Both are just views on the same data. I hope to get this idea more clear and to find some nice convenience methods that hints users in this direction.&lt;/p&gt;
&lt;p&gt;Soon, Mobservable will include a way to visualize all the relations between state and views. This will provide great insight in the actual flow of state through your application.&lt;/p&gt;
&lt;p&gt;And maybe I should write some Flux thingy around Mobservable and React. Because either people seem to think you need to Flux in order to properly React. Or they just love to be guided in how to setup each part of their application.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot; id=&quot;what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What does the future look like for React? Can you see any particular trends?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-does-the-future-look-like-for-react-can-you-see-any-particular-trends-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I think React has a brighter future than Angular. Simply because you aren&amp;#39;t stuck with a full fledged framework that you have to obey, or it will work against you. But React has to keep an ecosystem that prefers composition of micro libraries over all-in-one solutions.&lt;/p&gt;
&lt;p&gt;This is also the reason that small editors like Sublime and Atom in combination with standalone build tools like Grunt and Gulp are now more popular than feature creeped IDEs (I think, I don&amp;#39;t have any numbers on that).&lt;/p&gt;
&lt;p&gt;No framework lives forever. So if you want to make sure your software outlives your frameworks, you have to be able to replace your libraries one by one. One day you will wake up to discover that browsers are fast enough to re-calculate your whole application on each state change. Then you just remove Mobservable and everything will work just the same as the day before without a major refactoring.&lt;/p&gt;
&lt;p&gt;I&amp;#39;m very interested to see what Relay will do in this regard. Because from a bird&amp;#39;s eye view it seems to increase the coupling between view, controller and backend. Making it much harder to replace any of these parts.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#who-should-i-interview-next-&quot; id=&quot;who-should-i-interview-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Who should I interview next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#who-should-i-interview-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Dan Abramov, his &lt;a href=&quot;https://github.com/gaearon/redux&quot;&gt;redux&lt;/a&gt; is the only &amp;#39;Flux implementation&amp;#39; I could see myself using. It is not unobtrusive if you are coming from the mutable world, but the mental model of redux is beautiful and the dev tools are fun. I can imagine it works really well in (at least) medium sized applications.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for the interview Michel! It was certainly enlightening. We ported the book &lt;a href=&quot;https://github.com/survivejs/mobservable-demo&quot;&gt;Notes and Kanban examples to Mobservable&lt;/a&gt;. Check out the source to see how this worked out. Compared to the original I was definitely positively surprised. Mobservable seems like a good fit for these problems. You can play around with Mobservable online by taking the &lt;a href=&quot;https://mweststrate.github.io/mobservable/getting-started.html&quot;&gt;five minute, interactive introduction to Mobservable + React&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Michel goes into more detail at &lt;a href=&quot;https://www.mendix.com/tech-blog/making-react-reactive-pursuit-high-performing-easily-maintainable-react-apps/&quot;&gt;his post about making React reactive&lt;/a&gt;. So if this article piqued your interest that might be a worthwhile read. Of course you can just hop into the &lt;a href=&quot;https://github.com/mweststrate/react-mobservable-boilerplate&quot;&gt;mobservable boilerplate&lt;/a&gt; and proceed from there.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v1.7</title><id >asurvivejswebpackandreactv172015-08-16t00:00:00+03:00</id><link href="http://survivejs.com/blog/survivejs-17"></link><updated >2015-08-16T00:00:00+03:00</updated><content type="html">&lt;p&gt;I skipped doing a public post for &lt;code&gt;v1.6&lt;/code&gt; as I was too tired (berry season is taxing). Now I&amp;#39;m going to give you release notes for both &lt;code&gt;v1.6&lt;/code&gt; and &lt;code&gt;v1.7&lt;/code&gt; at once. I have also some news of the future plans. So stay tuned.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#development-model-changes&quot; id=&quot;development-model-changes&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Development Model Changes&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#development-model-changes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;#39;ve moved to a staged development model. Now I maintain &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;dev&lt;/code&gt; branches. &lt;code&gt;master&lt;/code&gt; contains the current stable release. All development happens at &lt;code&gt;dev&lt;/code&gt;. This way the code examples stay in sync with the book and the site. Less frustration and a better book for everyone. If you have PRs in mind, please make them against &lt;code&gt;dev&lt;/code&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-v1-6-&quot; id=&quot;book-improvements-v1-6-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;v1.6&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-v1-6-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In total 63 commits went to &lt;code&gt;v1.6&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some typo fixes were made. A lot more follow in &lt;code&gt;v1.7&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;webpack-dev-server&lt;/code&gt; configuration was pushed to &lt;code&gt;webpack.config.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Noted that &lt;code&gt;webpack.config.babel.js&lt;/code&gt; works. I&amp;#39;ve expanded on this at &lt;code&gt;v1.7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A lot of effort went into making &lt;em&gt;Implementing a Basic Note Application&lt;/em&gt; easier to approach&lt;/li&gt;
&lt;li&gt;Dropped custom &lt;code&gt;findIndex&lt;/code&gt;. In &lt;code&gt;v1.7&lt;/code&gt; I went further and now it uses &lt;a href=&quot;https://www.npmjs.com/package/array.prototype.findindex&quot;&gt;array.prototype.findindex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added imagery to &lt;em&gt;React and Flux&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Mentioned that &lt;code&gt;-S&lt;/code&gt; and &lt;code&gt;-D&lt;/code&gt; map to &lt;code&gt;npm i --save&lt;/code&gt; and &lt;code&gt;npm i --save-dev&lt;/code&gt;. This is just for you keyboard jockeys out there.&lt;/li&gt;
&lt;li&gt;Added the book subtitle to the cover. It looked strange without.&lt;/li&gt;
&lt;li&gt;Formatted all &lt;code&gt;npm i&lt;/code&gt; parts so that they stand out better. The web version uses special formatting reminiscent of a real terminal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.5.0...v1.6.0&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements-v1-7-&quot; id=&quot;book-improvements-v1-7-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements - &lt;code&gt;v1.7&lt;/code&gt;&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements-v1-7-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;108 commits went to &lt;code&gt;v1.7&lt;/code&gt;. So based on numbers it was busier. Especially the early part of the week was good. After that it was all berries and mushrooms for me. It&amp;#39;s the season after all and Winter is coming.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A massive amount of typo and grammar fixes were made in this iteration. I tried my luck with Fiverr and it paid off seriously. Thank you Ava and Nancy! There might be some left still but we squashed quite a few. I also ran the content through &lt;a href=&quot;http://www.hemingwayapp.com/&quot;&gt;Hemingway&lt;/a&gt; to simplify sentence structures where needed.&lt;/li&gt;
&lt;li&gt;I managed to make &lt;em&gt;webpack.config.js&lt;/em&gt; &lt;code&gt;TARGET&lt;/code&gt; selection cross-platform. Now the configuration relies on &lt;code&gt;process.env.npm_lifecycle_event&lt;/code&gt;. npm sets that during execution and we can rely on that. Thanks Hector for pointing me to the right direction!&lt;/li&gt;
&lt;li&gt;Clarified point about &lt;code&gt;eval&lt;/code&gt;. As it happens Webpack provides multiple &lt;a href=&quot;https://webpack.github.io/docs/configuration.html#devtool&quot;&gt;devtool&lt;/a&gt; options. I suggest &lt;code&gt;eval-source-map&lt;/code&gt; for development in small projects. You can try faster, lower quality options with bigger projects.&lt;/li&gt;
&lt;li&gt;Noted that it&amp;#39;s possible to exit Node.js repl using &lt;code&gt;CTRL-D&lt;/code&gt; instead of &lt;code&gt;CTRL-C&lt;/code&gt;. Thanks to Ahmed for pointing this out!&lt;/li&gt;
&lt;li&gt;Improved Kanban project naming (consistent with CRUD) overall. Now it should read a little better. I also pushed reference related logic to a store method. It&amp;#39;s nicer but still a lot of code considering what it actually does. As long as we operate through indices like this, there&amp;#39;s no neat way around it.&lt;/li&gt;
&lt;li&gt;Showed how to set up isomorphic rendering for the Kanban application. It&amp;#39;s not that useful in this case. I do hope you get the idea as it&amp;#39;s powerful.&lt;/li&gt;
&lt;li&gt;Dropped deployment chapter. As I managed to explain isomorphic rendering earlier in the previous point, the deployment chapter became redundant. Good riddance.&lt;/li&gt;
&lt;li&gt;Added JSX suffixes to imports. As the project gets run through Node.js context when rendering in an isomorphic way, I had to add JSX suffixes. Perhaps someone knows a better solution but this made sense at the time.&lt;/li&gt;
&lt;li&gt;Pushed id creation inside stores. The reasoning for this is that if you are dealing with a real back-end, that&amp;#39;s the way it goes. You should &lt;em&gt;never&lt;/em&gt; have to think about ids at view level so it&amp;#39;s better to do it right. Besides now gluing a real back-end with the project is a notch easier.&lt;/li&gt;
&lt;li&gt;Reworked the early part of the Flux chapter with my editor (thanks Jesús!). The chapter can likely still be improved but it&amp;#39;s better now. It&amp;#39;s a little long to my tastes but on the other hand it covers a lot of ground.&lt;/li&gt;
&lt;li&gt;Ended up using term &lt;em&gt;Webpack&lt;/em&gt; everywhere. I know &lt;em&gt;webpack&lt;/em&gt; is the correct name but I went for consistency here. So consider that &amp;quot;Webpack&amp;quot; == &amp;quot;webpack&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wanted to get some screenshots done for this iteration too and work on a Leanpub exclusive chapter. This work will go to the next iteration. The good news are that now there&amp;#39;s far less to worry about so I&amp;#39;m more likely to get these tasks done.&lt;/p&gt;
&lt;p&gt;You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.6.0...v1.7.0&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Fail to plan, plan to fail.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It seems to me the book is on a good track and we&amp;#39;re making steady progress. New people are finding the book and even buying it. And the feedback has been good. I know the book isn&amp;#39;t everyone&amp;#39;s piece of cake. But I&amp;#39;m okay with that. By trying to please everyone you please none.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#going-amazon&quot; id=&quot;going-amazon&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Going Amazon&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#going-amazon&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The next major goal for me is to get the book to Amazon, iBooks and such through &lt;a href=&quot;https://www.lulu.com/&quot;&gt;Lulu&lt;/a&gt;. This might also provide us a paper version if there&amp;#39;s demand. Enhanced distribution could go a long way in improving sales. After all I&amp;#39;ll need to make this work financially in order to be able to write more.&lt;/p&gt;
&lt;p&gt;For this to happen we&amp;#39;ll need to lock the scope of the book. This is due to ISBN requirements. You can make small changes to a published book but nowhere on the level what we&amp;#39;re doing right now.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#but-there-s-more-technology-to-cover&quot; id=&quot;but-there-s-more-technology-to-cover&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;But There&amp;#39;s More Technology to Cover&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#but-there-s-more-technology-to-cover&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I know interesting new technology, such as &lt;a href=&quot;http://redux.js.org/&quot;&gt;redux&lt;/a&gt;, keeps on coming out all the time. The problem is that if I keep on changing the newest cool thing I will never get a stable version out. It is far better idea to lock the scope and cover the interesting things through the blog.&lt;/p&gt;
&lt;p&gt;This gives me a more flexible way to try out various ideas before committing them to a book. It also helps to give the current work some visibility it sorely needs.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#the-current-plan&quot; id=&quot;the-current-plan&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;The Current Plan&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#the-current-plan&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a result the current plan is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Continue iterating on the current content based on feedback. No major changes to the chapter structure anymore, just minor tweaks to make the book more approachable.&lt;/li&gt;
&lt;li&gt;Write chapters that are unique for the commercial edition. This improves the value proposition and actually might encourage more people to buy the book. After all, that enables more content! I expect at least three chapters.&lt;/li&gt;
&lt;li&gt;Expand this blog with supporting topics. I have a nice series of posts planned up and I welcome ideas. I want more people to discover the book and this could go a long way towards that.&lt;/li&gt;
&lt;li&gt;Figure out how Hacker News works. I did try &lt;em&gt;Show HN&lt;/em&gt; but received zero response. Perhaps I&amp;#39;ll have better luck next time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So towards the Amazon release I go. It might be interesting to try running some sort of campaign to eventually open the unique content. For now I will need to let the commercial version to have some leverage over the community edition. Perhaps there&amp;#39;s a way to align these two goals (community content, making a living) but as for now this might be the way.&lt;/p&gt;
&lt;p&gt;I will be able to tell a lot more after a wider scale release. Given I&amp;#39;m a first time author I&amp;#39;m still learning the ropes here and no doubt making a lot of mistakes in the process. I have other book ideas but I&amp;#39;ll have to get this first one out before I can even think about those. Perhaps within a year or so I can do an expanded second edition. Any sooner and I&amp;#39;m pissing off my first edition readers. :)&lt;/p&gt;
&lt;p&gt;I hope you enjoy this release. As usual &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;feedback&lt;/a&gt; and pull requests are welcome. It&amp;#39;s interesting to write a book this way. That&amp;#39;s for sure.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >A Quick Look at React Books</title><id >aaquicklookatreactbooks2015-08-01t00:00:00+03:00</id><link href="http://survivejs.com/blog/react-books"></link><updated >2015-08-01T00:00:00+03:00</updated><content type="html">&lt;p&gt;As an author I like to keep an eye on the market. You have to know who you are against after all! It&amp;#39;s not an understatement to say could that it&amp;#39;s about to get swarmed with books. In this post I&amp;#39;ll go through the ones I could find and provide you some intel on them. Perhaps you would like to get a couple of books to your collection!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#free-books&quot; id=&quot;free-books&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Free Books&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#free-books&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even though there are &lt;a href=&quot;https://github.com/enaqx/awesome-react&quot;&gt;a lot of freely available React resources&lt;/a&gt; there aren&amp;#39;t too many free books yet.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#survivejs-webpack-and-react&quot; id=&quot;survivejs-webpack-and-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;SurviveJS - Webpack and React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#survivejs-webpack-and-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://survivejs.com/&quot;&gt;SurviveJS - Webpack and React&lt;/a&gt; is the most comprehensive freely available book I&amp;#39;m aware of. It will show you how to set up a &lt;a href=&quot;https://webpack.github.io/&quot;&gt;webpack&lt;/a&gt; based development environment and then develop a simple &lt;a href=&quot;https://en.wikipedia.org/wiki/Kanban&quot;&gt;Kanban&lt;/a&gt; based on it. More theoretical topics, such as linting, styling and library authoring are discussed as well. At the time of writing it has over 250 pages and more content is planned based on demand.&lt;/p&gt;
&lt;p&gt;The book is open to external contributions and in fact a lot of people have contributed feedback and fixes. From author&amp;#39;s point of view this has been just awesome!&lt;/p&gt;
&lt;p&gt;If you like the book and want to support the effort, &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;buying a digital copy&lt;/a&gt; would most likely make the author&amp;#39;s day. Suggested price without VAT is $19.99. Pay based on value you perceive as Leanpub books allow.&lt;/p&gt;
&lt;p&gt;There&amp;#39;s also &lt;a href=&quot;http://www.amazon.com/SurviveJS-Webpack-React-apprentice-master/dp/152391050X&quot;&gt;a paper version available through Amazon&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-webpack-cookbook&quot; id=&quot;react-webpack-cookbook&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React Webpack Cookbook&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-webpack-cookbook&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot;&gt;React Webpack Cookbook&lt;/a&gt; is a little guide I developed with &lt;a href=&quot;http://www.christianalfoni.com/&quot;&gt;Christian Alfoni&lt;/a&gt;. The eventual plan is to polish the content and host the improved version here with a similar support model.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#hacking-with-react&quot; id=&quot;hacking-with-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Hacking with React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#hacking-with-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hackingwithreact.com/&quot;&gt;Hacking with React&lt;/a&gt; by Paul Hudson delves straight into React. At the time of writing it has 123 pages and it uses a no-nonsense approach. In some ways it&amp;#39;s the anti-thesis to SurviveJS, but there&amp;#39;s room for different kind of offerings. Even though the book is free to read online, the author offers it through &lt;a href=&quot;https://leanpub.com/hackingwithreact/&quot;&gt;Leanpub&lt;/a&gt; as well. The minimum price without VAT is $10.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-native-animation-book&quot; id=&quot;react-native-animation-book&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React Native Animation Book&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-native-animation-book&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://browniefed.com/react-native-animation-book/&quot;&gt;React Native Animation Book&lt;/a&gt; by &lt;a href=&quot;http://browniefed.com/&quot;&gt;Jason Brown&lt;/a&gt; explains how to deal with animation in React Native. You get all relevant bits in a single place. That&amp;#39;s it really.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#commercial-books&quot; id=&quot;commercial-books&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Commercial Books&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#commercial-books&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The commercial side of React books is about to go wild. &lt;strong&gt;Developing a React Edge&lt;/strong&gt; was likely the first book on the market. Since then a few others have followed. The challenge for authors is that as React moves forward quite fast. Books will require constant maintenance effort to stay up to date.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#developing-a-react-edge-the-javascript-library-for-user-interfaces&quot; id=&quot;developing-a-react-edge-the-javascript-library-for-user-interfaces&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Developing a React Edge: The JavaScript Library for User Interfaces&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#developing-a-react-edge-the-javascript-library-for-user-interfaces&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9781939902122.do&quot;&gt;Developing a React Edge&lt;/a&gt; by Frankie Bagnardi, Jonathan Beebe, Richard Feldman, Tom Hallett, Simon Højberg and Karl Mikkelsen was published by Bleeding Edge Press at November 2014. At 234 pages it covers a wide range of React related issues starting from the very basics and including aspects such performance tuning, server side rendering and testing.&lt;/p&gt;
&lt;p&gt;As I haven&amp;#39;t bought the book it is hard for me to evaluate how up to date it is. The book has both digital and paperback versions available. At Amazon the price is around $30 for both VAT included. At O&amp;#39;Reilly digital edition costs $22.99.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-d3-js&quot; id=&quot;react-d3-js&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React+d3.js&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-d3-js&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://swizec.com/reactd3js/&quot;&gt;React+d3.js&lt;/a&gt; by &lt;a href=&quot;http://swizec.com/&quot;&gt;Swizec Teller&lt;/a&gt; is a focused book at 63 pages. At &lt;a href=&quot;https://leanpub.com/reactd3js&quot;&gt;Leanpub&lt;/a&gt; it&amp;#39;s minimum price is $9 while suggested on is at $19 VAT excluded. There are expanded packages available that provide more material such as screencast and example code. In the book you will build a small data visualization project based on the technologies.&lt;/p&gt;
&lt;p&gt;If you want a quick read that&amp;#39;s straight to the point, this could be it. It&amp;#39;s nowhere broad as &lt;strong&gt;Developing a React Edge&lt;/strong&gt; for instance but if you just want to visualize data, this might work.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-beginner-s-guide&quot; id=&quot;react-beginner-s-guide&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React - Beginner&amp;#39;s Guide&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-beginner-s-guide&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/react-beginner-guide&quot;&gt;React - Beginner&amp;#39;s Guide&lt;/a&gt; by Daniel Schmitz and Daniel Pedrinha Georgii is a small, focused book. Its minimum price is $5 VAT excluded.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#effective-react&quot; id=&quot;effective-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Effective React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#effective-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/effective-react&quot;&gt;Effective React&lt;/a&gt; by Ian Chursky covers the basic tools you need to get started with React. Also ECMAScript 6 is covered. Published through Leanpub, it&amp;#39;s minimum price has been set to $16.99 (no VAT).&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#descubre-react&quot; id=&quot;descubre-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Descubre React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#descubre-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/descubre-react&quot;&gt;Descubre React&lt;/a&gt; by &lt;a href=&quot;http://soyjavi.com/&quot;&gt;Javi Jiménez&lt;/a&gt; is a Spanish introduction to React. It has 83 pages and its minimum price is $12.49 VAT excluded.&lt;/p&gt;
&lt;p&gt;If you want a Spanish introduction to React, here&amp;#39;s your only option at the moment.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#thinking-in-react&quot; id=&quot;thinking-in-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Thinking in React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#thinking-in-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.thinkinginreact.xyz/&quot;&gt;Thinking in React&lt;/a&gt; by K-2052 is a work in progress introduction to React. At the moment it&amp;#39;s available digitally. The price starts from $10 and rises by a dollar each time a new chapter is released.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#pengenalan-reactjs&quot; id=&quot;pengenalan-reactjs&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Pengenalan ReactJS&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#pengenalan-reactjs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/pengenalan-reactjs&quot;&gt;Pengenalan ReactJS&lt;/a&gt; by Donny Stark is an Indonesian introduction to React. It will be published through Leanpub. At the time of writing it has 34 pages. No minimum price has been set yet.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#rails-meets-react-js&quot; id=&quot;rails-meets-react-js&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Rails Meets React.js&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#rails-meets-react-js&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.arkency.com/rails-react/&quot;&gt;Rails Meets React.js&lt;/a&gt; by Marcin Grzywaczewski and &lt;a href=&quot;http://robert.pankowecki.pl/&quot;&gt;Robert Pankowecki&lt;/a&gt; explains how to get started with React in Ruby on Rails environment. The book is available through Arkency for $49 and has over 150 pages.&lt;/p&gt;
&lt;p&gt;Based on table of contents the book shows you how to get started from scratch, how to set up an effective asset pipeline and of course how to integrate with Rails. The book covers also concepts such as testing, forms and i18n. Note that React portions have been written in CoffeeScript.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-by-example&quot; id=&quot;react-by-example&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React by Example&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-by-example&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://reactkungfu.com/react-by-example/&quot;&gt;React by Example&lt;/a&gt; by Arkency explains React through numerous examples. The book shows how to build a password strength meter, credit card input and Twitter posting box for instance. The book is available for $49 and has over 130 pages.&lt;/p&gt;
&lt;p&gt;If you want to learn React through a series of specific examples this might be the way to go. Even though the book is in early access it has sold already over 200 copies.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#easy-react&quot; id=&quot;easy-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Easy React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#easy-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://easyreactbook.com/&quot;&gt;Easy React&lt;/a&gt; by &lt;a href=&quot;http://www.wjgilmore.com/&quot;&gt;W. Jason Gilmore&lt;/a&gt; is available through &lt;a href=&quot;https://leanpub.com/easyreact&quot;&gt;Leanpub&lt;/a&gt;. The book is currently in beta and the price starts from $14.99 without VAT. At the time of writing it has 83 pages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Easy React&lt;/strong&gt; is a project based book and focuses on an application known as &lt;em&gt;VocabGiant&lt;/em&gt;, a language learning tool. The book discusses a wide range of topics ranging from setting up a development environment, developing the app (Flux included), developing a backend (REST + Express + MongoDB) and React Native. So by the looks of it this should be a great book for a full stack developer!&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-under-the-hood&quot; id=&quot;react-under-the-hood&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React Under the Hood&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-under-the-hood&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/reactunderthehood&quot;&gt;React Under the Hood&lt;/a&gt; by &lt;a href=&quot;http://spaces-vs-tabs.com/&quot;&gt;Freddy Rangel&lt;/a&gt; is available through Leanpub. The minimum price of the book is $9.99 without VAT. At the time of writing it has around 80 pages of content. As per title, the book delves into the technical foundations of React.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#reactjs-cookbook&quot; id=&quot;reactjs-cookbook&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;ReactJS Cookbook&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#reactjs-cookbook&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/web-development/reactjs-cookbook&quot;&gt;ReactJS Cookbook&lt;/a&gt; by Johannes Stein is available through Packt exclusively at the moment. It is on preorder for $39.68 and is due November.&lt;/p&gt;
&lt;p&gt;As many books discussed by now, &lt;strong&gt;ReactJS Cookbook&lt;/strong&gt; shows you how React components work and goes into topics such as animation, isomorphism, ES6 and testing. It is expected to have 301 pages.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-js-essentials&quot; id=&quot;react-js-essentials&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React.js Essentials&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-js-essentials&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/web-development/reactjs-essentials&quot;&gt;React.js Essentials&lt;/a&gt; by &lt;a href=&quot;http://artemij.com/&quot;&gt;Artemij Fedosejev&lt;/a&gt; is available through Packt and Amazon. At Packt preorder price of the digital version is $23.80 while at &lt;a href=&quot;http://www.amazon.com/React-js-Essentials-Artemij-Fedosejev-ebook/dp/B00YSILZRW&quot;&gt;Amazon&lt;/a&gt; Kindle version is available for $29.75. According to Packt site the book should been available in July but Amazon has expected date at January 2016.&lt;/p&gt;
&lt;p&gt;The book is expected to have 194 pages. It covers basics of React and goes into architecture (Flux). There is also information about testing (Jest). No official table of contents is available as of yet.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#introduction-to-react&quot; id=&quot;introduction-to-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Introduction to React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#introduction-to-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.apress.com/9781484212462&quot;&gt;Introduction to React&lt;/a&gt; by &lt;a href=&quot;http://cgack.blogspot.com&quot;&gt;Cory Gackenheimer&lt;/a&gt; is available through Apress and Amazon. At Apress digital edition is available for $17.99 while print costs $24.99. At Amazon paperback costs $19.68. The book is expected to be available at September.&lt;/p&gt;
&lt;p&gt;The planned length of the book is 170 pages and it will cover basics of React, Flux architecture and testing at least. There is also specific discussion about JSX.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#pro-react&quot; id=&quot;pro-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Pro React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#pro-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.apress.com/9781484212615&quot;&gt;Pro React&lt;/a&gt; by Cassio de Sousa Antonio is available through Apress and Amazon. At Apress digital edition is available for $27.99 while print costs $39.99. At Amazon the print costs the same. The book should be available at December.&lt;/p&gt;
&lt;p&gt;The book has 280 pages and covers a wide range of React related topics.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-up-running-building-web-applications&quot; id=&quot;react-up-running-building-web-applications&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React: Up &amp;amp; Running: Building Web Applications&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-up-running-building-web-applications&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920042266.do&quot;&gt;React: Up &amp;amp; Running: Building Web Applications&lt;/a&gt; by &lt;a href=&quot;http://www.phpied.com/&quot;&gt;Stoyan Stefanov&lt;/a&gt; is available through O&amp;#39;Reilly and Amazon. At O&amp;#39;Reilly digital early access version costs $33.99 while print goes for $39.99. At Amazon print is slightly cheaper at $37.99.&lt;/p&gt;
&lt;p&gt;Early chapters of the book are already available and according to Amazon the full book should be completed by December. The book will have around 250 pages.&lt;/p&gt;
&lt;p&gt;I probably don&amp;#39;t need to repeat myself here. Expect to learn basics of React and then some.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#master-react&quot; id=&quot;master-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Master React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#master-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://ludovf.net/reactbook/&quot;&gt;Master React&lt;/a&gt; by Ludovico Fischer doesn&amp;#39;t have a lot of information available yet. Digital version of the book is due Autumn and there is some early content at the site.&lt;/p&gt;
&lt;p&gt;By the looks of the book will go through a wide range of React related concepts. These include development tools, third party libraries, JSX and server-side React as with so many other books.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#mastering-react&quot; id=&quot;mastering-react&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Mastering React&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#mastering-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://pragprog.com/book/lfreact/mastering-react&quot;&gt;Mastering React&lt;/a&gt; by The Pragmatic Programmers doesn&amp;#39;t have a lot of information available. So far we know that it will have 250 pages and is due 10th of January, 2016.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-native-books&quot; id=&quot;react-native-books&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React Native Books&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-native-books&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There&amp;#39;s also an emerging category of React Native books and the first book has already been released and more are on their way.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#beginning-mobile-app-development-with-react-native&quot; id=&quot;beginning-mobile-app-development-with-react-native&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Beginning Mobile App Development with React Native&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#beginning-mobile-app-development-with-react-native&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://beginning-mobile-app-development-with-react-native.com/&quot;&gt;Beginning Mobile App Development with React Native&lt;/a&gt; by &lt;a href=&quot;http://manuel.kiessling.net/&quot;&gt;Manuel Kiessling&lt;/a&gt; is likely the first book on the market. It is available through &lt;a href=&quot;https://leanpub.com/beginning-mobile-app-development-with-react-native&quot;&gt;Leanpub&lt;/a&gt; for $29.99 (no VAT) and has 82 pages guiding you into the topic.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#learning-react-native&quot; id=&quot;learning-react-native&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Learning React Native&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#learning-react-native&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920041511.do&quot;&gt;Learning React Native&lt;/a&gt; by &lt;a href=&quot;http://blog.bonnieeisenman.com/&quot;&gt;Bonnie Eisenman&lt;/a&gt; is available through O&amp;#39;Reilly and Amazon. At O&amp;#39;Reilly digital early access version costs $33.99 while print goes for $39.99. At Amazon print is available for $32.59 and is expected to deliver at December. The book is around 200 pages long.&lt;/p&gt;
&lt;h3 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#react-quickly&quot; id=&quot;react-quickly&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;React Quickly&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#react-quickly&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/react-quickly&quot;&gt;React Quickly&lt;/a&gt; by &lt;a href=&quot;http://azat.co/&quot;&gt;Azat Mardan&lt;/a&gt;, published by Manning Publications, delves through React related topics quickly as the title promises. The early access version costs $31.99. If you want the paperback as well, expect to pay $39.99.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A lot of the React books have significant overlap. Their length ranges from very short (63 pages) up to quite long (301 pages). There&amp;#39;s also wide variance in pricing as a result. The cheapest goes for $5 while the most expensive costs $49. There are both self-published options and books backed by a publisher. It is hard to comment on the quality of the books as I haven&amp;#39;t read these.&lt;/p&gt;
&lt;p&gt;The situation is very interesting. It&amp;#39;s going to be difficult for a book to stand out content-wise. The biggest differentiating factor I can see is actually openness of the book. My book is a notable exception to the rule. It&amp;#39;s going to be interesting to see if it makes any difference compared to the competition and publisher backed options.&lt;/p&gt;
&lt;p&gt;Let me know if I missed some awesome book at the comments and I&amp;#39;ll add it to the listing.&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - Webpack and React - v1.5</title><id >asurvivejswebpackandreactv152015-07-31t00:00:00+03:00</id><link href="http://survivejs.com/blog/survivejs-15"></link><updated >2015-07-31T00:00:00+03:00</updated><content type="html">&lt;p&gt;Compared to the previous tagged release (v1.1.0, 10th of July) this new one (v1.5.0) is a monster. 274 commits went into it and nine contributors took part. Of course it was up to me to do most of the work. That said it is always amazing to get external contributions. It always makes my day when I get one.&lt;/p&gt;
&lt;p&gt;I have to give my biggest thanks to &lt;a href=&quot;https://github.com/Foxandxss&quot;&gt;Jesús Rodríguez Rodríguez&lt;/a&gt;, my new official editor! It&amp;#39;s not understatement to say that he motivated most of the changes you see in the current revision.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#book-improvements&quot; id=&quot;book-improvements&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Book Improvements&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#book-improvements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The book has been improved in various important ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The early part of the book gets faster to the interesting parts (i.e. React). I removed some of the fluff (Flow, redundant &lt;code&gt;index.html&lt;/code&gt; etc.) and eliminated the old &lt;code&gt;Getting Started&lt;/code&gt; chapter. Now you jump straight to &lt;a href=&quot;/webpack_react/developing_with_webpack&quot;&gt;developing with webpack&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;There&amp;#39;s a new chapter about &lt;a href=&quot;/webpack_react/building_kanban&quot;&gt;building the Kanban project&lt;/a&gt;. I focus on production related concerns there solely and discuss various related techniques. I believe some of those might be useful even if you don&amp;#39;t care about the project itself.&lt;/li&gt;
&lt;li&gt;The architecture of the Kanban application has been revamped to be singleton based. This is more faithful to the way &lt;a href=&quot;https://facebook.github.io/flux/docs/overview.html&quot;&gt;Flux architecture&lt;/a&gt; has been designed to use. There are some parts of code that aren&amp;#39;t particularly beautiful and there&amp;#39;s likely some room for improvement.&lt;/li&gt;
&lt;li&gt;More insightful explanations. Instead of dropping some code and waiting you to decipher it I&amp;#39;ve moved to &lt;strong&gt;explain&lt;/strong&gt;, &lt;strong&gt;show code&lt;/strong&gt;, &lt;strong&gt;what happened&lt;/strong&gt; kind of model that should be hopefully easier to follow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition there are hundreds of other fixes. But you know me, I don&amp;#39;t like to ramble too much. You can see GitHub for &lt;a href=&quot;https://github.com/survivejs/webpack_react/compare/v1.1.0...v1.5.0&quot;&gt;all changes&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#known-issues&quot; id=&quot;known-issues&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Known Issues&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#known-issues&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The portions dealing with Alt don&amp;#39;t support hot loading yet. I will have to craft a pull request to fix &lt;a href=&quot;https://github.com/goatslacker/alt/issues/408&quot;&gt;a hot loading issue&lt;/a&gt;. Doing that should improve your experience a bit. So be prepared to refresh the old fashioned way for now.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I will prioritize my work depending on the feedback this release receives. I know some of the current content can be pushed further. For instance deployment chapter could use some TLC. On the other hand it would be a good idea to start serving my paying clients (i.e. Leanpub readers) better.&lt;/p&gt;
&lt;p&gt;Given I want to provide the guys that support me a little extra something I&amp;#39;ve thought of making &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues?q=is%3Aopen+is%3Aissue+label%3A%22bonus+chapter%22&quot;&gt;bonus chapters&lt;/a&gt; available on early access through Leanpub. The chapters would become available to public as certain conditions are met.&lt;/p&gt;
&lt;p&gt;In order to encourage you to encourage me I could tie it to amount of readers. There are two hundred readers right now. I could release a new chapter as another two hundred are gained for instance until I run out of chapters to write. I believe this would be a fair way to deal with it.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope you enjoy this release. There&amp;#39;s a lot of content to go through. As usual &lt;a href=&quot;https://github.com/survivejs/webpack_react/issues&quot;&gt;feedback&lt;/a&gt; and pull requests are welcome. I hope you enjoy the improved version of the book.&lt;/p&gt;
&lt;p&gt;Remember that you can support my work by &lt;a href=&quot;https://leanpub.com/survivejs_webpack_react&quot;&gt;purchasing the book at Leanpub&lt;/a&gt;. Every little bit counts and allows me to keep it up.&lt;/p&gt;
</content></entry><entry ><title >Web Design is Scrappy</title><id >awebdesignisscrappy2015-07-17t00:00:00+03:00</id><link href="http://survivejs.com/blog/web-design-is-scrappy"></link><updated >2015-07-17T00:00:00+03:00</updated><content type="html">&lt;p&gt;If you had to describe my approach to web design in one word the word would be scrappy. I rather get something to work fast than agonize on details. It is going to take a fair amount of iteration no matter what. This site is a good example of scrappy design.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#getting-scrappy&quot; id=&quot;getting-scrappy&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Getting Scrappy&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#getting-scrappy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I started from a base design created by &lt;a href=&quot;http://eldh.co/&quot;&gt;Andreas Eldh&lt;/a&gt;. We have developed a static site generator known as &lt;a href=&quot;https://antwarjs.github.io/&quot;&gt;Antwar&lt;/a&gt; together. Incidentally it is based upon webpack and React. And Antwar itself is based on an &lt;a href=&quot;http://braddenver.com/blog/2015/react-static-site.html&quot;&gt;experiment by Brad Denver&lt;/a&gt;. Feeling scrappy yet?&lt;/p&gt;
&lt;p&gt;As nothing is harder than evaluating your own work I looked actively for feedback during the development process. I had to &lt;a href=&quot;https://antwarjs.github.io/blog/antwar-050/&quot;&gt;develop Antwar further&lt;/a&gt; in order to reach my goals. Besides the technical part I also had to make sure the content is accessible and that there&amp;#39;s marketing copy in place.&lt;/p&gt;
&lt;p&gt;The design is scrappy in sense that I integrated ideas from various sources. Sometimes I might realize something randomly and will just add it there. A good example is the recent addition of commenting per chapter. I understood it might be a nice way to get some extra feedback on content and help me to see potential problems clearer. And given it was fast to add, it made perfect sense.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#services-to-support-scrappy-design&quot; id=&quot;services-to-support-scrappy-design&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Services to Support Scrappy Design&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#services-to-support-scrappy-design&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Besides asking for feedback from friends and sometimes total strangers I used a couple of services with varying results. Out of the services &lt;a href=&quot;http://www.criticue.com/&quot;&gt;criticue&lt;/a&gt; worked the best for me. Often it&amp;#39;s the negative feedback that helps you the most. Criticue helped me to prune out the worst mishaps.&lt;/p&gt;
&lt;p&gt;As I had good experiences of &lt;a href=&quot;http://feedbackroulette.com/&quot;&gt;Feedback roulette&lt;/a&gt; in the past I set it up too. Unfortunately I have yet to receive single useful round of feedback even though I have a single credit for testing.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fivesecondtest.com/&quot;&gt;Five Second Test&lt;/a&gt; was useful for getting answers to specific design issues. I didn&amp;#39;t use it a lot, though, but I can see its value. The response times were adequate as well.&lt;/p&gt;
&lt;p&gt;All of these services allow you to earn credits by providing feedback yourself. Even though this takes time it can be enlightening to see designs of other people and help them to improve. Perhaps over longer term you might develop a stronger intuition for design.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I believe the current design of the site is quite passable. It doesn&amp;#39;t remind me of the 90s too much at least. I&amp;#39;m sure it could be better in some ways but as they say you are blind to your own work. I have outlined some issues I&amp;#39;m aware of at the &lt;a href=&quot;https://github.com/survivejs/site/issues&quot;&gt;site issue tracker&lt;/a&gt;. If you have any ideas, please set up issues there for me to study or comment on this post.&lt;/p&gt;
&lt;p&gt;I would love to have more functionality on the site. Even though Disqus comments work I believe Medium style commenting system would work better for books. Unfortunately I haven&amp;#39;t been able to find a suitable 3rd party service for this purpose yet.&lt;/p&gt;
&lt;p&gt;It would be nice to have more interactivity. Web as a platform would allow that but of course it&amp;#39;s going to require a lot of work to pull off. That said if you are aiming for the maximum amount of awesomeness, go interactive.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-could-have-been-done-differently-&quot; id=&quot;what-could-have-been-done-differently-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Could Have Been Done Differently?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-could-have-been-done-differently-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I would have probably saved a great deal of time by going with some established solution such as &lt;a href=&quot;https://wordpress.com/&quot;&gt;WordPress&lt;/a&gt; or &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; supports Jekyll particularly well and I have even written a &lt;a href=&quot;http://yeswejekyll.com/&quot;&gt;scrappy guide for it&lt;/a&gt; so I know the topic. I&amp;#39;m also aware of the limitations of Jekyll. Developing Antwar gave me a good excuse to learn more about the topic.&lt;/p&gt;
&lt;p&gt;Whole site design could have been bought from elsewhere. Same goes for marketing copy, photography and such. In fact this given me a good excuse to work on these skills. That said it may be a good idea to use professional services in the future. After all they have spent years honing their skills and will be able to get better results faster.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope this brief post gave you some idea of why the site is the way it is. If you like the design or just want to study how it has been made, check out the &lt;a href=&quot;https://github.com/survivejs/site&quot;&gt;site repository&lt;/a&gt;. The source itself might be a little scrappy in parts but that&amp;#39;s to be expected. It&amp;#39;s a scrappy design after all!&lt;/p&gt;
&lt;p&gt;I suppose the nicest thing about working on a webpack and React stack is that it gives me a nice amount of flexibility. I can build layouts using React and author using Markdown. That&amp;#39;s the best out of both worlds. Antwar is still missing some of the functionality you might expect (pagination, tagging etc.) but it keeps on growing as I use it. No need to aim for perfection the first time around.&lt;/p&gt;
&lt;p&gt;I feel web design is scrappy by definition. It is hard to get everything right the first time around. It is a good idea to leave room for creativity and experimentation. I suppose taken further you would start running tests on your site and looking at the numbers. So far my approach has been guided by intuition and might not be the best when compared to data based approaches.&lt;/p&gt;
</content></entry><entry ><title >Reaching Towards the Next Level</title><id >areachingtowardsthenextlevel2015-07-15t00:00:00+03:00</id><link href="http://survivejs.com/blog/reaching-towards-the-next-level"></link><updated >2015-07-15T00:00:00+03:00</updated><content type="html">&lt;p&gt;In &lt;a href=&quot;../balance&quot;&gt;my previous post&lt;/a&gt; I discussed some of the difficulties of related to technical publishing. I also presented a possible solution, a mixed model that might make open publishing more feasible. The idea is that starting closed and asking for money beforehand you reward early adopters while decreasing the risk of the author. As the content gets opened eventually others can benefit from it. I know this goes against the common wisdoms of book publishing but it&amp;#39;s a model I would like to try.&lt;/p&gt;
&lt;p&gt;It has become apparent to me that if I put my weight behind it, I could grow this into a business that&amp;#39;s able to support me and perhaps a few others should I get so lucky. Even though Finland has its issues it isn&amp;#39;t a bad place to start a company. In fact there&amp;#39;s support for starting businesses that can help to cover starting costs up to 18 months. It will be enough to get past the beginning stage.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-would-a-viable-business-look-like-&quot; id=&quot;what-would-a-viable-business-look-like-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Would a Viable Business Look Like?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-would-a-viable-business-look-like-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In order to get by I would have to make around $1500 per month after taxes. That&amp;#39;s $50 per day. In terms of book sales that would mean five sales per day assuming a book costs $20 (half goes to side costs). It doesn&amp;#39;t sound so hard when put this way.&lt;/p&gt;
&lt;p&gt;Fortunately book sales aren&amp;#39;t the only towards a sustainable business. More specialized products can be built on top of the freely available content. In addition I&amp;#39;m open to consulting. In the end it comes down to finding the ways in which I can be most useful and provide most value.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#it-s-about-helping-other-developers&quot; id=&quot;it-s-about-helping-other-developers&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;It&amp;#39;s About Helping Other Developers&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#it-s-about-helping-other-developers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a developer myself I have known my share of pain. SurviveJS is about that. I want you to avoid some of that pain. If I can make someone&amp;#39;s life a little easier through SurviveJS I have done my job.&lt;/p&gt;
&lt;p&gt;Besides helping developers I would love to be able to help smoothen the way for other technical authors. Getting started is tough and anything you can do to make it less so is welcome. Leanpub helps in its own way but it isn&amp;#39;t nearly enough. There are just so many things to worry about. And should you fail at some critical aspect, you end up with a dud.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#next-steps&quot; id=&quot;next-steps&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Next Steps&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#next-steps&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My next major goal is to resolve the biggest remaining issues related to the book and get a release out on 31st. After that I&amp;#39;ll expand distribution to see if that makes any difference.&lt;/p&gt;
&lt;p&gt;I have a couple of older books in backburner waiting to be edited. One of them is &lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot;&gt;Webpack and React Cookbook&lt;/a&gt;. It deserves a refresh and an editing pass. As the content is already freely available that won&amp;#39;t change. Ebook will cost, though, and will hopefully provide some financial relief.&lt;/p&gt;
&lt;p&gt;Another, older effort known as &lt;a href=&quot;https://github.com/survivejs/js_tricks_and_tips&quot;&gt;JavaScript Tips and Tricks&lt;/a&gt;, will require a bigger refresh. It&amp;#39;s actually the original &amp;quot;SurviveJS&amp;quot; and the reason why I ended up with the name. The idea of this book is to go through a variety of JavaScript techniques to give you deeper insight to the language. It won&amp;#39;t be a long book. It&amp;#39;s more of a &amp;quot;oh, I can do that?&amp;quot; type of an affair.&lt;/p&gt;
&lt;p&gt;Over shorter term I want to establish little streams like these. After all every dollar counts at this point. The sooner I can reach my viability goal, the better. Over longer term I would love to grow the brand to help other technical authors. But before I can do that I need to help myself and figure out these things. Fortunately I won&amp;#39;t have to do that alone as community support has shown.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Becoming incorporated is both an exciting and a scary step. So far community response has been great so why not to push it and see if this can be turned into a real business? The numbers look realistic to me. In the worst case it won&amp;#39;t work out and I end up with a ton of references to use at a job interview. In the best case I&amp;#39;ll have a little business that will allow me to produce even more content and most importantly keep on helping.&lt;/p&gt;
</content></entry><entry ><title >Balancing Between Open and Closed Publishing</title><id >abalancingbetweenopenandclosedpublishing2015-07-14t00:00:00+03:00</id><link href="http://survivejs.com/blog/balance"></link><updated >2015-07-14T00:00:00+03:00</updated><content type="html">&lt;p&gt;If there&amp;#39;s one thing technical authors have in common, it&amp;#39;s that they all want to help other people. The question is how to achieve that most effectively. In my &lt;a href=&quot;../the-story-so-far&quot;&gt;previous post&lt;/a&gt; I discussed how I have fared with my first effort so far. The results have been mixed. Community response has been amazing in many ways but that hasn&amp;#39;t translated to amazing sales. That said I&amp;#39;m grateful to all that have contributed. In the end sales enable further efforts.&lt;/p&gt;
&lt;p&gt;I was likely naive in thinking that having the content freely available while offering a way to purchase a digital copy would work by default. The greatest benefit of this approach has been possible extra visibility (easy to link) and the amount of external contributions. I believe this has improved the quality of the book further than I could have ever achieved alone. Next time around I might have a group of people that are interested in pushing the content straight from the start!&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#current-publishing-solutions&quot; id=&quot;current-publishing-solutions&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Current Publishing Solutions&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#current-publishing-solutions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As an author you have a couple of options. You can try to pitch your idea to an established publisher. They would take care of the logistics, provide editing and help with the marketing and sales efforts. In return they would take a significant chunk of the profit. Normally you can expect a royalty between 15 and 50 percent per sale depending on the publisher. If you are a tough negotiator you can receive an advance. That will help to fund authoring and will be deduced from potential profits.&lt;/p&gt;
&lt;p&gt;Another option is to self-publish. You will take care of the bits a traditional publisher would. In return you receive a larger chunk of the profit but on the downside you have more work ahead of you. Especially as a first time author this will include some additional risk as you have to learn these things. If you don&amp;#39;t have a pre-existing audience you will have to earn it. More established authors have an advantage here.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#self-publishing-approaches&quot; id=&quot;self-publishing-approaches&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Self-publishing Approaches&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#self-publishing-approaches&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you choose self-publishing you have some additional alternatives. You can do it the old fashioned way. First you find the potential reader somehow, demonstrate the value and close the sale. This isn&amp;#39;t the only way, though. Making the content freely available makes the sales effort voluntary. You can gain value, consider it zero and move along.&lt;/p&gt;
&lt;p&gt;You can also try to compromise between these ends. Having some of the content available may encourage the potential reader to purchase the rest. You can also refine the content into different formats (audio/video) and aim to produce most of the income through that. A book can give you certain amount of prestige and lead to consulting opportunities.&lt;/p&gt;
&lt;p&gt;The biggest benefit of having the content freely available is that it becomes easy to share it. It won&amp;#39;t feel like selling. You can gently point towards your content without feeling too bad. Your readers can contribute directly without having to go through an errata process. Business-wise the problem is that you are relying on generosity.&lt;/p&gt;
&lt;p&gt;If you want something equivalent to an advance, there are a couple of alternatives. Platforms such as &lt;a href=&quot;https://www.kickstarter.com/&quot;&gt;Kickstarter&lt;/a&gt; or &lt;a href=&quot;https://www.indiegogo.com/&quot;&gt;Indiegogo&lt;/a&gt; have become popular. Essentially they provide one way to receive pre-sales and validate the concept. Platforms such as &lt;a href=&quot;https://www.patreon.com/&quot;&gt;Patreon&lt;/a&gt; allow you to receive donations that can contribute towards your efforts. Feasibility of these depends upon your legislation.&lt;/p&gt;
&lt;p&gt;To measure potential interest before moving on with your idea you can set up a light landing page. There are services such as &lt;a href=&quot;https://www.launchrock.com/&quot;&gt;Launchrock&lt;/a&gt; that will allow you to set up one easily. You can start gathering emails of the interested readers and begin to build your audience. I went the hard way and build a site of my own but that doesn&amp;#39;t mean you have to.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#an-alternative-self-publishing-approach&quot; id=&quot;an-alternative-self-publishing-approach&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;An Alternative Self-publishing Approach&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#an-alternative-self-publishing-approach&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given it is not possible for me to leverage donations or crowdfunding without potential trouble I started thinking about alternatives. It seems to me it should be possible to merge some of the best features of both open and closed approaches.&lt;/p&gt;
&lt;p&gt;I like how open approach fosters contribution. It is encouraging and helps you to refine your content better faster. The problem is that it is difficult to demonstrate value and convert that into sales. The closed approach doesn&amp;#39;t have that problem but contributing won&amp;#39;t be as easy. In addition linking to content isn&amp;#39;t going to work by definition.&lt;/p&gt;
&lt;p&gt;What if it was possible to take a bit of open, a bit of closed and a bit of Kickstarter, mix it together and end up with something that works for both authors and readers? I imagine it could work as a graduation process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A book idea is identified based on community demand. You as an author pick it up, perform further market study on it and decide to proceed based on that.&lt;/li&gt;
&lt;li&gt;The book will get started in a closed incubator (private GitHub repository for instance) and pre-sales begin. Early adopters will receive access to the content and will be able to contribute towards development of the book.&lt;/li&gt;
&lt;li&gt;After a predefined sales threshold is reached (Kickstarter bit) the book content will become available to the public. To make sure book content becomes open despite the sales, a time limit (a year or two?) can be set after which it will become open.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The idea is that by starting closed you provide incentive for early adopters to buy due to exclusivity. Just being able to contribute towards the development of the book can be a good incentive. You will still get contributions just like in an open model. This requires a certain level of trust, however. What if someone forks the content and runs with it?&lt;/p&gt;
&lt;p&gt;The Kickstarter bit is there to push community towards a common goal. Open content is valuable as it will allow people to access knowledge regardless of their income. It is a shame to see old books become forgotten due to long copyright terms. The time limit is a way to work against this.&lt;/p&gt;
&lt;p&gt;Too often good technical books become obsolete in a blink. Having them maintained by the community that uses them actively seems like a good idea to me. After all this is the way open source has proven to work.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Perhaps hitting some kind of a balance between open and closed ways of publishing would pave way for more technical authors. In addition it should help in keeping the content fresh. That is a problem that plagues technical books in particular. Technology tends to be a moving target and having books with better longevity isn&amp;#39;t a bad goal.&lt;/p&gt;
&lt;p&gt;I believe an alternative model such as this could help to alleviate some of the risks involved. I am certain there are problems I am overlooking. But based on what I&amp;#39;ve seen perhaps it could work. What do you think?&lt;/p&gt;
</content></entry><entry ><title >SurviveJS - The Story So Far</title><id >asurvivejsthestorysofar2015-07-13t00:00:00+03:00</id><link href="http://survivejs.com/blog/the-story-so-far"></link><updated >2015-07-13T00:00:00+03:00</updated><content type="html">&lt;p&gt;Given I&amp;#39;m a first time author I&amp;#39;ve done my fair share of mistakes with &lt;a href=&quot;http://survivejs.com/&quot;&gt;SurviveJS - Webpack and React&lt;/a&gt;. It was an attempt to change the direction of my career. Being a subcontractor&amp;#39;s subcontractor provides income, sure, but was a dead end for me with no room to grow in an economy that keeps getting tougher. Interestingly the book has garnered a lot of attention and I believe some have found it useful. It has been bit of a disaster economically and it&amp;#39;s hard to imagine I could keep a business like this up for long if something doesn&amp;#39;t change.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#why-survivejs-webpack-and-react-was-written-&quot; id=&quot;why-survivejs-webpack-and-react-was-written-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Why SurviveJS - Webpack and React Was Written?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#why-survivejs-webpack-and-react-was-written-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first steps towards the book were taken at the end of January. I happened upon &lt;a href=&quot;https://christianalfoni.github.io/javascript/2014/12/13/did-you-know-webpack-and-react-is-awesome.html&quot;&gt;a blog post about Webpack by Christian Alfoni&lt;/a&gt;. As I had worked with webpack and React earlier I of course couldn&amp;#39;t resist commenting. I even proposed that it would be nice if there was a cookbook about the topic. The comment has been lost to the history but Christian took on my initiative. As a result &lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot;&gt;react-webpack-cookbook&lt;/a&gt; was born.&lt;/p&gt;
&lt;p&gt;We worked on it together for a few weeks and I started to realize there&amp;#39;s demand. It would have saved me so much time if someone had gathered this information to one place. As a result I poked a contact of mine at a quite known book publisher that pays decent royalties. And so the negotiations began. We negotiated till early April but in the end the publisher wasn&amp;#39;t interested. We failed at writing style.&lt;/p&gt;
&lt;p&gt;That could have been the end of the story but the opportunity seemed too good to miss. There was a clear demand for a book. Why not to write it? As Christian got busy with work and I was getting increasingly frustrated with my situation I decided to channel the frustration towards something constructive and so I started writing the book. Sometimes you have to go &amp;quot;all in&amp;quot; no matter what.&lt;/p&gt;
&lt;p&gt;As I didn&amp;#39;t feel like going through another round of negotiations with other publishers and I was aware of &lt;a href=&quot;https://leanpub.com/&quot;&gt;Leanpub&lt;/a&gt; I decided to pick them. Early on I agreed with Christian to keep the material open. I was a bit hesitant at first but the approach has shown some of its benefits. I&amp;#39;m still a bit unsure about the financial part, though.&lt;/p&gt;
&lt;p&gt;The nice thing about Leanpub is that it allows you to test the market so to speak. I actually released the initial, raw version of the book for free and slowly but surely started to bump up the price as the content matured. That allowed me to gauge interest in the topic. One day Leanpub decided to feature the book and this in turn converted to a nice amount of sales. It always gives you an extra dose of motivation to see people actually appreciate your work.&lt;/p&gt;
&lt;p&gt;An alternative would have been to start pre-sales through a platform such as &lt;a href=&quot;https://www.kickstarter.com/&quot;&gt;Kickstarter&lt;/a&gt;. Unfortunately that was not an option for me as a finn given our legislation is against it. There are strict regulations against donations to protect citizens against fraud. Even though understandable it can be a little restricting at times.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#where-i-failed-&quot; id=&quot;where-i-failed-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Where I Failed?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#where-i-failed-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Having the content &lt;a href=&quot;https://github.com/survivejs/webpack_react&quot;&gt;out in the open&lt;/a&gt; has resulted in numerous external contributions. I believe this has contributed towards the quality of the book immensely and will continue to do so. But here lies the great conundrum. Why would you pay for something that&amp;#39;s freely available?&lt;/p&gt;
&lt;p&gt;So far the book has earned around $1177 excluding Leanpub&amp;#39;s cut (10% + $0.50 per sale). After all the middlemen (PayPal, government, co-op) get their cut and taxes have been paid, that translates to 614 euros. That would be even less if I earned more per year due to the way tax progression works. It would have been more profitable for me to fiddle my thumbs at home and live on social security.&lt;/p&gt;
&lt;p&gt;The big question is can this situation be changed somehow? I would of course love to keep on developing content. The goofy prefix &lt;code&gt;SurviveJS&lt;/code&gt; implies a series of book. But if I can expect profits like this it just doesn&amp;#39;t make any sense economically. Even though I write because I want to write I still need to make enough to have butter on my bread.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#what-next-&quot; id=&quot;what-next-&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;What Next?&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#what-next-&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The initial plan was that people that feel they get value out of the book would buy the digital version to help fund the maintenance effort and development of new content. Unfortunately this isn&amp;#39;t working out as you can see from the figures above. Sure, the book might generate some income but nowhere enough to make this worth it financially.&lt;/p&gt;
&lt;p&gt;As far as I can see there are a few options. The easiest option would be just to give up and move onto something more profitable. I had a good run but it wasn&amp;#39;t enough this time. End of story. That would be a silly way to end this, though.&lt;/p&gt;
&lt;p&gt;As donations are illegal that rules out Kickstarter, Patreon and such. I can see these approach have worked for many but unfortunately it&amp;#39;s not possible here.&lt;/p&gt;
&lt;p&gt;I could stop maintaining the open content while putting all the effort to a superior, commercial version. I feel this might result in a lot of bad karma, though. That said I could develop commercial content on top of the free content and sell that perhaps.&lt;/p&gt;
&lt;h2 class=&quot;header&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot; id=&quot;conclusion&quot;&gt;&lt;/a&gt;&lt;span class=&quot;text&quot;&gt;Conclusion&lt;/span&gt;&lt;a class=&quot;header-anchor-select&quot; href=&quot;#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even though the book has been a success in some ways and exposed people to webpack and React, unfortunately it has failed in the only way that matters in the end. If there&amp;#39;s not a sustainable source of income it is hard to justify the effort financially. I would love to develop more content but if the invisible hand decides it&amp;#39;s not possible, then it&amp;#39;s not.&lt;/p&gt;
&lt;p&gt;In the end if we want to keep this project alive we&amp;#39;ll need to climb that final, financial hurdle. It is the hardest hurdle for me as I may have to bend on some of my principles. How is it possible to combine open content and business?&lt;/p&gt;
</content></entry></feed>